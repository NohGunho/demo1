{"ast":null,"code":"import _classCallCheck from \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/src/app/pages/home/react-bootstrap/AlertExamplesPage.js\";\nimport React from \"react\";\nimport Notice from \"../../../partials/content/Notice\";\nimport CodeExample from \"../../../partials/content/CodeExample\";\nimport { Alert, Button } from \"react-bootstrap\";\n\nvar AlertDismissible =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AlertDismissible, _React$Component);\n\n  function AlertDismissible(props) {\n    var _this;\n\n    _classCallCheck(this, AlertDismissible);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AlertDismissible).call(this, props));\n    _this.state = {\n      show: true\n    };\n    return _this;\n  }\n\n  _createClass(AlertDismissible, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var handleHide = function handleHide() {\n        return _this2.setState({\n          show: false\n        });\n      };\n\n      var handleShow = function handleShow() {\n        return _this2.setState({\n          show: true\n        });\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(Alert, {\n        show: this.state.show,\n        variant: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Alert.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"How's it going?!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras mattis consectetur purus sit amet fermentum.\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: handleHide,\n        variant: \"outline-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Close me ya'll!\"))), !this.state.show && React.createElement(Button, {\n        onClick: handleShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Show Alert\"));\n    }\n  }]);\n\n  return AlertDismissible;\n}(React.Component);\n\nvar AlertDismissibleExample =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(AlertDismissibleExample, _React$Component2);\n\n  function AlertDismissibleExample(props) {\n    var _this3;\n\n    _classCallCheck(this, AlertDismissibleExample);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(AlertDismissibleExample).call(this, props));\n    _this3.state = {\n      show: true\n    };\n    return _this3;\n  }\n\n  _createClass(AlertDismissibleExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var handleDismiss = function handleDismiss() {\n        return _this4.setState({\n          show: false\n        });\n      };\n\n      var handleShow = function handleShow() {\n        return _this4.setState({\n          show: true\n        });\n      };\n\n      if (this.state.show) {\n        return React.createElement(Alert, {\n          variant: \"danger\",\n          onClose: handleDismiss,\n          dismissible: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(Alert.Heading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Oh snap! You got an error!\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Change this and that and try again. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras mattis consectetur purus sit amet fermentum.\"));\n      }\n\n      return React.createElement(Button, {\n        onClick: handleShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Show Alert\");\n    }\n  }]);\n\n  return AlertDismissibleExample;\n}(React.Component);\n\nvar AlertExamplesPage =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(AlertExamplesPage, _React$Component3);\n\n  function AlertExamplesPage() {\n    _classCallCheck(this, AlertExamplesPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AlertExamplesPage).apply(this, arguments));\n  }\n\n  _createClass(AlertExamplesPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Notice, {\n        icon: \"flaticon-warning kt-font-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"For more info please check the components's official\", \" \", React.createElement(\"a\", {\n        target: \"_blank\",\n        className: \"kt-link\",\n        rel: \"noopener noreferrer\",\n        href: \"https://react-bootstrap.github.io/components/alerts/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"demos & documentation\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode1,\n        beforeCodeTitle: \"Examples\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Alerts are available for any length of text, as well as an optional dismiss button. For proper styling, use one of the eight \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"variant\"), \"s.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"dark\"].map(function (variant, idx) {\n        return React.createElement(Alert, {\n          key: idx,\n          variant: variant,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"This is a \", variant, \" alert\\u2014check it out!\");\n      })))), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode2,\n        beforeCodeTitle: \"Links\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"For links, use the \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"<Alert.Link>\"), \" component to provide matching colored links within any alert.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"dark\"].map(function (variant, idx) {\n        return React.createElement(Alert, {\n          key: idx,\n          variant: variant,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"This is a \", variant, \" alert with \\xA0\", React.createElement(Alert.Link, {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"an example link\"), \". Give it a click if you like.\");\n      }))))), React.createElement(CodeExample, {\n        jsCode: jsCode3,\n        beforeCodeTitle: \"Additional content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Alerts can contain whatever content you like. Headers, paragraphs, dividers, go crazy.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(Alert, {\n        variant: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Alert.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Hey, nice to see you\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\")))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode4,\n        beforeCodeTitle: \"Dismissing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Add the \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"dismissible\"), \" prop to add a functioning dismiss button to the Alert.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(AlertDismissibleExample, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode5,\n        beforeCodeTitle: \"Dismissing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"You can also control the visual state directly which is great if you want to build more complicated alerts.\")), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(AlertDismissible, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return AlertExamplesPage;\n}(React.Component);\n\nexport { AlertExamplesPage as default };\nvar jsCode1 = \"\\n[\\n  'primary',\\n  'secondary',\\n  'success',\\n  'danger',\\n  'warning',\\n  'info',\\n  'light',\\n  'dark',\\n].map((variant, idx) => (\\n  <Alert key={idx} variant={variant}>\\n    This is a {variant} alert\\u2014check it out!\\n  </Alert>\\n));\\n\";\nvar jsCode2 = \"\\n[\\n  'primary',\\n  'secondary',\\n  'success',\\n  'danger',\\n  'warning',\\n  'info',\\n  'light',\\n  'dark',\\n].map((variant, idx) => (\\n  <Alert key={idx} variant={variant}>\\n    This is a {variant} alert with{' '}\\n    <Alert.Link href=\\\"#\\\">an example link</Alert.Link>. Give it a click if you\\n    like.\\n  </Alert>\\n));\\n\";\nvar jsCode3 = \"\\n<Alert variant=\\\"success\\\">\\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\\n  <p>\\n    Aww yeah, you successfully read this important alert message. This example\\n    text is going to run a bit longer so that you can see how spacing within an\\n    alert works with this kind of content.\\n  </p>\\n  <hr />\\n  <p className=\\\"mb-0\\\">\\n    Whenever you need to, be sure to use margin utilities to keep things nice\\n    and tidy.\\n  </p>\\n</Alert>\\n\";\nvar jsCode4 = \"\\nclass AlertDismissibleExample extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      show: true,\\n    };\\n  }\\n\\n  render() {\\n    const handleDismiss = () => this.setState({ show: false });\\n    const handleShow = () => this.setState({ show: true });\\n    if (this.state.show) {\\n      return (\\n        <Alert variant=\\\"danger\\\" onClose={handleDismiss} dismissible>\\n          <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\\n          <p>\\n            Change this and that and try again. Duis mollis, est non commodo\\n            luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\\n            Cras mattis consectetur purus sit amet fermentum.\\n          </p>\\n        </Alert>\\n      );\\n    }\\n    return <Button onClick={handleShow}>Show Alert</Button>;\\n  }\\n}\\n\\nrender(<AlertDismissibleExample />);\\n\";\nvar jsCode5 = \"\\nclass AlertDismissible extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = { show: true };\\n  }\\n\\n  render() {\\n    const handleHide = () => this.setState({ show: false });\\n    const handleShow = () => this.setState({ show: true });\\n    return (\\n      <>\\n        <Alert show={this.state.show} variant=\\\"success\\\">\\n          <Alert.Heading>How's it going?!</Alert.Heading>\\n          <p>\\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula,\\n            eget lacinia odio sem nec elit. Cras mattis consectetur purus sit\\n            amet fermentum.\\n          </p>\\n          <hr />\\n          <div className=\\\"d-flex justify-content-end\\\">\\n            <Button onClick={handleHide} variant=\\\"outline-success\\\">\\n              Close me ya'll!\\n            </Button>\\n          </div>\\n        </Alert>\\n\\n        {!this.state.show && <Button onClick={handleShow}>Show Alert</Button>}\\n      </>\\n    );\\n  }\\n}\\n\\nrender(<AlertDismissible />);\\n\";","map":{"version":3,"sources":["/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/src/app/pages/home/react-bootstrap/AlertExamplesPage.js"],"names":["React","Notice","CodeExample","Alert","Button","AlertDismissible","props","state","show","handleHide","setState","handleShow","Component","AlertDismissibleExample","handleDismiss","AlertExamplesPage","jsCode1","map","variant","idx","jsCode2","jsCode3","jsCode4","jsCode5"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Notice from \"../../../partials/content/Notice\";\r\nimport CodeExample from \"../../../partials/content/CodeExample\";\r\nimport { Alert, Button } from \"react-bootstrap\";\r\n\r\nclass AlertDismissible extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { show: true };\r\n  }\r\n\r\n  render() {\r\n    const handleHide = () => this.setState({ show: false });\r\n    const handleShow = () => this.setState({ show: true });\r\n    return (\r\n      <>\r\n        <Alert show={this.state.show} variant=\"success\">\r\n          <Alert.Heading>How's it going?!</Alert.Heading>\r\n          <p>\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula,\r\n            eget lacinia odio sem nec elit. Cras mattis consectetur purus sit\r\n            amet fermentum.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button onClick={handleHide} variant=\"outline-success\">\r\n              Close me ya'll!\r\n            </Button>\r\n          </div>\r\n        </Alert>\r\n\r\n        {!this.state.show && <Button onClick={handleShow}>Show Alert</Button>}\r\n      </>\r\n    );\r\n  }\r\n}\r\nclass AlertDismissibleExample extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const handleDismiss = () => this.setState({ show: false });\r\n    const handleShow = () => this.setState({ show: true });\r\n    if (this.state.show) {\r\n      return (\r\n        <Alert variant=\"danger\" onClose={handleDismiss} dismissible>\r\n          <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n          <p>\r\n            Change this and that and try again. Duis mollis, est non commodo\r\n            luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\r\n            Cras mattis consectetur purus sit amet fermentum.\r\n          </p>\r\n        </Alert>\r\n      );\r\n    }\r\n    return <Button onClick={handleShow}>Show Alert</Button>;\r\n  }\r\n}\r\n\r\nexport default class AlertExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning kt-font-primary\">\r\n          <p>\r\n            Provide contextual feedback messages for typical user actions with\r\n            the handful of available and flexible alert messages.\r\n          </p>\r\n          <p>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"kt-link\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/alerts/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </p>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode1} beforeCodeTitle=\"Examples\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  Alerts are available for any length of text, as well as an\r\n                  optional dismiss button. For proper styling, use one of the\r\n                  eight <code>variant</code>s.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\"></div>\r\n                {[\r\n                  \"primary\",\r\n                  \"secondary\",\r\n                  \"success\",\r\n                  \"danger\",\r\n                  \"warning\",\r\n                  \"info\",\r\n                  \"light\",\r\n                  \"dark\"\r\n                ].map((variant, idx) => (\r\n                  <Alert key={idx} variant={variant}>\r\n                    This is a {variant} alert—check it out!\r\n                  </Alert>\r\n                ))}\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode2} beforeCodeTitle=\"Links\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  For links, use the <code>&lt;Alert.Link&gt;</code> component\r\n                  to provide matching colored links within any alert.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\"></div>\r\n                {[\r\n                  \"primary\",\r\n                  \"secondary\",\r\n                  \"success\",\r\n                  \"danger\",\r\n                  \"warning\",\r\n                  \"info\",\r\n                  \"light\",\r\n                  \"dark\"\r\n                ].map((variant, idx) => (\r\n                  <Alert key={idx} variant={variant}>\r\n                    This is a {variant} alert with &nbsp;\r\n                    <Alert.Link href=\"#\">an example link</Alert.Link>. Give it a\r\n                    click if you like.\r\n                  </Alert>\r\n                ))}\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n        </div>\r\n\r\n        <CodeExample jsCode={jsCode3} beforeCodeTitle=\"Additional content\">\r\n          <div className=\"kt-section\">\r\n            <span className=\"kt-section__sub\">\r\n              Alerts can contain whatever content you like. Headers, paragraphs,\r\n              dividers, go crazy.\r\n            </span>\r\n            <div className=\"kt-separator kt-separator--dashed\"></div>\r\n            <Alert variant=\"success\">\r\n              <Alert.Heading>Hey, nice to see you</Alert.Heading>\r\n              <p>\r\n                Aww yeah, you successfully read this important alert message.\r\n                This example text is going to run a bit longer so that you can\r\n                see how spacing within an alert works with this kind of content.\r\n              </p>\r\n              <hr />\r\n              <p className=\"mb-0\">\r\n                Whenever you need to, be sure to use margin utilities to keep\r\n                things nice and tidy.\r\n              </p>\r\n            </Alert>\r\n          </div>\r\n        </CodeExample>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode4} beforeCodeTitle=\"Dismissing\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  Add the <code>dismissible</code> prop to add a functioning\r\n                  dismiss button to the Alert.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\"></div>\r\n                <AlertDismissibleExample />\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode5} beforeCodeTitle=\"Dismissing\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  You can also control the visual state directly which is great\r\n                  if you want to build more complicated alerts.\r\n                </span>\r\n              </div>\r\n              <div className=\"kt-separator kt-separator--dashed\"></div>\r\n              <div className=\"kt-section\">\r\n                <AlertDismissible />\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n[\r\n  'primary',\r\n  'secondary',\r\n  'success',\r\n  'danger',\r\n  'warning',\r\n  'info',\r\n  'light',\r\n  'dark',\r\n].map((variant, idx) => (\r\n  <Alert key={idx} variant={variant}>\r\n    This is a {variant} alert—check it out!\r\n  </Alert>\r\n));\r\n`;\r\nconst jsCode2 = `\r\n[\r\n  'primary',\r\n  'secondary',\r\n  'success',\r\n  'danger',\r\n  'warning',\r\n  'info',\r\n  'light',\r\n  'dark',\r\n].map((variant, idx) => (\r\n  <Alert key={idx} variant={variant}>\r\n    This is a {variant} alert with{' '}\r\n    <Alert.Link href=\"#\">an example link</Alert.Link>. Give it a click if you\r\n    like.\r\n  </Alert>\r\n));\r\n`;\r\nconst jsCode3 = `\r\n<Alert variant=\"success\">\r\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\r\n  <p>\r\n    Aww yeah, you successfully read this important alert message. This example\r\n    text is going to run a bit longer so that you can see how spacing within an\r\n    alert works with this kind of content.\r\n  </p>\r\n  <hr />\r\n  <p className=\"mb-0\">\r\n    Whenever you need to, be sure to use margin utilities to keep things nice\r\n    and tidy.\r\n  </p>\r\n</Alert>\r\n`;\r\nconst jsCode4 = `\r\nclass AlertDismissibleExample extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const handleDismiss = () => this.setState({ show: false });\r\n    const handleShow = () => this.setState({ show: true });\r\n    if (this.state.show) {\r\n      return (\r\n        <Alert variant=\"danger\" onClose={handleDismiss} dismissible>\r\n          <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n          <p>\r\n            Change this and that and try again. Duis mollis, est non commodo\r\n            luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\r\n            Cras mattis consectetur purus sit amet fermentum.\r\n          </p>\r\n        </Alert>\r\n      );\r\n    }\r\n    return <Button onClick={handleShow}>Show Alert</Button>;\r\n  }\r\n}\r\n\r\nrender(<AlertDismissibleExample />);\r\n`;\r\nconst jsCode5 = `\r\nclass AlertDismissible extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { show: true };\r\n  }\r\n\r\n  render() {\r\n    const handleHide = () => this.setState({ show: false });\r\n    const handleShow = () => this.setState({ show: true });\r\n    return (\r\n      <>\r\n        <Alert show={this.state.show} variant=\"success\">\r\n          <Alert.Heading>How's it going?!</Alert.Heading>\r\n          <p>\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula,\r\n            eget lacinia odio sem nec elit. Cras mattis consectetur purus sit\r\n            amet fermentum.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button onClick={handleHide} variant=\"outline-success\">\r\n              Close me ya'll!\r\n            </Button>\r\n          </div>\r\n        </Alert>\r\n\r\n        {!this.state.show && <Button onClick={handleShow}>Show Alert</Button>}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<AlertDismissible />);\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}