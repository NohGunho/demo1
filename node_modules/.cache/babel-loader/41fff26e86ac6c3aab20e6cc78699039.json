{"ast":null,"code":"/*\n Highcharts JS v6.0.4 (2017-12-15)\n Highcharts Drilldown module\n\n Author: Torstein Honsi\n License: www.highcharts.com/license\n\n*/\n(function (m) {\n  \"object\" === typeof module && module.exports ? module.exports = m : m(Highcharts);\n})(function (m) {\n  (function (f) {\n    var m = f.animObject,\n        z = f.noop,\n        A = f.color,\n        B = f.defaultOptions,\n        l = f.each,\n        r = f.extend,\n        H = f.format,\n        C = f.objectEach,\n        v = f.pick,\n        t = f.wrap,\n        q = f.Chart,\n        w = f.seriesTypes,\n        D = w.pie,\n        u = w.column,\n        E = f.Tick,\n        x = f.fireEvent,\n        F = f.inArray,\n        G = 1;\n    r(B.lang, {\n      drillUpText: \"\\u25C1 Back to {series.name}\"\n    });\n    B.drilldown = {\n      activeAxisLabelStyle: {\n        cursor: \"pointer\",\n        color: \"#003399\",\n        fontWeight: \"bold\",\n        textDecoration: \"underline\"\n      },\n      activeDataLabelStyle: {\n        cursor: \"pointer\",\n        color: \"#003399\",\n        fontWeight: \"bold\",\n        textDecoration: \"underline\"\n      },\n      animation: {\n        duration: 500\n      },\n      drillUpButton: {\n        position: {\n          align: \"right\",\n          x: -10,\n          y: 10\n        }\n      }\n    };\n\n    f.SVGRenderer.prototype.Element.prototype.fadeIn = function (a) {\n      this.attr({\n        opacity: .1,\n        visibility: \"inherit\"\n      }).animate({\n        opacity: v(this.newOpacity, 1)\n      }, a || {\n        duration: 250\n      });\n    };\n\n    q.prototype.addSeriesAsDrilldown = function (a, b) {\n      this.addSingleSeriesAsDrilldown(a, b);\n      this.applyDrilldown();\n    };\n\n    q.prototype.addSingleSeriesAsDrilldown = function (a, b) {\n      var d = a.series,\n          c = d.xAxis,\n          e = d.yAxis,\n          g,\n          k = [],\n          n = [],\n          h,\n          p,\n          m;\n      m = {\n        color: a.color || d.color\n      };\n      this.drilldownLevels || (this.drilldownLevels = []);\n      h = d.options._levelNumber || 0;\n      (p = this.drilldownLevels[this.drilldownLevels.length - 1]) && p.levelNumber !== h && (p = void 0);\n      b = r(r({\n        _ddSeriesId: G++\n      }, m), b);\n      g = F(a, d.points);\n      l(d.chart.series, function (a) {\n        a.xAxis !== c || a.isDrilling || (a.options._ddSeriesId = a.options._ddSeriesId || G++, a.options._colorIndex = a.userOptions._colorIndex, a.options._levelNumber = a.options._levelNumber || h, p ? (k = p.levelSeries, n = p.levelSeriesOptions) : (k.push(a), n.push(a.options)));\n      });\n      a = r({\n        levelNumber: h,\n        seriesOptions: d.options,\n        levelSeriesOptions: n,\n        levelSeries: k,\n        shapeArgs: a.shapeArgs,\n        bBox: a.graphic ? a.graphic.getBBox() : {},\n        color: a.isNull ? new f.Color(A).setOpacity(0).get() : A,\n        lowerSeriesOptions: b,\n        pointOptions: d.options.data[g],\n        pointIndex: g,\n        oldExtremes: {\n          xMin: c && c.userMin,\n          xMax: c && c.userMax,\n          yMin: e && e.userMin,\n          yMax: e && e.userMax\n        },\n        resetZoomButton: this.resetZoomButton\n      }, m);\n      this.drilldownLevels.push(a);\n      c && c.names && (c.names.length = 0);\n      b = a.lowerSeries = this.addSeries(b, !1);\n      b.options._levelNumber = h + 1;\n      c && (c.oldPos = c.pos, c.userMin = c.userMax = null, e.userMin = e.userMax = null);\n      d.type === b.type && (b.animate = b.animateDrilldown || z, b.options.animation = !0);\n    };\n\n    q.prototype.applyDrilldown = function () {\n      var a = this.drilldownLevels,\n          b;\n      a && 0 < a.length && (b = a[a.length - 1].levelNumber, l(this.drilldownLevels, function (a) {\n        a.levelNumber === b && l(a.levelSeries, function (a) {\n          a.options && a.options._levelNumber === b && a.remove(!1);\n        });\n      }));\n      this.resetZoomButton && (this.resetZoomButton.hide(), delete this.resetZoomButton);\n      this.pointer.reset();\n      this.redraw();\n      this.showDrillUpButton();\n    };\n\n    q.prototype.getDrilldownBackText = function () {\n      var a = this.drilldownLevels;\n      if (a && 0 < a.length) return a = a[a.length - 1], a.series = a.seriesOptions, H(this.options.lang.drillUpText, a);\n    };\n\n    q.prototype.showDrillUpButton = function () {\n      var a = this,\n          b = this.getDrilldownBackText(),\n          d = a.options.drilldown.drillUpButton,\n          c,\n          e;\n      this.drillUpButton ? this.drillUpButton.attr({\n        text: b\n      }).align() : (e = (c = d.theme) && c.states, this.drillUpButton = this.renderer.button(b, null, null, function () {\n        a.drillUp();\n      }, c, e && e.hover, e && e.select).addClass(\"highcharts-drillup-button\").attr({\n        align: d.position.align,\n        zIndex: 7\n      }).add().align(d.position, !1, d.relativeTo || \"plotBox\"));\n    };\n\n    q.prototype.drillUp = function () {\n      for (var a = this, b = a.drilldownLevels, d = b[b.length - 1].levelNumber, c = b.length, e = a.series, g, k, f, h, p = function p(b) {\n        var c;\n        l(e, function (a) {\n          a.options._ddSeriesId === b._ddSeriesId && (c = a);\n        });\n        c = c || a.addSeries(b, !1);\n        c.type === f.type && c.animateDrillupTo && (c.animate = c.animateDrillupTo);\n        b === k.seriesOptions && (h = c);\n      }; c--;) {\n        if (k = b[c], k.levelNumber === d) {\n          b.pop();\n          f = k.lowerSeries;\n          if (!f.chart) for (g = e.length; g--;) {\n            if (e[g].options.id === k.lowerSeriesOptions.id && e[g].options._levelNumber === d + 1) {\n              f = e[g];\n              break;\n            }\n          }\n          f.xData = [];\n          l(k.levelSeriesOptions, p);\n          x(a, \"drillup\", {\n            seriesOptions: k.seriesOptions\n          });\n          h.type === f.type && (h.drilldownLevel = k, h.options.animation = a.options.drilldown.animation, f.animateDrillupFrom && f.chart && f.animateDrillupFrom(k));\n          h.options._levelNumber = d;\n          f.remove(!1);\n          h.xAxis && (g = k.oldExtremes, h.xAxis.setExtremes(g.xMin, g.xMax, !1), h.yAxis.setExtremes(g.yMin, g.yMax, !1));\n          k.resetZoomButton && (a.resetZoomButton = k.resetZoomButton, a.resetZoomButton.show());\n        }\n      }\n\n      x(a, \"drillupall\");\n      this.redraw();\n      0 === this.drilldownLevels.length ? this.drillUpButton = this.drillUpButton.destroy() : this.drillUpButton.attr({\n        text: this.getDrilldownBackText()\n      }).align();\n      this.ddDupes.length = [];\n    };\n\n    t(q.prototype, \"showResetZoom\", function (a) {\n      this.drillUpButton || a.apply(this, Array.prototype.slice.call(arguments, 1));\n    });\n\n    u.prototype.animateDrillupTo = function (a) {\n      if (!a) {\n        var b = this,\n            d = b.drilldownLevel;\n        l(this.points, function (a) {\n          var b = a.dataLabel;\n          a.graphic && a.graphic.hide();\n          b && (b.hidden = \"hidden\" === b.attr(\"visibility\"), b.hidden || (b.hide(), a.connector && a.connector.hide()));\n        });\n        f.syncTimeout(function () {\n          b.points && l(b.points, function (a, b) {\n            b = b === (d && d.pointIndex) ? \"show\" : \"fadeIn\";\n            var c = \"show\" === b ? !0 : void 0,\n                e = a.dataLabel;\n            if (a.graphic) a.graphic[b](c);\n            e && !e.hidden && (e.fadeIn(), a.connector && a.connector.fadeIn());\n          });\n        }, Math.max(this.chart.options.drilldown.animation.duration - 50, 0));\n        this.animate = z;\n      }\n    };\n\n    u.prototype.animateDrilldown = function (a) {\n      var b = this,\n          d = this.chart.drilldownLevels,\n          c,\n          e = m(this.chart.options.drilldown.animation),\n          g = this.xAxis;\n      a || (l(d, function (a) {\n        b.options._ddSeriesId === a.lowerSeriesOptions._ddSeriesId && (c = a.shapeArgs, c.fill = a.color);\n      }), c.x += v(g.oldPos, g.pos) - g.pos, l(this.points, function (a) {\n        a.shapeArgs.fill = a.color;\n        a.graphic && a.graphic.attr(c).animate(r(a.shapeArgs, {\n          fill: a.color || b.color\n        }), e);\n        a.dataLabel && a.dataLabel.fadeIn(e);\n      }), this.animate = null);\n    };\n\n    u.prototype.animateDrillupFrom = function (a) {\n      var b = m(this.chart.options.drilldown.animation),\n          d = this.group,\n          c = d !== this.chart.columnGroup,\n          e = this;\n      l(e.trackerGroups, function (a) {\n        if (e[a]) e[a].on(\"mouseover\");\n      });\n      c && delete this.group;\n      l(this.points, function (e) {\n        var g = e.graphic,\n            n = a.shapeArgs,\n            h = function h() {\n          g.destroy();\n          d && c && (d = d.destroy());\n        };\n\n        g && (delete e.graphic, n.fill = a.color, b.duration ? g.animate(n, f.merge(b, {\n          complete: h\n        })) : (g.attr(n), h()));\n      });\n    };\n\n    D && r(D.prototype, {\n      animateDrillupTo: u.prototype.animateDrillupTo,\n      animateDrillupFrom: u.prototype.animateDrillupFrom,\n      animateDrilldown: function animateDrilldown(a) {\n        var b = this.chart.drilldownLevels[this.chart.drilldownLevels.length - 1],\n            d = this.chart.options.drilldown.animation,\n            c = b.shapeArgs,\n            e = c.start,\n            g = (c.end - e) / this.points.length;\n        a || (l(this.points, function (a, n) {\n          var h = a.shapeArgs;\n          c.fill = b.color;\n          h.fill = a.color;\n          if (a.graphic) a.graphic.attr(f.merge(c, {\n            start: e + n * g,\n            end: e + (n + 1) * g\n          }))[d ? \"animate\" : \"attr\"](h, d);\n        }), this.animate = null);\n      }\n    });\n\n    f.Point.prototype.doDrilldown = function (a, b, d) {\n      var c = this.series.chart,\n          e = c.options.drilldown,\n          g = (e.series || []).length,\n          f;\n      c.ddDupes || (c.ddDupes = []);\n\n      for (; g-- && !f;) {\n        e.series[g].id === this.drilldown && -1 === F(this.drilldown, c.ddDupes) && (f = e.series[g], c.ddDupes.push(this.drilldown));\n      }\n\n      x(c, \"drilldown\", {\n        point: this,\n        seriesOptions: f,\n        category: b,\n        originalEvent: d,\n        points: void 0 !== b && this.series.xAxis.getDDPoints(b).slice(0)\n      }, function (b) {\n        var c = b.point.series && b.point.series.chart,\n            d = b.seriesOptions;\n        c && d && (a ? c.addSingleSeriesAsDrilldown(b.point, d) : c.addSeriesAsDrilldown(b.point, d));\n      });\n    };\n\n    f.Axis.prototype.drilldownCategory = function (a, b) {\n      C(this.getDDPoints(a), function (d) {\n        d && d.series && d.series.visible && d.doDrilldown && d.doDrilldown(!0, a, b);\n      });\n      this.chart.applyDrilldown();\n    };\n\n    f.Axis.prototype.getDDPoints = function (a) {\n      var b = [];\n      l(this.series, function (d) {\n        var c,\n            e = d.xData,\n            f = d.points;\n\n        for (c = 0; c < e.length; c++) {\n          if (e[c] === a && d.options.data[c] && d.options.data[c].drilldown) {\n            b.push(f ? f[c] : !0);\n            break;\n          }\n        }\n      });\n      return b;\n    };\n\n    E.prototype.drillable = function () {\n      var a = this.pos,\n          b = this.label,\n          d = this.axis,\n          c = \"xAxis\" === d.coll && d.getDDPoints,\n          e = c && d.getDDPoints(a);\n      c && (b && e.length ? (b.drillable = !0, b.basicStyles || (b.basicStyles = f.merge(b.styles)), b.addClass(\"highcharts-drilldown-axis-label\").css(d.chart.options.drilldown.activeAxisLabelStyle).on(\"click\", function (b) {\n        d.drilldownCategory(a, b);\n      })) : b && b.drillable && (b.styles = {}, b.css(b.basicStyles), b.on(\"click\", null), b.removeClass(\"highcharts-drilldown-axis-label\")));\n    };\n\n    t(E.prototype, \"addLabel\", function (a) {\n      a.call(this);\n      this.drillable();\n    });\n    t(f.Point.prototype, \"init\", function (a, b, d, c) {\n      var e = a.call(this, b, d, c);\n      c = (a = b.xAxis) && a.ticks[c];\n      e.drilldown && f.addEvent(e, \"click\", function (a) {\n        b.xAxis && !1 === b.chart.options.drilldown.allowPointDrilldown ? b.xAxis.drilldownCategory(e.x, a) : e.doDrilldown(void 0, void 0, a);\n      });\n      c && c.drillable();\n      return e;\n    });\n    t(f.Series.prototype, \"drawDataLabels\", function (a) {\n      var b = this.chart.options.drilldown.activeDataLabelStyle,\n          d = this.chart.renderer;\n      a.call(this);\n      l(this.points, function (a) {\n        var c = a.options.dataLabels,\n            f = v(a.dlOptions, c && c.style, {});\n        a.drilldown && a.dataLabel && (\"contrast\" === b.color && (f.color = d.getContrast(a.color || this.color)), c && c.color && (f.color = c.color), a.dataLabel.addClass(\"highcharts-drilldown-data-label\"), a.dataLabel.css(b).css(f));\n      }, this);\n    });\n\n    var y = function y(a, b, d) {\n      a[d ? \"addClass\" : \"removeClass\"](\"highcharts-drilldown-point\");\n      a.css({\n        cursor: b\n      });\n    },\n        I = function I(a) {\n      a.call(this);\n      l(this.points, function (a) {\n        a.drilldown && a.graphic && y(a.graphic, \"pointer\", !0);\n      });\n    },\n        J = function J(a, b) {\n      var d = a.apply(this, Array.prototype.slice.call(arguments, 1));\n      this.drilldown && this.series.halo && \"hover\" === b ? y(this.series.halo, \"pointer\", !0) : this.series.halo && y(this.series.halo, \"auto\", !1);\n      return d;\n    };\n\n    C(w, function (a) {\n      t(a.prototype, \"drawTracker\", I);\n      t(a.prototype.pointClass.prototype, \"setState\", J);\n    });\n  })(m);\n});","map":null,"metadata":{},"sourceType":"script"}