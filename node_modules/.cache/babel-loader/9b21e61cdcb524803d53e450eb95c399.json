{"ast":null,"code":"import _classCallCheck from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/src/app/pages/home/react-bootstrap/SpinnersExamplesPage.js\";\nimport React from \"react\";\nimport Notice from \"../../../partials/content/Notice\";\nimport CodeExample from \"../../../partials/content/CodeExample\";\nimport { Spinner, Button, ButtonToolbar } from \"react-bootstrap\";\n\nvar SpinnersExamplesPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SpinnersExamplesPage, _React$Component);\n\n  function SpinnersExamplesPage() {\n    _classCallCheck(this, SpinnersExamplesPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SpinnersExamplesPage).apply(this, arguments));\n  }\n\n  _createClass(SpinnersExamplesPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Notice, {\n        icon: \"flaticon-warning kt-font-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, \"For more info please check the components's official\", \" \", React.createElement(\"a\", {\n        target: \"_blank\",\n        className: \"kt-link\",\n        rel: \"noopener noreferrer\",\n        href: \"https://react-bootstrap.github.io/components/spinners/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"demos & documentation\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode1,\n        beforeCodeTitle: \"Spinners\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Spinners can be used to show the loading state in your projects.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Loading...\"))))), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode2,\n        beforeCodeTitle: \"Animations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Bootstrap offers two animation styles for spinners. The animation style can be configured with the\", \" \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"animation\"), \" property. An animation style must always be provided when creating a spinner.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Spinner, {\n        animation: \"grow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode3,\n        beforeCodeTitle: \"Variants\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"All standard visual variants are available for both animation styles by setting the \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"variant\"), \" property. Alternatively spinners can be custom sized with the\", \" \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"style\"), \" property, or custom CSS classes.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode4,\n        beforeCodeTitle: \"Sizing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"In addition to the standard size, a smaller additional preconfigured size is available by configuring the\", \" \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"size\"), \" property to \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"sm\"), \".\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"grow\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"grow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode5,\n        beforeCodeTitle: \"Buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Like the original Bootstrap spinners, these can also be used with buttons. To use this component out-of-the-box it is recommended you change the element type to \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"span\"), \" \", \"by configuring the \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"as\"), \" property when using spinners inside buttons.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        as: \"span\",\n        animation: \"border\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Loading...\")), React.createElement(Button, {\n        variant: \"primary\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), \"Loading...\"))))), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode6,\n        beforeCodeTitle: \"Accessibility\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"To ensure the maximum accessibility for spinner components it is recommended you provide a relevant ARIA \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"role\"), \" \", \"property, and include screenreader-only readable text representation of the spinner's meaning inside the component using Bootstrap's \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"sr-only\"), \" class.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Loading...\")))))));\n    }\n  }]);\n\n  return SpinnersExamplesPage;\n}(React.Component);\n\nexport { SpinnersExamplesPage as default };\nvar jsCode1 = \"\\n<Spinner animation=\\\"border\\\" role=\\\"status\\\">\\n  <span className=\\\"sr-only\\\">Loading...</span>\\n</Spinner>\\n\";\nvar jsCode2 = \"\\n<Spinner animation=\\\"grow\\\" />\\n\";\nvar jsCode3 = \"\\n<>\\n  <Spinner animation=\\\"border\\\" variant=\\\"primary\\\" />\\n  <Spinner animation=\\\"border\\\" variant=\\\"secondary\\\" />\\n  <Spinner animation=\\\"border\\\" variant=\\\"success\\\" />\\n  <Spinner animation=\\\"border\\\" variant=\\\"danger\\\" />\\n  <Spinner animation=\\\"border\\\" variant=\\\"warning\\\" />\\n  <Spinner animation=\\\"border\\\" variant=\\\"info\\\" />\\n  <Spinner animation=\\\"border\\\" variant=\\\"light\\\" />\\n  <Spinner animation=\\\"border\\\" variant=\\\"dark\\\" />\\n  <Spinner animation=\\\"grow\\\" variant=\\\"primary\\\" />\\n  <Spinner animation=\\\"grow\\\" variant=\\\"secondary\\\" />\\n  <Spinner animation=\\\"grow\\\" variant=\\\"success\\\" />\\n  <Spinner animation=\\\"grow\\\" variant=\\\"danger\\\" />\\n  <Spinner animation=\\\"grow\\\" variant=\\\"warning\\\" />\\n  <Spinner animation=\\\"grow\\\" variant=\\\"info\\\" />\\n  <Spinner animation=\\\"grow\\\" variant=\\\"light\\\" />\\n  <Spinner animation=\\\"grow\\\" variant=\\\"dark\\\" />\\n</>\\n\";\nvar jsCode4 = \"\\n<>\\n  <Spinner animation=\\\"border\\\" size=\\\"sm\\\" />\\n  <Spinner animation=\\\"border\\\" />\\n  <Spinner animation=\\\"grow\\\" size=\\\"sm\\\" />\\n  <Spinner animation=\\\"grow\\\" />\\n</>\\n\";\nvar jsCode5 = \"\\n<ButtonToolbar>\\n  <Button variant=\\\"primary\\\" disabled>\\n    <Spinner\\n      as=\\\"span\\\"\\n      animation=\\\"border\\\"\\n      size=\\\"sm\\\"\\n      role=\\\"status\\\"\\n      aria-hidden=\\\"true\\\"\\n    />\\n    <span className=\\\"sr-only\\\">Loading...</span>\\n  </Button>\\n  <Button variant=\\\"primary\\\" disabled>\\n    <Spinner\\n      as=\\\"span\\\"\\n      animation=\\\"grow\\\"\\n      size=\\\"sm\\\"\\n      role=\\\"status\\\"\\n      aria-hidden=\\\"true\\\"\\n    />\\n    Loading...\\n  </Button>\\n</ButtonToolbar>\\n\";\nvar jsCode6 = \"\\n<Spinner animation=\\\"border\\\" role=\\\"status\\\">\\n  <span className=\\\"sr-only\\\">Loading...</span>\\n</Spinner>\\n\";","map":{"version":3,"sources":["/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/src/app/pages/home/react-bootstrap/SpinnersExamplesPage.js"],"names":["React","Notice","CodeExample","Spinner","Button","ButtonToolbar","SpinnersExamplesPage","jsCode1","jsCode2","jsCode3","jsCode4","jsCode5","jsCode6","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Notice from \"../../../partials/content/Notice\";\r\nimport CodeExample from \"../../../partials/content/CodeExample\";\r\nimport { Spinner, Button, ButtonToolbar } from \"react-bootstrap\";\r\n\r\nexport default class SpinnersExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning kt-font-primary\">\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"kt-link\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://react-bootstrap.github.io/components/spinners/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode1} beforeCodeTitle=\"Spinners\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  Spinners can be used to show the loading state in your\r\n                  projects.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\" />\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode2} beforeCodeTitle=\"Animations\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  Bootstrap offers two animation styles for spinners. The\r\n                  animation style can be configured with the{\" \"}\r\n                  <code>animation</code> property. An animation style must\r\n                  always be provided when creating a spinner.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\" />\r\n                <Spinner animation=\"grow\" />\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode3} beforeCodeTitle=\"Variants\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  All standard visual variants are available for both animation\r\n                  styles by setting the <code>variant</code> property.\r\n                  Alternatively spinners can be custom sized with the{\" \"}\r\n                  <code>style</code> property, or custom CSS classes.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\" />\r\n                <p>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"border\" variant=\"primary\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"border\" variant=\"secondary\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"border\" variant=\"success\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"border\" variant=\"danger\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"border\" variant=\"info\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"border\" variant=\"light\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"border\" variant=\"dark\" />\r\n                  </span>\r\n                </p>\r\n                <p>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"grow\" variant=\"primary\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"grow\" variant=\"secondary\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"grow\" variant=\"success\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"grow\" variant=\"danger\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"grow\" variant=\"warning\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"grow\" variant=\"info\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"grow\" variant=\"light\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"grow\" variant=\"dark\" />\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode4} beforeCodeTitle=\"Sizing\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  In addition to the standard size, a smaller additional\r\n                  preconfigured size is available by configuring the{\" \"}\r\n                  <code>size</code> property to <code>sm</code>.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\" />\r\n                <>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"border\" size=\"sm\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"border\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"grow\" size=\"sm\" />\r\n                  </span>\r\n                  <span className=\"pr-4\">\r\n                    <Spinner animation=\"grow\" />\r\n                  </span>\r\n                </>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode5} beforeCodeTitle=\"Buttons\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  Like the original Bootstrap spinners, these can also be used\r\n                  with buttons. To use this component out-of-the-box it is\r\n                  recommended you change the element type to <code>span</code>{\" \"}\r\n                  by configuring the <code>as</code> property when using\r\n                  spinners inside buttons.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\" />\r\n                <ButtonToolbar>\r\n                  <Button variant=\"primary\" disabled>\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"border\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                  </Button>\r\n                  <Button variant=\"primary\" disabled>\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"grow\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                    Loading...\r\n                  </Button>\r\n                </ButtonToolbar>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode6} beforeCodeTitle=\"Accessibility\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  To ensure the maximum accessibility for spinner components it\r\n                  is recommended you provide a relevant ARIA <code>role</code>{\" \"}\r\n                  property, and include screenreader-only readable text\r\n                  representation of the spinner's meaning inside the component\r\n                  using Bootstrap's <code>sr-only</code> class.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\" />\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Spinner animation=\"border\" role=\"status\">\r\n  <span className=\"sr-only\">Loading...</span>\r\n</Spinner>\r\n`;\r\nconst jsCode2 = `\r\n<Spinner animation=\"grow\" />\r\n`;\r\nconst jsCode3 = `\r\n<>\r\n  <Spinner animation=\"border\" variant=\"primary\" />\r\n  <Spinner animation=\"border\" variant=\"secondary\" />\r\n  <Spinner animation=\"border\" variant=\"success\" />\r\n  <Spinner animation=\"border\" variant=\"danger\" />\r\n  <Spinner animation=\"border\" variant=\"warning\" />\r\n  <Spinner animation=\"border\" variant=\"info\" />\r\n  <Spinner animation=\"border\" variant=\"light\" />\r\n  <Spinner animation=\"border\" variant=\"dark\" />\r\n  <Spinner animation=\"grow\" variant=\"primary\" />\r\n  <Spinner animation=\"grow\" variant=\"secondary\" />\r\n  <Spinner animation=\"grow\" variant=\"success\" />\r\n  <Spinner animation=\"grow\" variant=\"danger\" />\r\n  <Spinner animation=\"grow\" variant=\"warning\" />\r\n  <Spinner animation=\"grow\" variant=\"info\" />\r\n  <Spinner animation=\"grow\" variant=\"light\" />\r\n  <Spinner animation=\"grow\" variant=\"dark\" />\r\n</>\r\n`;\r\nconst jsCode4 = `\r\n<>\r\n  <Spinner animation=\"border\" size=\"sm\" />\r\n  <Spinner animation=\"border\" />\r\n  <Spinner animation=\"grow\" size=\"sm\" />\r\n  <Spinner animation=\"grow\" />\r\n</>\r\n`;\r\nconst jsCode5 = `\r\n<ButtonToolbar>\r\n  <Button variant=\"primary\" disabled>\r\n    <Spinner\r\n      as=\"span\"\r\n      animation=\"border\"\r\n      size=\"sm\"\r\n      role=\"status\"\r\n      aria-hidden=\"true\"\r\n    />\r\n    <span className=\"sr-only\">Loading...</span>\r\n  </Button>\r\n  <Button variant=\"primary\" disabled>\r\n    <Spinner\r\n      as=\"span\"\r\n      animation=\"grow\"\r\n      size=\"sm\"\r\n      role=\"status\"\r\n      aria-hidden=\"true\"\r\n    />\r\n    Loading...\r\n  </Button>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode6 = `\r\n<Spinner animation=\"border\" role=\"status\">\r\n  <span className=\"sr-only\">Loading...</span>\r\n</Spinner>\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}