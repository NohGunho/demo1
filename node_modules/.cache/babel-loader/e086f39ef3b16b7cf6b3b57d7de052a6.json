{"ast":null,"code":"import _classCallCheck from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/src/app/pages/home/react-bootstrap/PopoversExamplesPage.js\";\nimport React from \"react\";\nimport Notice from \"../../../partials/content/Notice\";\nimport CodeExample from \"../../../partials/content/CodeExample\";\nimport { Button, Popover, OverlayTrigger, ButtonToolbar } from \"react-bootstrap\";\nvar popover = React.createElement(Popover, {\n  id: \"popover-basic\",\n  title: \"Popover right\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, \"And here's some \", React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"amazing\"), \" content. It's very engaging. right?\");\n\nvar Example = function Example() {\n  return React.createElement(OverlayTrigger, {\n    trigger: \"click\",\n    placement: \"right\",\n    overlay: popover,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Click me to see\"));\n};\n\nvar PopoversExamplesPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PopoversExamplesPage, _React$Component);\n\n  function PopoversExamplesPage() {\n    _classCallCheck(this, PopoversExamplesPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PopoversExamplesPage).apply(this, arguments));\n  }\n\n  _createClass(PopoversExamplesPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Notice, {\n        icon: \"flaticon-warning kt-font-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"A popover component, like those found in iOS.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"For more info please check the components's official\", \" \", React.createElement(\"a\", {\n        target: \"_blank\",\n        className: \"kt-link\",\n        rel: \"noopener noreferrer\",\n        href: \"https://react-bootstrap.github.io/components/overlays/#popovers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"demos & documentation\"))), React.createElement(CodeExample, {\n        jsCode: jsCode1,\n        beforeCodeTitle: \"Basic Example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Example, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))), React.createElement(CodeExample, {\n        jsCode: jsCode2,\n        beforeCodeTitle: \"Placement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"You can control the placement of the Popover.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, [\"top\", \"right\", \"bottom\", \"left\"].map(function (placement) {\n        return React.createElement(OverlayTrigger, {\n          trigger: \"click\",\n          key: placement,\n          placement: placement,\n          overlay: React.createElement(Popover, {\n            id: \"popover-positioned-\".concat(placement),\n            title: \"Popover \".concat(placement),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, \"Holy guacamole!\"), \" Check this info.\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Popover on \", placement));\n      })))));\n    }\n  }]);\n\n  return PopoversExamplesPage;\n}(React.Component);\n\nexport { PopoversExamplesPage as default };\nvar jsCode1 = \"\\nconst popover = (\\n  <Popover id=\\\"popover-basic\\\" title=\\\"Popover right\\\">\\n    And here's some <strong>amazing</strong> content. It's very engaging. right?\\n  </Popover>\\n);\\n\\nconst Example = () => (\\n  <OverlayTrigger trigger=\\\"click\\\" placement=\\\"right\\\" overlay={popover}>\\n    <Button variant=\\\"success\\\">Click me to see</Button>\\n  </OverlayTrigger>\\n);\\n\\nrender(<Example />);\\n\";\nvar jsCode2 = \"\\n<ButtonToolbar>\\n  {['top', 'right', 'bottom', 'left'].map(placement => (\\n    <OverlayTrigger\\n      trigger=\\\"click\\\"\\n      key={placement}\\n      placement={placement}\\n      overlay={\\n        <Popover\\n          id={`popover-positioned-${placement}`}\\n          title={`Popover ${placement}`}\\n        >\\n          <strong>Holy guacamole!</strong> Check this info.\\n        </Popover>\\n      }\\n    >\\n      <Button variant=\\\"secondary\\\">Popover on {placement}</Button>\\n    </OverlayTrigger>\\n  ))}\\n</ButtonToolbar>\\n\";","map":{"version":3,"sources":["/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/src/app/pages/home/react-bootstrap/PopoversExamplesPage.js"],"names":["React","Notice","CodeExample","Button","Popover","OverlayTrigger","ButtonToolbar","popover","Example","PopoversExamplesPage","jsCode1","jsCode2","map","placement","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SACEC,MADF,EAEEC,OAFF,EAGEC,cAHF,EAIEC,aAJF,QAKO,iBALP;AAOA,IAAMC,OAAO,GACX,oBAAC,OAAD;AAAS,EAAA,EAAE,EAAC,eAAZ;AAA4B,EAAA,KAAK,EAAC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADlB,yCADF;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SACd,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAC,OAAxB;AAAgC,IAAA,SAAS,EAAC,OAA1C;AAAkD,IAAA,OAAO,EAAED,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADc;AAAA,CAAhB;;IAMqBE,oB;;;;;;;;;;;;;6BACV;AACP,aACE,0CACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEACuD,GADvD,EAEE;AACE,QAAA,MAAM,EAAC,QADT;AAEE,QAAA,SAAS,EAAC,SAFZ;AAGE,QAAA,GAAG,EAAC,qBAHN;AAIE,QAAA,IAAI,EAAC,iEAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,CAFF,CADF,EAgBE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAEC,OAArB;AAA8B,QAAA,eAAe,EAAC,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CAhBF,EAuBE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAEC,OAArB;AAA8B,QAAA,eAAe,EAAC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADF,EAIE;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,EAAmCC,GAAnC,CAAuC,UAAAC,SAAS;AAAA,eAC/C,oBAAC,cAAD;AACE,UAAA,OAAO,EAAC,OADV;AAEE,UAAA,GAAG,EAAEA,SAFP;AAGE,UAAA,SAAS,EAAEA,SAHb;AAIE,UAAA,OAAO,EACL,oBAAC,OAAD;AACE,YAAA,EAAE,+BAAwBA,SAAxB,CADJ;AAEE,YAAA,KAAK,oBAAaA,SAAb,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJF,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAaE,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwCA,SAAxC,CAbF,CAD+C;AAAA,OAAhD,CADH,CALF,CADF,CAvBF,CADF;AAqDD;;;;EAvD+Cb,KAAK,CAACc,S;;SAAnCL,oB;AA0DrB,IAAMC,OAAO,0YAAb;AAeA,IAAMC,OAAO,ohBAAb","sourcesContent":["import React from \"react\";\r\nimport Notice from \"../../../partials/content/Notice\";\r\nimport CodeExample from \"../../../partials/content/CodeExample\";\r\nimport {\r\n  Button,\r\n  Popover,\r\n  OverlayTrigger,\r\n  ButtonToolbar\r\n} from \"react-bootstrap\";\r\n\r\nconst popover = (\r\n  <Popover id=\"popover-basic\" title=\"Popover right\">\r\n    And here's some <strong>amazing</strong> content. It's very engaging. right?\r\n  </Popover>\r\n);\r\n\r\nconst Example = () => (\r\n  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n    <Button variant=\"success\">Click me to see</Button>\r\n  </OverlayTrigger>\r\n);\r\n\r\nexport default class PopoversExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning kt-font-primary\">\r\n          <p>A popover component, like those found in iOS.</p>\r\n          <p>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"kt-link\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/overlays/#popovers\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </p>\r\n        </Notice>\r\n\r\n        <CodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n          <div className=\"kt-section\">\r\n            <span className=\"kt-section__sub\"></span>\r\n            <Example />\r\n          </div>\r\n        </CodeExample>\r\n\r\n        <CodeExample jsCode={jsCode2} beforeCodeTitle=\"Placement\">\r\n          <div className=\"kt-section\">\r\n            <span className=\"kt-section__sub\">\r\n              You can control the placement of the Popover.\r\n            </span>\r\n            <div className=\"kt-separator kt-separator--dashed\"></div>\r\n            <ButtonToolbar>\r\n              {[\"top\", \"right\", \"bottom\", \"left\"].map(placement => (\r\n                <OverlayTrigger\r\n                  trigger=\"click\"\r\n                  key={placement}\r\n                  placement={placement}\r\n                  overlay={\r\n                    <Popover\r\n                      id={`popover-positioned-${placement}`}\r\n                      title={`Popover ${placement}`}\r\n                    >\r\n                      <strong>Holy guacamole!</strong> Check this info.\r\n                    </Popover>\r\n                  }\r\n                >\r\n                  <Button variant=\"secondary\">Popover on {placement}</Button>\r\n                </OverlayTrigger>\r\n              ))}\r\n            </ButtonToolbar>\r\n          </div>\r\n        </CodeExample>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\nconst popover = (\r\n  <Popover id=\"popover-basic\" title=\"Popover right\">\r\n    And here's some <strong>amazing</strong> content. It's very engaging. right?\r\n  </Popover>\r\n);\r\n\r\nconst Example = () => (\r\n  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n    <Button variant=\"success\">Click me to see</Button>\r\n  </OverlayTrigger>\r\n);\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode2 = `\r\n<ButtonToolbar>\r\n  {['top', 'right', 'bottom', 'left'].map(placement => (\r\n    <OverlayTrigger\r\n      trigger=\"click\"\r\n      key={placement}\r\n      placement={placement}\r\n      overlay={\r\n        <Popover\r\n          id={\\`popover-positioned-\\${placement}\\`}\r\n          title={\\`Popover \\${placement}\\`}\r\n        >\r\n          <strong>Holy guacamole!</strong> Check this info.\r\n        </Popover>\r\n      }\r\n    >\r\n      <Button variant=\"secondary\">Popover on {placement}</Button>\r\n    </OverlayTrigger>\r\n  ))}\r\n</ButtonToolbar>\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}