{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chosun/Project/demo1/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from \"redux-saga/effects\";\nimport { combineReducers } from \"redux\";\nimport auth, { authSaga } from \"./auth\";\nimport loading from \"./loading\";\nimport user, { userSaga } from \"./user\";\nimport { metronic } from \"../../_metronic\";\nexport var rootReducer = combineReducers({\n  auth: auth,\n  loading: loading,\n  user: user,\n  i18n: metronic.i18n.reducer,\n  builder: metronic.builder.reducer\n});\nexport function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([authSaga(), userSaga()]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/Users/chosun/Project/demo1/front-end/src/app/store/rootDuck.js"],"names":["rootSaga","all","combineReducers","auth","authSaga","loading","user","userSaga","metronic","rootReducer","i18n","reducer","builder"],"mappings":";;;;yBAeiBA,Q;;AAfjB,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,IAAeC,QAAf,QAA+B,QAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,IAAeC,QAAf,QAA+B,QAA/B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAO,IAAMC,WAAW,GAAGP,eAAe,CAAC;AACzCC,EAAAA,IAAI,EAAJA,IADyC;AAEzCE,EAAAA,OAAO,EAAPA,OAFyC;AAGzCC,EAAAA,IAAI,EAAJA,IAHyC;AAIzCI,EAAAA,IAAI,EAAEF,QAAQ,CAACE,IAAT,CAAcC,OAJqB;AAKzCC,EAAAA,OAAO,EAAEJ,QAAQ,CAACI,OAAT,CAAiBD;AALe,CAAD,CAAnC;AAQP,OAAO,SAAUX,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMC,GAAG,CAAC,CAACG,QAAQ,EAAT,EAAaG,QAAQ,EAArB,CAAD,CAAT;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all } from \"redux-saga/effects\";\r\nimport { combineReducers } from \"redux\";\r\nimport auth, { authSaga } from \"./auth\";\r\nimport loading from \"./loading\";\r\nimport user, { userSaga } from \"./user\";\r\nimport { metronic } from \"../../_metronic\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  auth,\r\n  loading,\r\n  user,\r\n  i18n: metronic.i18n.reducer,\r\n  builder: metronic.builder.reducer\r\n});\r\n\r\nexport function* rootSaga() {\r\n  yield all([authSaga(), userSaga()]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}