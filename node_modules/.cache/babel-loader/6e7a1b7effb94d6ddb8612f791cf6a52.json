{"ast":null,"code":"import _slicedToArray from \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/src/app/pages/home/google-material/layout/GridExamplesPage.js\";\n\n/* eslint-disable react/jsx-no-target-blank */\nimport React from \"react\";\nimport Notice from \"../../../../partials/content/Notice\";\nimport CodeExample from \"../../../../partials/content/CodeExample\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Grid, FormLabel, FormControlLabel, RadioGroup, Radio } from \"@material-ui/core\";\nimport { Paper, ButtonBase, Typography, Avatar, Divider } from \"@material-ui/core\";\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Grid from '@material-ui/core/Grid';\\nimport FormLabel from '@material-ui/core/FormLabel';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport RadioGroup from '@material-ui/core/RadioGroup';\\nimport Radio from '@material-ui/core/Radio';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    flexGrow: 1,\\n  },\\n  paper: {\\n    height: 140,\\n    width: 100,\\n  },\\n  control: {\\n    padding: theme.spacing(2),\\n  },\\n}));\\n\\nexport default function SpacingGrid() {\\n  const [spacing, setSpacing] = React.useState(2);\\n  const classes = useStyles();\\n\\n  function handleChange(event, value) {\\n    setSpacing(Number(value));\\n  }\\n\\n  return (\\n    <Grid container className={classes.root} spacing={2}>\\n      <Grid item xs={12}>\\n        <Grid container justify=\\\"center\\\" spacing={spacing}>\\n          {[0, 1, 2].map(value => (\\n            <Grid key={value} item>\\n              <Paper className={classes.paper} />\\n            </Grid>\\n          ))}\\n        </Grid>\\n      </Grid>\\n      <Grid item xs={12}>\\n        <Paper className={classes.control}>\\n          <Grid container>\\n            <Grid item>\\n              <FormLabel>spacing</FormLabel>\\n              <RadioGroup\\n                name=\\\"spacing\\\"\\n                aria-label=\\\"Spacing\\\"\\n                value={spacing.toString()}\\n                onChange={handleChange}\\n                row\\n              >\\n                {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(value => (\\n                  <FormControlLabel\\n                    key={value}\\n                    value={value.toString()}\\n                    control={<Radio />}\\n                    label={value.toString()}\\n                  />\\n                ))}\\n              </RadioGroup>\\n            </Grid>\\n          </Grid>\\n        </Paper>\\n      </Grid>\\n    </Grid>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Paper from '@material-ui/core/Paper';\\nimport Grid from '@material-ui/core/Grid';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    flexGrow: 1,\\n  },\\n  paper: {\\n    padding: theme.spacing(2),\\n    textAlign: 'center',\\n    color: theme.palette.text.secondary,\\n  },\\n}));\\n\\nexport default function CenteredGrid() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Grid container spacing={3}>\\n        <Grid item xs={12}>\\n          <Paper className={classes.paper}>xs=12</Paper>\\n        </Grid>\\n        <Grid item xs={6}>\\n          <Paper className={classes.paper}>xs=6</Paper>\\n        </Grid>\\n        <Grid item xs={6}>\\n          <Paper className={classes.paper}>xs=6</Paper>\\n        </Grid>\\n        <Grid item xs={3}>\\n          <Paper className={classes.paper}>xs=3</Paper>\\n        </Grid>\\n        <Grid item xs={3}>\\n          <Paper className={classes.paper}>xs=3</Paper>\\n        </Grid>\\n        <Grid item xs={3}>\\n          <Paper className={classes.paper}>xs=3</Paper>\\n        </Grid>\\n        <Grid item xs={3}>\\n          <Paper className={classes.paper}>xs=3</Paper>\\n        </Grid>\\n      </Grid>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode3 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Paper from '@material-ui/core/Paper';\\nimport Grid from '@material-ui/core/Grid';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    flexGrow: 1,\\n  },\\n  paper: {\\n    padding: theme.spacing(2),\\n    textAlign: 'center',\\n    color: theme.palette.text.secondary,\\n  },\\n}));\\n\\nexport default function FullWidthGrid() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Grid container spacing={3}>\\n        <Grid item xs={12}>\\n          <Paper className={classes.paper}>xs=12</Paper>\\n        </Grid>\\n        <Grid item xs={12} sm={6}>\\n          <Paper className={classes.paper}>xs=12 sm=6</Paper>\\n        </Grid>\\n        <Grid item xs={12} sm={6}>\\n          <Paper className={classes.paper}>xs=12 sm=6</Paper>\\n        </Grid>\\n        <Grid item xs={6} sm={3}>\\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\\n        </Grid>\\n        <Grid item xs={6} sm={3}>\\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\\n        </Grid>\\n        <Grid item xs={6} sm={3}>\\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\\n        </Grid>\\n        <Grid item xs={6} sm={3}>\\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\\n        </Grid>\\n      </Grid>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode4 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Paper from '@material-ui/core/Paper';\\nimport Grid from '@material-ui/core/Grid';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    flexGrow: 1,\\n  },\\n  paper: {\\n    padding: theme.spacing(2),\\n    textAlign: 'center',\\n    color: theme.palette.text.secondary,\\n  },\\n}));\\n\\nexport default function AutoGrid() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Grid container spacing={3}>\\n        <Grid item xs>\\n          <Paper className={classes.paper}>xs</Paper>\\n        </Grid>\\n        <Grid item xs>\\n          <Paper className={classes.paper}>xs</Paper>\\n        </Grid>\\n        <Grid item xs>\\n          <Paper className={classes.paper}>xs</Paper>\\n        </Grid>\\n      </Grid>\\n      <Grid container spacing={3}>\\n        <Grid item xs>\\n          <Paper className={classes.paper}>xs</Paper>\\n        </Grid>\\n        <Grid item xs={6}>\\n          <Paper className={classes.paper}>xs=6</Paper>\\n        </Grid>\\n        <Grid item xs>\\n          <Paper className={classes.paper}>xs</Paper>\\n        </Grid>\\n      </Grid>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode5 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Grid from '@material-ui/core/Grid';\\nimport Paper from '@material-ui/core/Paper';\\nimport Typography from '@material-ui/core/Typography';\\nimport ButtonBase from '@material-ui/core/ButtonBase';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    flexGrow: 1,\\n  },\\n  paper: {\\n    padding: theme.spacing(2),\\n    margin: 'auto',\\n    maxWidth: 500,\\n  },\\n  image: {\\n    width: 128,\\n    height: 128,\\n  },\\n  img: {\\n    margin: 'auto',\\n    display: 'block',\\n    maxWidth: '100%',\\n    maxHeight: '100%',\\n  },\\n}));\\n\\nexport default function ComplexGrid() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Paper className={classes.paper}>\\n        <Grid container spacing={2}>\\n          <Grid item>\\n            <ButtonBase className={classes.image}>\\n              <img className={classes.img} alt=\\\"complex\\\" src=\\\"/static/images/grid/complex.jpg\\\" />\\n            </ButtonBase>\\n          </Grid>\\n          <Grid item xs={12} sm container>\\n            <Grid item xs container direction=\\\"column\\\" spacing={2}>\\n              <Grid item xs>\\n                <Typography gutterBottom variant=\\\"subtitle1\\\">\\n                  Standard license\\n                </Typography>\\n                <Typography variant=\\\"body2\\\" gutterBottom>\\n                  Full resolution 1920x1080 \\u2022 JPEG\\n                </Typography>\\n                <Typography variant=\\\"body2\\\" color=\\\"textSecondary\\\">\\n                  ID: 1030114\\n                </Typography>\\n              </Grid>\\n              <Grid item>\\n                <Typography variant=\\\"body2\\\" style={{ cursor: 'pointer' }}>\\n                  Remove\\n                </Typography>\\n              </Grid>\\n            </Grid>\\n            <Grid item>\\n              <Typography variant=\\\"subtitle1\\\">$19.00</Typography>\\n            </Grid>\\n          </Grid>\\n        </Grid>\\n      </Paper>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode6 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Paper from '@material-ui/core/Paper';\\nimport Grid from '@material-ui/core/Grid';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    flexGrow: 1,\\n  },\\n  paper: {\\n    padding: theme.spacing(1),\\n    textAlign: 'center',\\n    color: theme.palette.text.secondary,\\n  },\\n}));\\n\\nexport default function NestedGrid() {\\n  const classes = useStyles();\\n\\n  function FormRow() {\\n    return (\\n      <React.Fragment>\\n        <Grid item xs={4}>\\n          <Paper className={classes.paper}>item</Paper>\\n        </Grid>\\n        <Grid item xs={4}>\\n          <Paper className={classes.paper}>item</Paper>\\n        </Grid>\\n        <Grid item xs={4}>\\n          <Paper className={classes.paper}>item</Paper>\\n        </Grid>\\n      </React.Fragment>\\n    );\\n  }\\n\\n  return (\\n    <div className={classes.root}>\\n      <Grid container spacing={1}>\\n        <Grid container item xs={12} spacing={3}>\\n          <FormRow />\\n        </Grid>\\n        <Grid container item xs={12} spacing={3}>\\n          <FormRow />\\n        </Grid>\\n        <Grid container item xs={12} spacing={3}>\\n          <FormRow />\\n        </Grid>\\n      </Grid>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode7 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Paper from '@material-ui/core/Paper';\\nimport Grid from '@material-ui/core/Grid';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    flexGrow: 1,\\n  },\\n  paper: {\\n    padding: theme.spacing(1),\\n    textAlign: 'center',\\n    color: theme.palette.text.secondary,\\n  },\\n}));\\n\\nexport default function NestedGrid() {\\n  const classes = useStyles();\\n\\n  function FormRow() {\\n    return (\\n      <React.Fragment>\\n        <Grid item xs={4}>\\n          <Paper className={classes.paper}>item</Paper>\\n        </Grid>\\n        <Grid item xs={4}>\\n          <Paper className={classes.paper}>item</Paper>\\n        </Grid>\\n        <Grid item xs={4}>\\n          <Paper className={classes.paper}>item</Paper>\\n        </Grid>\\n      </React.Fragment>\\n    );\\n  }\\n\\n  return (\\n    <div className={classes.root}>\\n      <Grid container spacing={1}>\\n        <Grid container item xs={12} spacing={3}>\\n          <FormRow />\\n        </Grid>\\n        <Grid container item xs={12} spacing={3}>\\n          <FormRow />\\n        </Grid>\\n        <Grid container item xs={12} spacing={3}>\\n          <FormRow />\\n        </Grid>\\n      </Grid>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode8 = \"\\nimport React from 'react';\\nimport Paper from '@material-ui/core/Paper';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Grid from '@material-ui/core/Grid';\\nimport Avatar from '@material-ui/core/Avatar';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    flexGrow: 1,\\n    overflow: 'hidden',\\n    padding: theme.spacing(0, 3),\\n  },\\n  paper: {\\n    maxWidth: 400,\\n    margin: `${theme.spacing(1)}px auto`,\\n    padding: theme.spacing(2),\\n  },\\n}));\\n\\nconst message = `Truncation should be conditionally applicable on this long line of text\\n as this is a much longer line than what the container can support. `;\\n\\nexport default function AutoGridNoWrap() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Paper className={classes.paper}>\\n        <Grid container wrap=\\\"nowrap\\\" spacing={2}>\\n          <Grid item>\\n            <Avatar>W</Avatar>\\n          </Grid>\\n          <Grid item xs zeroMinWidth>\\n            <Typography noWrap>{message}</Typography>\\n          </Grid>\\n        </Grid>\\n      </Paper>\\n      <Paper className={classes.paper}>\\n        <Grid container wrap=\\\"nowrap\\\" spacing={2}>\\n          <Grid item>\\n            <Avatar>W</Avatar>\\n          </Grid>\\n          <Grid item xs>\\n            <Typography noWrap>{message}</Typography>\\n          </Grid>\\n        </Grid>\\n      </Paper>\\n      <Paper className={classes.paper}>\\n        <Grid container wrap=\\\"nowrap\\\" spacing={2}>\\n          <Grid item>\\n            <Avatar>W</Avatar>\\n          </Grid>\\n          <Grid item xs>\\n            <Typography>{message}</Typography>\\n          </Grid>\\n        </Grid>\\n      </Paper>\\n    </div>\\n  );\\n}\\n\";\nvar useStyles1 = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      height: 140,\n      width: 100\n    },\n    control: {\n      padding: theme.spacing(2)\n    }\n  };\n});\nvar useStyles2 = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    }\n  };\n});\nvar useStyles3 = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    }\n  };\n});\nvar useStyles4 = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    }\n  };\n});\nvar useStyles5 = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      margin: \"auto\",\n      maxWidth: 500\n    },\n    image: {\n      width: 128,\n      height: 128\n    },\n    img: {\n      margin: \"auto\",\n      display: \"block\",\n      maxWidth: \"100%\",\n      maxHeight: \"100%\"\n    }\n  };\n});\nvar useStyles6 = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    }\n  };\n});\nvar useStyles8 = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      overflow: \"hidden\",\n      padding: theme.spacing(0, 3)\n    },\n    paper: {\n      maxWidth: 400,\n      margin: \"\".concat(theme.spacing(1), \"px auto\"),\n      padding: theme.spacing(2)\n    }\n  };\n});\nvar useStyles7 = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(12, 1fr)\",\n      gridGap: theme.spacing(3)\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n      whiteSpace: \"nowrap\",\n      marginBottom: theme.spacing(1)\n    },\n    divider: {\n      margin: theme.spacing(2, 0)\n    }\n  };\n});\nexport default function GridExamplesPage() {\n  var _React$useState = React.useState(2),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      spacing = _React$useState2[0],\n      setSpacing = _React$useState2[1];\n\n  var classes1 = useStyles1();\n  var classes2 = useStyles2();\n  var classes3 = useStyles3();\n  var classes4 = useStyles4();\n  var classes5 = useStyles5();\n  var classes6 = useStyles6();\n  var classes7 = useStyles7();\n  var classes8 = useStyles8();\n  var message = \"Truncation should be conditionally applicable on this long line of text\\n      as this is a much longer line than what the container can support. \";\n\n  function handleChange(event, value) {\n    setSpacing(Number(value));\n  }\n\n  function FormRow() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes6.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, \"item\")), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes6.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, \"item\")), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes6.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, \"item\")));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Notice, {\n    icon: \"flaticon-warning kt-font-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617\n    },\n    __self: this\n  }, \"The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621\n    },\n    __self: this\n  }, \"For more info please check the components's official\", \" \", React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"kt-link\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/grid/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623\n    },\n    __self: this\n  }, \"demos & documentation\"))), React.createElement(CodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Spacing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636\n    },\n    __self: this\n  }, \"The responsive grid focuses on consistent spacing widths, rather than column width. Material Design margins and columns follow an 8px square baseline grid. The spacing property is an integer between 0 and 10 inclusive. By default, the spacing between two grid items follows a linear function:\", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642\n    },\n    __self: this\n  }, \" output(spacing) = spacing * 8px\"), \", e.g.\", \" \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643\n    },\n    __self: this\n  }, \"spacing=\", 2), \" creates a 16px wide gap.\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    className: classes1.root,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: spacing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649\n    },\n    __self: this\n  }, [0, 1, 2].map(function (value) {\n    return React.createElement(Grid, {\n      key: value,\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes1.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652\n      },\n      __self: this\n    }));\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes1.control,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661\n    },\n    __self: this\n  }, \"spacing\"), React.createElement(RadioGroup, {\n    name: \"spacing\",\n    \"aria-label\": \"Spacing\",\n    value: spacing.toString(),\n    onChange: handleChange,\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662\n    },\n    __self: this\n  }, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(function (value) {\n    return React.createElement(FormControlLabel, {\n      key: value,\n      value: value.toString(),\n      control: React.createElement(Radio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673\n        },\n        __self: this\n      }),\n      label: value.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670\n      },\n      __self: this\n    });\n  })))))))))), React.createElement(Notice, {\n    className: \"notice__paragraph\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687\n    },\n    __self: this\n  }, \"Fluid grids\"), React.createElement(Notice, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688\n    },\n    __self: this\n  }, \"Fluid grids use columns that scale and resize content. A fluid grid\\u2019s layout can use breakpoints to determine if the layout needs to change dramatically.\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695\n    },\n    __self: this\n  }, React.createElement(CodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Basic Grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698\n    },\n    __self: this\n  }, \"The column widths apply at all breakpoints (i.e. \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699\n    },\n    __self: this\n  }, \"xs\"), \" \", \"and up).\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes2.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes2.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707\n    },\n    __self: this\n  }, \"xs=12\")), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes2.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710\n    },\n    __self: this\n  }, \"xs=6\")), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes2.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713\n    },\n    __self: this\n  }, \"xs=6\")), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes2.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716\n    },\n    __self: this\n  }, \"xs=3\")), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes2.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719\n    },\n    __self: this\n  }, \"xs=3\")), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes2.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722\n    },\n    __self: this\n  }, \"xs=3\")), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes2.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725\n    },\n    __self: this\n  }, \"xs=3\")))))))), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733\n    },\n    __self: this\n  }, React.createElement(CodeExample, {\n    jsCode: jsCode3,\n    beforeCodeTitle: \"Grid with breakpoints\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736\n    },\n    __self: this\n  }, \"Some columns have multiple widths defined, causing the layout to change at the defined breakpoint.\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes3.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes3.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745\n    },\n    __self: this\n  }, \"xs=12\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes3.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748\n    },\n    __self: this\n  }, \"xs=12 sm=6\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes3.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751\n    },\n    __self: this\n  }, \"xs=12 sm=6\")), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes3.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754\n    },\n    __self: this\n  }, \"xs=6 sm=3\")), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes3.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757\n    },\n    __self: this\n  }, \"xs=6 sm=3\")), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes3.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760\n    },\n    __self: this\n  }, \"xs=6 sm=3\")), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes3.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763\n    },\n    __self: this\n  }, \"xs=6 sm=3\"))))))))), React.createElement(CodeExample, {\n    jsCode: jsCode4,\n    beforeCodeTitle: \"Auto-layout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775\n    },\n    __self: this\n  }, \"The Auto-layout makes the items equitably share the available space. That also means you can set the width of one item and the others will automatically resize around it.\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes4.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes4.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786\n    },\n    __self: this\n  }, \"xs\")), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes4.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789\n    },\n    __self: this\n  }, \"xs\")), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes4.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792\n    },\n    __self: this\n  }, \"xs\"))), React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes4.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797\n    },\n    __self: this\n  }, \"xs\")), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes4.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800\n    },\n    __self: this\n  }, \"xs=6\")), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes4.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803\n    },\n    __self: this\n  }, \"xs\")))))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811\n    },\n    __self: this\n  }, React.createElement(CodeExample, {\n    jsCode: jsCode5,\n    beforeCodeTitle: \"Complex Grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814\n    },\n    __self: this\n  }, \"The following demo doesn't follow the Material Design specification, but illustrates how the grid can be used to build complex layouts.\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 821\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes5.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes5.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 823\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825\n    },\n    __self: this\n  }, React.createElement(ButtonBase, {\n    className: classes5.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: classes5.img,\n    alt: \"complex\",\n    src: \"https://material-ui.com/static/images/grid/complex.jpg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: true,\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837\n    },\n    __self: this\n  }, \"Standard license\"), React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840\n    },\n    __self: this\n  }, \"Full resolution 1920x1080 \\u2022 JPEG\"), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843\n    },\n    __self: this\n  }, \"ID: 1030114\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      cursor: \"pointer\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848\n    },\n    __self: this\n  }, \"Remove\"))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 856\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857\n    },\n    __self: this\n  }, \"$19.00\")))))))))), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867\n    },\n    __self: this\n  }, React.createElement(CodeExample, {\n    jsCode: jsCode6,\n    beforeCodeTitle: \"Nested Grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 869\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870\n    },\n    __self: this\n  }, \"The \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871\n    },\n    __self: this\n  }, \"container\"), \" and \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871\n    },\n    __self: this\n  }, \"item\"), \" properties are two independent booleans. They can be combined.\"), React.createElement(\"p\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874\n    },\n    __self: this\n  }, \"A flex container is the box generated by an element with a computed display of \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876\n    },\n    __self: this\n  }, \"flex\"), \" or\", \" \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 877\n    },\n    __self: this\n  }, \"inline-flex\"), \". In-flow children of a flex container are called flex items and are laid out using the flex layout model.\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 882\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes6.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 884\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 885\n    },\n    __self: this\n  }, React.createElement(FormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 886\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 888\n    },\n    __self: this\n  }, React.createElement(FormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891\n    },\n    __self: this\n  }, React.createElement(FormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892\n    },\n    __self: this\n  }))))))))), React.createElement(CodeExample, {\n    jsCode: jsCode8,\n    beforeCodeTitle: \"Negative margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904\n    },\n    __self: this\n  }, \"There is one limitation with the negative margin we use to implement the spacing between items. A horizontal scroll will appear if a negative margin goes beyond the \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 907\n    },\n    __self: this\n  }, \"<body>\"), \". There are 3 available workarounds:\", \" \", React.createElement(\"a\", {\n    target: \"_blank\",\n    href: \"https://material-ui.com/components/grid/#limitations\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909\n    },\n    __self: this\n  }, \"see official documentations\")), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 916\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 917\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes8.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes8.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 922\n    },\n    __self: this\n  }, \"W\")), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 924\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 925\n    },\n    __self: this\n  }, message)))), React.createElement(Paper, {\n    className: classes8.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 932\n    },\n    __self: this\n  }, \"W\")), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 934\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 935\n    },\n    __self: this\n  }, message)))), React.createElement(Paper, {\n    className: classes8.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942\n    },\n    __self: this\n  }, \"W\")), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 944\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 945\n    },\n    __self: this\n  }, message)))))))), React.createElement(CodeExample, {\n    jsCode: jsCode7,\n    beforeCodeTitle: \"CSS Grid Layout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956\n    },\n    __self: this\n  }, \"Material-UI doesn't provide any CSS Grid functionality itself, but as seen below you can easily use CSS Grid to layout your pages.\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 960\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 962\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 963\n    },\n    __self: this\n  }, \"Material-UI Grid:\"), React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 966\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes7.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 968\n    },\n    __self: this\n  }, \"xs=3\")), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 970\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes7.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971\n    },\n    __self: this\n  }, \"xs=3\")), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 973\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes7.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 974\n    },\n    __self: this\n  }, \"xs=3\")), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes7.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977\n    },\n    __self: this\n  }, \"xs=3\")), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes7.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 980\n    },\n    __self: this\n  }, \"xs=8\")), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes7.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983\n    },\n    __self: this\n  }, \"xs=4\"))), React.createElement(Divider, {\n    className: classes7.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 986\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 987\n    },\n    __self: this\n  }, \"CSS Grid Layout:\"), React.createElement(\"div\", {\n    className: classes7.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      gridColumnEnd: \"span 3\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 991\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes7.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 992\n    },\n    __self: this\n  }, \"xs=3\")), React.createElement(\"div\", {\n    style: {\n      gridColumnEnd: \"span 3\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes7.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 995\n    },\n    __self: this\n  }, \"xs=3\")), React.createElement(\"div\", {\n    style: {\n      gridColumnEnd: \"span 3\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 997\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes7.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 998\n    },\n    __self: this\n  }, \"xs=3\")), React.createElement(\"div\", {\n    style: {\n      gridColumnEnd: \"span 3\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1000\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes7.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001\n    },\n    __self: this\n  }, \"xs=3\")), React.createElement(\"div\", {\n    style: {\n      gridColumnEnd: \"span 8\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1003\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes7.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004\n    },\n    __self: this\n  }, \"xs=8\")), React.createElement(\"div\", {\n    style: {\n      gridColumnEnd: \"span 4\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1006\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes7.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007\n    },\n    __self: this\n  }, \"xs=4\"))))))));\n}","map":{"version":3,"sources":["/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/src/app/pages/home/google-material/layout/GridExamplesPage.js"],"names":["React","Notice","CodeExample","makeStyles","Grid","FormLabel","FormControlLabel","RadioGroup","Radio","Paper","ButtonBase","Typography","Avatar","Divider","jsCode1","jsCode2","jsCode3","jsCode4","jsCode5","jsCode6","jsCode7","jsCode8","useStyles1","theme","root","flexGrow","paper","height","width","control","padding","spacing","useStyles2","textAlign","color","palette","text","secondary","useStyles3","useStyles4","useStyles5","margin","maxWidth","image","img","display","maxHeight","useStyles6","useStyles8","overflow","useStyles7","container","gridTemplateColumns","gridGap","whiteSpace","marginBottom","divider","GridExamplesPage","useState","setSpacing","classes1","classes2","classes3","classes4","classes5","classes6","classes7","classes8","message","handleChange","event","value","Number","FormRow","map","toString","cursor","gridColumnEnd"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-target-blank */\r\nimport React from \"react\";\r\nimport Notice from \"../../../../partials/content/Notice\";\r\nimport CodeExample from \"../../../../partials/content/CodeExample\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n  Grid,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  Radio\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Paper,\r\n  ButtonBase,\r\n  Typography,\r\n  Avatar,\r\n  Divider\r\n} from \"@material-ui/core\";\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SpacingGrid() {\r\n  const [spacing, setSpacing] = React.useState(2);\r\n  const classes = useStyles();\r\n\r\n  function handleChange(event, value) {\r\n    setSpacing(Number(value));\r\n  }\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"center\" spacing={spacing}>\r\n          {[0, 1, 2].map(value => (\r\n            <Grid key={value} item>\r\n              <Paper className={classes.paper} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.control}>\r\n          <Grid container>\r\n            <Grid item>\r\n              <FormLabel>spacing</FormLabel>\r\n              <RadioGroup\r\n                name=\"spacing\"\r\n                aria-label=\"Spacing\"\r\n                value={spacing.toString()}\r\n                onChange={handleChange}\r\n                row\r\n              >\r\n                {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(value => (\r\n                  <FormControlLabel\r\n                    key={value}\r\n                    value={value.toString()}\r\n                    control={<Radio />}\r\n                    label={value.toString()}\r\n                  />\r\n                ))}\r\n              </RadioGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function CenteredGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>xs=12</Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>xs=6</Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>xs=6</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function FullWidthGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>xs=12</Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={classes.paper}>xs=12 sm=6</Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={classes.paper}>xs=12 sm=6</Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function AutoGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>xs</Paper>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>xs</Paper>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>xs</Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>xs</Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>xs=6</Paper>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>xs</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n}));\r\n\r\nexport default function ComplexGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\">\r\n                  Standard license\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  Full resolution 1920x1080 • JPEG\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  ID: 1030114\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                  Remove\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"subtitle1\">$19.00</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function NestedGrid() {\r\n  const classes = useStyles();\r\n\r\n  function FormRow() {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>item</Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>item</Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>item</Paper>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow />\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow />\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function NestedGrid() {\r\n  const classes = useStyles();\r\n\r\n  function FormRow() {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>item</Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>item</Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>item</Paper>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow />\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow />\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    padding: theme.spacing(0, 3),\r\n  },\r\n  paper: {\r\n    maxWidth: 400,\r\n    margin: \\`\\${theme.spacing(1)}px auto\\`,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst message = \\`Truncation should be conditionally applicable on this long line of text\r\n as this is a much longer line than what the container can support. \\`;\r\n\r\nexport default function AutoGridNoWrap() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container wrap=\"nowrap\" spacing={2}>\r\n          <Grid item>\r\n            <Avatar>W</Avatar>\r\n          </Grid>\r\n          <Grid item xs zeroMinWidth>\r\n            <Typography noWrap>{message}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <Grid container wrap=\"nowrap\" spacing={2}>\r\n          <Grid item>\r\n            <Avatar>W</Avatar>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Typography noWrap>{message}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <Grid container wrap=\"nowrap\" spacing={2}>\r\n          <Grid item>\r\n            <Avatar>W</Avatar>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Typography>{message}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\nconst useStyles5 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: \"auto\",\r\n    maxWidth: 500\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\"\r\n  }\r\n}));\r\nconst useStyles6 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\nconst useStyles8 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: \"hidden\",\r\n    padding: theme.spacing(0, 3)\r\n  },\r\n  paper: {\r\n    maxWidth: 400,\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\nconst useStyles7 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(12, 1fr)\",\r\n    gridGap: theme.spacing(3)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    whiteSpace: \"nowrap\",\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nexport default function GridExamplesPage() {\r\n  const [spacing, setSpacing] = React.useState(2);\r\n  const classes1 = useStyles1();\r\n  const classes2 = useStyles2();\r\n  const classes3 = useStyles3();\r\n  const classes4 = useStyles4();\r\n  const classes5 = useStyles5();\r\n  const classes6 = useStyles6();\r\n  const classes7 = useStyles7();\r\n  const classes8 = useStyles8();\r\n\r\n  const message = `Truncation should be conditionally applicable on this long line of text\r\n      as this is a much longer line than what the container can support. `;\r\n\r\n  function handleChange(event, value) {\r\n    setSpacing(Number(value));\r\n  }\r\n\r\n  function FormRow() {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes6.paper}>item</Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes6.paper}>item</Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes6.paper}>item</Paper>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning kt-font-primary\">\r\n        <p>\r\n          The Material Design responsive layout grid adapts to screen size and\r\n          orientation, ensuring consistency across layouts.\r\n        </p>\r\n        <p>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"kt-link\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/grid/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </p>\r\n      </Notice>\r\n\r\n      <CodeExample jsCode={jsCode1} beforeCodeTitle=\"Spacing\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            The responsive grid focuses on consistent spacing widths, rather\r\n            than column width. Material Design margins and columns follow an 8px\r\n            square baseline grid. The spacing property is an integer between 0\r\n            and 10 inclusive. By default, the spacing between two grid items\r\n            follows a linear function:\r\n            <code> output(spacing) = spacing * 8px</code>, e.g.{\" \"}\r\n            <code>spacing={2}</code> creates a 16px wide gap.\r\n          </span>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n          <div className=\"kt-section__content\">\r\n            <Grid container className={classes1.root} spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Grid container justify=\"center\" spacing={spacing}>\r\n                  {[0, 1, 2].map(value => (\r\n                    <Grid key={value} item>\r\n                      <Paper className={classes1.paper} />\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Paper className={classes1.control}>\r\n                  <Grid container>\r\n                    <Grid item>\r\n                      <FormLabel>spacing</FormLabel>\r\n                      <RadioGroup\r\n                        name=\"spacing\"\r\n                        aria-label=\"Spacing\"\r\n                        value={spacing.toString()}\r\n                        onChange={handleChange}\r\n                        row\r\n                      >\r\n                        {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(value => (\r\n                          <FormControlLabel\r\n                            key={value}\r\n                            value={value.toString()}\r\n                            control={<Radio />}\r\n                            label={value.toString()}\r\n                          />\r\n                        ))}\r\n                      </RadioGroup>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n\r\n      <Notice className=\"notice__paragraph\">Fluid grids</Notice>\r\n      <Notice>\r\n        Fluid grids use columns that scale and resize content. A fluid grid’s\r\n        layout can use breakpoints to determine if the layout needs to change\r\n        dramatically.\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <CodeExample jsCode={jsCode2} beforeCodeTitle=\"Basic Grid\">\r\n            <div className=\"kt-section\">\r\n              <span className=\"kt-section__sub\">\r\n                The column widths apply at all breakpoints (i.e. <code>xs</code>{\" \"}\r\n                and up).\r\n              </span>\r\n              <div className=\"kt-separator kt-separator--dashed\"></div>\r\n              <div className=\"kt-section__content\">\r\n                <div className={classes2.root}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                      <Paper className={classes2.paper}>xs=12</Paper>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Paper className={classes2.paper}>xs=6</Paper>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Paper className={classes2.paper}>xs=6</Paper>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Paper className={classes2.paper}>xs=3</Paper>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Paper className={classes2.paper}>xs=3</Paper>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Paper className={classes2.paper}>xs=3</Paper>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Paper className={classes2.paper}>xs=3</Paper>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <CodeExample jsCode={jsCode3} beforeCodeTitle=\"Grid with breakpoints\">\r\n            <div className=\"kt-section\">\r\n              <span className=\"kt-section__sub\">\r\n                Some columns have multiple widths defined, causing the layout to\r\n                change at the defined breakpoint.\r\n              </span>\r\n              <div className=\"kt-separator kt-separator--dashed\"></div>\r\n              <div className=\"kt-section__content\">\r\n                <div className={classes3.root}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                      <Paper className={classes3.paper}>xs=12</Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Paper className={classes3.paper}>xs=12 sm=6</Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Paper className={classes3.paper}>xs=12 sm=6</Paper>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={3}>\r\n                      <Paper className={classes3.paper}>xs=6 sm=3</Paper>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={3}>\r\n                      <Paper className={classes3.paper}>xs=6 sm=3</Paper>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={3}>\r\n                      <Paper className={classes3.paper}>xs=6 sm=3</Paper>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={3}>\r\n                      <Paper className={classes3.paper}>xs=6 sm=3</Paper>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CodeExample>\r\n        </div>\r\n      </div>\r\n\r\n      <CodeExample jsCode={jsCode4} beforeCodeTitle=\"Auto-layout\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            The Auto-layout makes the items equitably share the available space.\r\n            That also means you can set the width of one item and the others\r\n            will automatically resize around it.\r\n          </span>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n        </div>\r\n        <div className=\"kt-section\">\r\n          <div className={classes4.root}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs>\r\n                <Paper className={classes4.paper}>xs</Paper>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Paper className={classes4.paper}>xs</Paper>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Paper className={classes4.paper}>xs</Paper>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs>\r\n                <Paper className={classes4.paper}>xs</Paper>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Paper className={classes4.paper}>xs=6</Paper>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Paper className={classes4.paper}>xs</Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <CodeExample jsCode={jsCode5} beforeCodeTitle=\"Complex Grid\">\r\n            <div className=\"kt-section\">\r\n              <span className=\"kt-section__sub\">\r\n                The following demo doesn't follow the Material Design\r\n                specification, but illustrates how the grid can be used to build\r\n                complex layouts.\r\n              </span>\r\n              <div className=\"kt-separator kt-separator--dashed\"></div>\r\n\r\n              <div className=\"kt-section__content\">\r\n                <div className={classes5.root}>\r\n                  <Paper className={classes5.paper}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item>\r\n                        <ButtonBase className={classes5.image}>\r\n                          <img\r\n                            className={classes5.img}\r\n                            alt=\"complex\"\r\n                            src=\"https://material-ui.com/static/images/grid/complex.jpg\"\r\n                          />\r\n                        </ButtonBase>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm container>\r\n                        <Grid item xs container direction=\"column\" spacing={2}>\r\n                          <Grid item xs>\r\n                            <Typography gutterBottom variant=\"subtitle1\">\r\n                              Standard license\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" gutterBottom>\r\n                              Full resolution 1920x1080 • JPEG\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              ID: 1030114\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              style={{ cursor: \"pointer\" }}\r\n                            >\r\n                              Remove\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <Typography variant=\"subtitle1\">$19.00</Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Paper>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <CodeExample jsCode={jsCode6} beforeCodeTitle=\"Nested Grid\">\r\n            <div className=\"kt-section\">\r\n              <p className=\"kt-section__sub\">\r\n                The <code>container</code> and <code>item</code> properties are\r\n                two independent booleans. They can be combined.\r\n              </p>\r\n              <p className=\"kt-section__sub\">\r\n                A flex container is the box generated by an element with a\r\n                computed display of <code>flex</code> or{\" \"}\r\n                <code>inline-flex</code>. In-flow children of a flex container\r\n                are called flex items and are laid out using the flex layout\r\n                model.\r\n              </p>\r\n              <div className=\"kt-separator kt-separator--dashed\"></div>\r\n              <div className=\"kt-section__content\">\r\n                <div className={classes6.root}>\r\n                  <Grid container spacing={1}>\r\n                    <Grid container item xs={12} spacing={3}>\r\n                      <FormRow />\r\n                    </Grid>\r\n                    <Grid container item xs={12} spacing={3}>\r\n                      <FormRow />\r\n                    </Grid>\r\n                    <Grid container item xs={12} spacing={3}>\r\n                      <FormRow />\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CodeExample>\r\n        </div>\r\n      </div>\r\n\r\n      <CodeExample jsCode={jsCode8} beforeCodeTitle=\"Negative margin\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            There is one limitation with the negative margin we use to implement\r\n            the spacing between items. A horizontal scroll will appear if a\r\n            negative margin goes beyond the <code>&lt;body&gt;</code>. There are\r\n            3 available workarounds:{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://material-ui.com/components/grid/#limitations\"\r\n            >\r\n              see official documentations\r\n            </a>\r\n          </span>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n          <div className=\"kt-section__content\">\r\n            <div className={classes8.root}>\r\n              <Paper className={classes8.paper}>\r\n                <Grid container wrap=\"nowrap\" spacing={2}>\r\n                  <Grid item>\r\n                    <Avatar>W</Avatar>\r\n                  </Grid>\r\n                  <Grid item xs zeroMinWidth>\r\n                    <Typography noWrap>{message}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n              <Paper className={classes8.paper}>\r\n                <Grid container wrap=\"nowrap\" spacing={2}>\r\n                  <Grid item>\r\n                    <Avatar>W</Avatar>\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <Typography noWrap>{message}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n              <Paper className={classes8.paper}>\r\n                <Grid container wrap=\"nowrap\" spacing={2}>\r\n                  <Grid item>\r\n                    <Avatar>W</Avatar>\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <Typography>{message}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n\r\n      <CodeExample jsCode={jsCode7} beforeCodeTitle=\"CSS Grid Layout\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            Material-UI doesn't provide any CSS Grid functionality itself, but\r\n            as seen below you can easily use CSS Grid to layout your pages.\r\n          </span>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n          <div className=\"kt-section__content\">\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Material-UI Grid:\r\n              </Typography>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={3}>\r\n                  <Paper className={classes7.paper}>xs=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Paper className={classes7.paper}>xs=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Paper className={classes7.paper}>xs=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Paper className={classes7.paper}>xs=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <Paper className={classes7.paper}>xs=8</Paper>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Paper className={classes7.paper}>xs=4</Paper>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider className={classes7.divider} />\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                CSS Grid Layout:\r\n              </Typography>\r\n              <div className={classes7.container}>\r\n                <div style={{ gridColumnEnd: \"span 3\" }}>\r\n                  <Paper className={classes7.paper}>xs=3</Paper>\r\n                </div>\r\n                <div style={{ gridColumnEnd: \"span 3\" }}>\r\n                  <Paper className={classes7.paper}>xs=3</Paper>\r\n                </div>\r\n                <div style={{ gridColumnEnd: \"span 3\" }}>\r\n                  <Paper className={classes7.paper}>xs=3</Paper>\r\n                </div>\r\n                <div style={{ gridColumnEnd: \"span 3\" }}>\r\n                  <Paper className={classes7.paper}>xs=3</Paper>\r\n                </div>\r\n                <div style={{ gridColumnEnd: \"span 8\" }}>\r\n                  <Paper className={classes7.paper}>xs=8</Paper>\r\n                </div>\r\n                <div style={{ gridColumnEnd: \"span 4\" }}>\r\n                  <Paper className={classes7.paper}>xs=4</Paper>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}