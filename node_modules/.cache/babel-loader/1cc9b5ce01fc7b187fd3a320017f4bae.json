{"ast":null,"code":"import _classCallCheck from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/src/app/pages/home/react-bootstrap/DropdownsExamplesPage.js\";\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport Notice from \"../../../partials/content/Notice\";\nimport CodeExample from \"../../../partials/content/CodeExample\";\nimport { Button, Dropdown, FormControl, ButtonGroup, DropdownButton, SplitButton, ButtonToolbar } from \"react-bootstrap\";\nvar CustomToggle = React.forwardRef(function (props, ref) {\n  return React.createElement(\"a\", {\n    href: \"\",\n    ref: ref,\n    onClick: function onClick(e) {\n      e.preventDefault();\n\n      _this.props.handleClick(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.children);\n});\n\nvar CustomMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomMenu, _React$Component);\n\n  function CustomMenu(props, context) {\n    var _this2;\n\n    _classCallCheck(this, CustomMenu);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(CustomMenu).call(this, props, context));\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_this2));\n    _this2.state = {\n      value: \"\"\n    };\n    return _this2;\n  }\n\n  _createClass(CustomMenu, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        value: e.target.value.toLowerCase().trim()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          style = _this$props.style,\n          className = _this$props.className,\n          labeledBy = _this$props[\"aria-labelledby\"];\n      var value = this.state.value;\n      return React.createElement(\"div\", {\n        style: style,\n        className: className,\n        \"aria-labelledby\": labeledBy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        autoFocus: true,\n        className: \"mx-3 my-2 w-auto\",\n        placeholder: \"Type to filter...\",\n        onChange: this.handleChange,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"list-unstyled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.Children.toArray(children).filter(function (child) {\n        return !value || child.props.children.toLowerCase().startsWith(value);\n      })));\n    }\n  }]);\n\n  return CustomMenu;\n}(React.Component);\n\nvar DropdownsExamplesPage =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(DropdownsExamplesPage, _React$Component2);\n\n  function DropdownsExamplesPage() {\n    _classCallCheck(this, DropdownsExamplesPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DropdownsExamplesPage).apply(this, arguments));\n  }\n\n  _createClass(DropdownsExamplesPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Notice, {\n        icon: \"flaticon-warning kt-font-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Toggle contextual overlays for displaying lists of links and more with the Bootstrap dropdown plugin\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"For more info please check the components's official\", \" \", React.createElement(\"a\", {\n        target: \"_blank\",\n        className: \"kt-link\",\n        rel: \"noopener noreferrer\",\n        href: \"https://react-bootstrap.github.io/components/dropdowns/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"demos & documentation\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode1,\n        beforeCodeTitle: \"Single button dropdowns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"The basic Dropdown is composed of a wrapping Dropdown and inner \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"<DropdownMenu>\"), \", and\", \" \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"<DropdownToggle>\"), \". By default the\", \" \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"<DropdownToggle>\"), \" will render a Button component and accepts all the same props.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Dropdown Button\"), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        href: \"#/action-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Action\"), React.createElement(Dropdown.Item, {\n        href: \"#/action-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Another action\"), React.createElement(Dropdown.Item, {\n        href: \"#/action-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Something else\")))))), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode2,\n        beforeCodeTitle: \"Split button dropdowns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Similarly, You create a split dropdown by combining the Dropdown components with another Button and a ButtonGroup.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(Dropdown, {\n        as: ButtonGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Split Button\"), React.createElement(Dropdown.Toggle, {\n        split: true,\n        variant: \"success\",\n        id: \"dropdown-split-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        href: \"#/action-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Action\"), React.createElement(Dropdown.Item, {\n        href: \"#/action-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Another action\"), React.createElement(Dropdown.Item, {\n        href: \"#/action-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Something else\"))))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode3,\n        beforeCodeTitle: \"Sizing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Dropdowns work with buttons of all sizes.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(React.Fragment, null, React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, [DropdownButton, SplitButton].map(function (DropdownType, idx) {\n        return React.createElement(\"div\", {\n          key: idx,\n          className: \"pr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(DropdownType, {\n          size: \"lg\",\n          title: \"Drop small\",\n          id: \"dropdown-button-drop-\".concat(idx),\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"Action\"), React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, \"Another action\"), React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \"Something else here\"), React.createElement(Dropdown.Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }), React.createElement(Dropdown.Item, {\n          eventKey: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \"Separated link\")));\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, [DropdownButton, SplitButton].map(function (DropdownType, idx) {\n        return React.createElement(\"div\", {\n          key: idx,\n          className: \"pr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(DropdownType, {\n          size: \"sm\",\n          variant: \"secondary\",\n          title: \"Drop small\",\n          id: \"dropdown-button-drop-\".concat(idx),\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, \"Action\"), React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, \"Another action\"), React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, \"Something else here\"), React.createElement(Dropdown.Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }), React.createElement(Dropdown.Item, {\n          eventKey: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"Separated link\")));\n      })))))), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode4,\n        beforeCodeTitle: \"Drop directions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Trigger dropdown menus above, below, left, or to the right of their toggle elements, with the \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"drop\"), \" prop.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(React.Fragment, null, React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, [\"up\", \"down\", \"left\", \"right\"].map(function (direction) {\n        return React.createElement(\"div\", {\n          className: \"pr-1 pb-1\",\n          key: direction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, React.createElement(DropdownButton, {\n          drop: direction,\n          variant: \"secondary\",\n          title: \" Drop \".concat(direction, \" \"),\n          id: \"dropdown-button-drop-\".concat(direction),\n          key: direction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, \"Action\"), React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, \"Another action\"), React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, \"Something else here\"), React.createElement(Dropdown.Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }), React.createElement(Dropdown.Item, {\n          eventKey: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, \"Separated link\")));\n      })), React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, [\"up\", \"down\", \"left\", \"right\"].map(function (direction) {\n        return React.createElement(\"div\", {\n          className: \"pr-1\",\n          key: direction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, React.createElement(SplitButton, {\n          drop: direction,\n          variant: \"secondary\",\n          title: \"Drop \".concat(direction),\n          id: \"dropdown-button-drop-\".concat(direction),\n          key: direction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }, \"Action\"), React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, \"Another action\"), React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }, \"Something else here\"), React.createElement(Dropdown.Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }), React.createElement(Dropdown.Item, {\n          eventKey: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, \"Separated link\")));\n      }))))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode5,\n        beforeCodeTitle: \"Dropdown items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"Historically dropdown menu contents had to be links, but that\\u2019s no longer the case with v4. Now you can optionally use\", \" \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"<button>\"), \" elements in your dropdowns instead of just \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"<a>\"), \"s.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(DropdownButton, {\n        id: \"dropdown-item-button\",\n        title: \"Dropdown button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        as: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Action\"), React.createElement(Dropdown.Item, {\n        as: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Another action\"), React.createElement(Dropdown.Item, {\n        as: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"Something else\"))))), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode6,\n        beforeCodeTitle: \"Menu alignment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"By default, a dropdown menu is aligned to the left, but you can switch it by passing the \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"alignRight\"), \" prop.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), React.createElement(DropdownButton, {\n        alignRight: true,\n        title: \"Dropdown right\",\n        id: \"dropdown-menu-align-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"Action\"), React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Another action\"), React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Something else here\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }), React.createElement(Dropdown.Item, {\n        eventKey: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Separated link\")))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode9,\n        beforeCodeTitle: \"Customization\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"If the default handling of the dropdown menu and toggle components aren't to your liking, you can customize them, by using the more basic \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"<Dropdown>\"), \" Component to explicitly specify the Toggle and Menu components\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }), React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        id: \"dropdown-custom-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Pow! Zoom!\"), React.createElement(Dropdown.Menu, {\n        className: \"super-colors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \"Action\"), React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"Another action\"), React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"Active Item\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }), React.createElement(Dropdown.Item, {\n        eventKey: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"Separated link\")))), React.createElement(\"div\", {\n        className: \"pr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        as: ButtonGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, \"mix it up style-wise\"), React.createElement(Dropdown.Toggle, {\n        split: true,\n        variant: \"success\",\n        id: \"dropdown-custom-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }), React.createElement(Dropdown.Menu, {\n        className: \"super-colors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \"Action\"), React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"Another action\"), React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, \"Active Item\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }), React.createElement(Dropdown.Item, {\n        eventKey: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"Separated link\")))))))), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode10,\n        beforeCodeTitle: \"Custom Dropdown Components\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \"For those that want to customize everything, you can forgo the included Toggle and Menu components, and create your own. By providing custom components to the \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, \"as\"), \" prop, you can control how each component behaves. Custom toggle and menu components must be able to accept refs.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }), React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        as: CustomToggle,\n        id: \"dropdown-custom-components\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, \"Custom toggle\"), React.createElement(Dropdown.Menu, {\n        as: CustomMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, \"Red\"), React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, \"Blue\"), React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, \"Orange\"), React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, \"Red-Orange\"))))))));\n    }\n  }]);\n\n  return DropdownsExamplesPage;\n}(React.Component);\n\nexport { DropdownsExamplesPage as default };\nvar jsCode1 = \"\\n<Dropdown>\\n  <Dropdown.Toggle variant=\\\"success\\\" id=\\\"dropdown-basic\\\">\\n    Dropdown Button\\n  </Dropdown.Toggle>\\n\\n  <Dropdown.Menu>\\n    <Dropdown.Item href=\\\"#/action-1\\\">Action</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-2\\\">Another action</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-3\\\">Something else</Dropdown.Item>\\n  </Dropdown.Menu>\\n</Dropdown>\\n\";\nvar jsCode2 = \"\\n<Dropdown as={ButtonGroup}>\\n  <Button variant=\\\"success\\\">Split Button</Button>\\n\\n  <Dropdown.Toggle split variant=\\\"success\\\" id=\\\"dropdown-split-basic\\\" />\\n\\n  <Dropdown.Menu>\\n    <Dropdown.Item href=\\\"#/action-1\\\">Action</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-2\\\">Another action</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-3\\\">Something else</Dropdown.Item>\\n  </Dropdown.Menu>\\n</Dropdown>\\n\";\nvar jsCode3 = \"\\n<>\\n  <ButtonToolbar>\\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\\n      <DropdownType\\n        size=\\\"lg\\\"\\n        title=\\\"Drop small\\\"\\n        id={`dropdown-button-drop-${idx}`}\\n        key={idx}\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n        <Dropdown.Divider />\\n        <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n      </DropdownType>\\n    ))}\\n  </ButtonToolbar>\\n  <ButtonToolbar>\\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\\n      <DropdownType\\n        size=\\\"sm\\\"\\n        variant=\\\"secondary\\\"\\n        title=\\\"Drop small\\\"\\n        id={`dropdown-button-drop-${idx}`}\\n        key={idx}\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n        <Dropdown.Divider />\\n        <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n      </DropdownType>\\n    ))}\\n  </ButtonToolbar>\\n</>\\n\";\nvar jsCode4 = \"\\n<>\\n  <ButtonToolbar>\\n    {['up', 'down', 'left', 'right'].map(direction => (\\n      <DropdownButton\\n        drop={direction}\\n        variant=\\\"secondary\\\"\\n        title={` Drop ${direction} `}\\n        id={`dropdown-button-drop-${direction}`}\\n        key={direction}\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n        <Dropdown.Divider />\\n        <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n      </DropdownButton>\\n    ))}\\n  </ButtonToolbar>\\n\\n  <ButtonToolbar>\\n    {['up', 'down', 'left', 'right'].map(direction => (\\n      <SplitButton\\n        drop={direction}\\n        variant=\\\"secondary\\\"\\n        title={`Drop ${direction}`}\\n        id={`dropdown-button-drop-${direction}`}\\n        key={direction}\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n        <Dropdown.Divider />\\n        <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n      </SplitButton>\\n    ))}\\n  </ButtonToolbar>\\n</>\\n\";\nvar jsCode5 = \"\\n<DropdownButton id=\\\"dropdown-item-button\\\" title=\\\"Dropdown button\\\">\\n  <Dropdown.Item as=\\\"button\\\">Action</Dropdown.Item>\\n  <Dropdown.Item as=\\\"button\\\">Another action</Dropdown.Item>\\n  <Dropdown.Item as=\\\"button\\\">Something else</Dropdown.Item>\\n</DropdownButton>\\n\";\nvar jsCode6 = \"\\n<DropdownButton\\n  alignRight\\n  title=\\\"Dropdown right\\\"\\n  id=\\\"dropdown-menu-align-right\\\"\\n>\\n  <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n  <Dropdown.Divider />\\n  <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n</DropdownButton>\\n\";\nvar jsCode7 = \"\\n<Dropdown.Menu show>\\n  <Dropdown.Header>Dropdown header</Dropdown.Header>\\n  <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n</Dropdown.Menu>\\n\";\nvar jsCode8 = \"\\n<Dropdown.Menu show>\\n  <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n  <Dropdown.Divider />\\n  <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n</Dropdown.Menu>\\n\";\nvar jsCode9 = \"\\n<ButtonToolbar>\\n  <Dropdown>\\n    <Dropdown.Toggle id=\\\"dropdown-custom-1\\\">Pow! Zoom!</Dropdown.Toggle>\\n    <Dropdown.Menu className=\\\"super-colors\\\">\\n      <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"3\\\" active>\\n        Active Item\\n      </Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown as={ButtonGroup}>\\n    <Button variant=\\\"info\\\">mix it up style-wise</Button>\\n    <Dropdown.Toggle split variant=\\\"success\\\" id=\\\"dropdown-custom-2\\\" />\\n    <Dropdown.Menu className=\\\"super-colors\\\">\\n      <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"3\\\" active>\\n        Active Item\\n      </Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n</ButtonToolbar>\\n\";\nvar jsCode10 = \"\\nclass CustomToggle extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.handleClick = this.handleClick.bind(this);\\n  }\\n\\n  handleClick(e) {\\n    e.preventDefault();\\n\\n    this.props.onClick(e);\\n  }\\n\\n  render() {\\n    return (\\n      <a href=\\\"\\\" onClick={this.handleClick}>\\n        {this.props.children}\\n      </a>\\n    );\\n  }\\n}\\n\\nclass CustomMenu extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.handleChange = this.handleChange.bind(this);\\n\\n    this.state = { value: '' };\\n  }\\n\\n  handleChange(e) {\\n    this.setState({ value: e.target.value.toLowerCase().trim() });\\n  }\\n\\n  render() {\\n    const {\\n      children,\\n      style,\\n      className,\\n      'aria-labelledby': labeledBy,\\n    } = this.props;\\n\\n    const { value } = this.state;\\n\\n    return (\\n      <div style={style} className={className} aria-labelledby={labeledBy}>\\n        <FormControl\\n          autoFocus\\n          className=\\\"mx-3 my-2 w-auto\\\"\\n          placeholder=\\\"Type to filter...\\\"\\n          onChange={this.handleChange}\\n          value={value}\\n        />\\n        <ul className=\\\"list-unstyled\\\">\\n          {React.Children.toArray(children).filter(\\n            child =>\\n              !value || child.props.children.toLowerCase().startsWith(value),\\n          )}\\n        </ul>\\n      </div>\\n    );\\n  }\\n}\\n\\nrender(\\n  <Dropdown>\\n    <Dropdown.Toggle as={CustomToggle} id=\\\"dropdown-custom-components\\\">\\n      Custom toggle\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu as={CustomMenu}>\\n      <Dropdown.Item eventKey=\\\"1\\\">Red</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"2\\\">Blue</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"3\\\" active>\\n        Orange\\n      </Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"1\\\">Red-Orange</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>,\\n);\\n\";","map":{"version":3,"sources":["/Users/chosun/Downloads/metronic_v6.1.6/theme/react/demo1/src/app/pages/home/react-bootstrap/DropdownsExamplesPage.js"],"names":["React","Notice","CodeExample","Button","Dropdown","FormControl","ButtonGroup","DropdownButton","SplitButton","ButtonToolbar","CustomToggle","forwardRef","props","ref","e","preventDefault","handleClick","children","CustomMenu","context","handleChange","bind","state","value","setState","target","toLowerCase","trim","style","className","labeledBy","Children","toArray","filter","child","startsWith","Component","DropdownsExamplesPage","jsCode1","jsCode2","jsCode3","map","DropdownType","idx","jsCode4","direction","jsCode5","jsCode6","jsCode9","jsCode10","jsCode7","jsCode8"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport Notice from \"../../../partials/content/Notice\";\r\nimport CodeExample from \"../../../partials/content/CodeExample\";\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  FormControl,\r\n  ButtonGroup,\r\n  DropdownButton,\r\n  SplitButton,\r\n  ButtonToolbar\r\n} from \"react-bootstrap\";\r\n\r\nconst CustomToggle =  React.forwardRef((props, ref) => {\r\n  return (\r\n      <a href=\"\" ref={ref} onClick={e => {\r\n        e.preventDefault();\r\n        this.props.handleClick(e);\r\n      }}>\r\n        {props.children}\r\n      </a>\r\n  );\r\n});\r\n\r\nclass CustomMenu extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = { value: \"\" };\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value.toLowerCase().trim() });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      style,\r\n      className,\r\n      \"aria-labelledby\": labeledBy\r\n    } = this.props;\r\n\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div style={style} className={className} aria-labelledby={labeledBy}>\r\n        <FormControl\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Type to filter...\"\r\n          onChange={this.handleChange}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            child =>\r\n              !value || child.props.children.toLowerCase().startsWith(value)\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class DropdownsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning kt-font-primary\">\r\n          <p>\r\n            Toggle contextual overlays for displaying lists of links and more\r\n            with the Bootstrap dropdown plugin\r\n          </p>\r\n          <p>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"kt-link\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/dropdowns/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </p>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <CodeExample\r\n              jsCode={jsCode1}\r\n              beforeCodeTitle=\"Single button dropdowns\"\r\n            >\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  The basic Dropdown is composed of a wrapping Dropdown and\r\n                  inner <code>&lt;DropdownMenu&gt;</code>, and{\" \"}\r\n                  <code>&lt;DropdownToggle&gt;</code>. By default the{\" \"}\r\n                  <code>&lt;DropdownToggle&gt;</code> will render a Button\r\n                  component and accepts all the same props.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\" />\r\n                <Dropdown>\r\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                    Dropdown Button\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-2\">\r\n                      Another action\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-3\">\r\n                      Something else\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <CodeExample\r\n              jsCode={jsCode2}\r\n              beforeCodeTitle=\"Split button dropdowns\"\r\n            >\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  Similarly, You create a split dropdown by combining the\r\n                  Dropdown components with another Button and a ButtonGroup.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\" />\r\n                <Dropdown as={ButtonGroup}>\r\n                  <Button variant=\"success\">Split Button</Button>\r\n\r\n                  <Dropdown.Toggle\r\n                    split\r\n                    variant=\"success\"\r\n                    id=\"dropdown-split-basic\"\r\n                  />\r\n\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-2\">\r\n                      Another action\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-3\">\r\n                      Something else\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode3} beforeCodeTitle=\"Sizing\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  Dropdowns work with buttons of all sizes.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\" />\r\n                <>\r\n                  <ButtonToolbar>\r\n                    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n                      <div key={idx} className=\"pr-1\">\r\n                        <DropdownType\r\n                          size=\"lg\"\r\n                          title=\"Drop small\"\r\n                          id={`dropdown-button-drop-${idx}`}\r\n                          key={idx}\r\n                        >\r\n                          <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                          <Dropdown.Item eventKey=\"2\">\r\n                            Another action\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item eventKey=\"3\">\r\n                            Something else here\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Divider />\r\n                          <Dropdown.Item eventKey=\"4\">\r\n                            Separated link\r\n                          </Dropdown.Item>\r\n                        </DropdownType>\r\n                      </div>\r\n                    ))}\r\n                  </ButtonToolbar>\r\n                  <br />\r\n                  <ButtonToolbar>\r\n                    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n                      <div key={idx} className=\"pr-1\">\r\n                        <DropdownType\r\n                          size=\"sm\"\r\n                          variant=\"secondary\"\r\n                          title=\"Drop small\"\r\n                          id={`dropdown-button-drop-${idx}`}\r\n                          key={idx}\r\n                        >\r\n                          <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                          <Dropdown.Item eventKey=\"2\">\r\n                            Another action\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item eventKey=\"3\">\r\n                            Something else here\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Divider />\r\n                          <Dropdown.Item eventKey=\"4\">\r\n                            Separated link\r\n                          </Dropdown.Item>\r\n                        </DropdownType>\r\n                      </div>\r\n                    ))}\r\n                  </ButtonToolbar>\r\n                </>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode4} beforeCodeTitle=\"Drop directions\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  Trigger dropdown menus above, below, left, or to the right of\r\n                  their toggle elements, with the <code>drop</code> prop.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\" />\r\n                <>\r\n                  <ButtonToolbar>\r\n                    {[\"up\", \"down\", \"left\", \"right\"].map(direction => (\r\n                      <div className=\"pr-1 pb-1\" key={direction}>\r\n                        <DropdownButton\r\n                          drop={direction}\r\n                          variant=\"secondary\"\r\n                          title={` Drop ${direction} `}\r\n                          id={`dropdown-button-drop-${direction}`}\r\n                          key={direction}\r\n                        >\r\n                          <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                          <Dropdown.Item eventKey=\"2\">\r\n                            Another action\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item eventKey=\"3\">\r\n                            Something else here\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Divider />\r\n                          <Dropdown.Item eventKey=\"4\">\r\n                            Separated link\r\n                          </Dropdown.Item>\r\n                        </DropdownButton>\r\n                      </div>\r\n                    ))}\r\n                  </ButtonToolbar>\r\n\r\n                  <ButtonToolbar>\r\n                    {[\"up\", \"down\", \"left\", \"right\"].map(direction => (\r\n                      <div className=\"pr-1\" key={direction}>\r\n                        <SplitButton\r\n                          drop={direction}\r\n                          variant=\"secondary\"\r\n                          title={`Drop ${direction}`}\r\n                          id={`dropdown-button-drop-${direction}`}\r\n                          key={direction}\r\n                        >\r\n                          <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                          <Dropdown.Item eventKey=\"2\">\r\n                            Another action\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item eventKey=\"3\">\r\n                            Something else here\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Divider />\r\n                          <Dropdown.Item eventKey=\"4\">\r\n                            Separated link\r\n                          </Dropdown.Item>\r\n                        </SplitButton>\r\n                      </div>\r\n                    ))}\r\n                  </ButtonToolbar>\r\n                </>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode5} beforeCodeTitle=\"Dropdown items\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  Historically dropdown menu contents had to be links, but\r\n                  that’s no longer the case with v4. Now you can optionally use{\" \"}\r\n                  <code>&lt;button&gt;</code> elements in your dropdowns instead\r\n                  of just <code>&lt;a&gt;</code>s.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\" />\r\n                <DropdownButton\r\n                  id=\"dropdown-item-button\"\r\n                  title=\"Dropdown button\"\r\n                >\r\n                  <Dropdown.Item as=\"button\">Action</Dropdown.Item>\r\n                  <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\r\n                  <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\r\n                </DropdownButton>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode6} beforeCodeTitle=\"Menu alignment\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  By default, a dropdown menu is aligned to the left, but you\r\n                  can switch it by passing the <code>alignRight</code> prop.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\" />\r\n                <DropdownButton\r\n                  alignRight\r\n                  title=\"Dropdown right\"\r\n                  id=\"dropdown-menu-align-right\"\r\n                >\r\n                  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"3\">\r\n                    Something else here\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                </DropdownButton>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode9} beforeCodeTitle=\"Customization\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  If the default handling of the dropdown menu and toggle\r\n                  components aren't to your liking, you can customize them, by\r\n                  using the more basic <code>&lt;Dropdown&gt;</code> Component\r\n                  to explicitly specify the Toggle and Menu components\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\" />\r\n                <ButtonToolbar>\r\n                  <div className=\"pr-1\">\r\n                    <Dropdown>\r\n                      <Dropdown.Toggle id=\"dropdown-custom-1\">\r\n                        Pow! Zoom!\r\n                      </Dropdown.Toggle>\r\n                      <Dropdown.Menu className=\"super-colors\">\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">\r\n                          Another action\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\" active>\r\n                          Active Item\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\">\r\n                          Separated link\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </div>\r\n                  <div className=\"pr-1\">\r\n                    <Dropdown as={ButtonGroup}>\r\n                      <Button variant=\"info\">mix it up style-wise</Button>\r\n                      <Dropdown.Toggle\r\n                        split\r\n                        variant=\"success\"\r\n                        id=\"dropdown-custom-2\"\r\n                      />\r\n                      <Dropdown.Menu className=\"super-colors\">\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">\r\n                          Another action\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\" active>\r\n                          Active Item\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\">\r\n                          Separated link\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </div>\r\n                </ButtonToolbar>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <CodeExample\r\n              jsCode={jsCode10}\r\n              beforeCodeTitle=\"Custom Dropdown Components\"\r\n            >\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  For those that want to customize everything, you can forgo the\r\n                  included Toggle and Menu components, and create your own. By\r\n                  providing custom components to the <code>as</code> prop, you\r\n                  can control how each component behaves. Custom toggle and menu\r\n                  components must be able to accept refs.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\" />\r\n                <Dropdown>\r\n                  <Dropdown.Toggle\r\n                    as={CustomToggle}\r\n                    id=\"dropdown-custom-components\"\r\n                  >\r\n                    Custom toggle\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu as={CustomMenu}>\r\n                    <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\" active>\r\n                      Orange\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Dropdown>\r\n  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n    Dropdown Button\r\n  </Dropdown.Toggle>\r\n\r\n  <Dropdown.Menu>\r\n    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n  </Dropdown.Menu>\r\n</Dropdown>\r\n`;\r\nconst jsCode2 = `\r\n<Dropdown as={ButtonGroup}>\r\n  <Button variant=\"success\">Split Button</Button>\r\n\r\n  <Dropdown.Toggle split variant=\"success\" id=\"dropdown-split-basic\" />\r\n\r\n  <Dropdown.Menu>\r\n    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n  </Dropdown.Menu>\r\n</Dropdown>\r\n`;\r\nconst jsCode3 = `\r\n<>\r\n  <ButtonToolbar>\r\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n      <DropdownType\r\n        size=\"lg\"\r\n        title=\"Drop small\"\r\n        id={\\`dropdown-button-drop-\\${idx}\\`}\r\n        key={idx}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </DropdownType>\r\n    ))}\r\n  </ButtonToolbar>\r\n  <ButtonToolbar>\r\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n      <DropdownType\r\n        size=\"sm\"\r\n        variant=\"secondary\"\r\n        title=\"Drop small\"\r\n        id={\\`dropdown-button-drop-\\${idx}\\`}\r\n        key={idx}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </DropdownType>\r\n    ))}\r\n  </ButtonToolbar>\r\n</>\r\n`;\r\nconst jsCode4 = `\r\n<>\r\n  <ButtonToolbar>\r\n    {['up', 'down', 'left', 'right'].map(direction => (\r\n      <DropdownButton\r\n        drop={direction}\r\n        variant=\"secondary\"\r\n        title={\\` Drop \\${direction} \\`}\r\n        id={\\`dropdown-button-drop-\\${direction}\\`}\r\n        key={direction}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </DropdownButton>\r\n    ))}\r\n  </ButtonToolbar>\r\n\r\n  <ButtonToolbar>\r\n    {['up', 'down', 'left', 'right'].map(direction => (\r\n      <SplitButton\r\n        drop={direction}\r\n        variant=\"secondary\"\r\n        title={\\`Drop \\${direction}\\`}\r\n        id={\\`dropdown-button-drop-\\${direction}\\`}\r\n        key={direction}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </SplitButton>\r\n    ))}\r\n  </ButtonToolbar>\r\n</>\r\n`;\r\nconst jsCode5 = `\r\n<DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\r\n  <Dropdown.Item as=\"button\">Action</Dropdown.Item>\r\n  <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\r\n  <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\r\n</DropdownButton>\r\n`;\r\nconst jsCode6 = `\r\n<DropdownButton\r\n  alignRight\r\n  title=\"Dropdown right\"\r\n  id=\"dropdown-menu-align-right\"\r\n>\r\n  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n  <Dropdown.Divider />\r\n  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n</DropdownButton>\r\n`;\r\nconst jsCode7 = `\r\n<Dropdown.Menu show>\r\n  <Dropdown.Header>Dropdown header</Dropdown.Header>\r\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n</Dropdown.Menu>\r\n`;\r\nconst jsCode8 = `\r\n<Dropdown.Menu show>\r\n  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n  <Dropdown.Divider />\r\n  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n</Dropdown.Menu>\r\n`;\r\nconst jsCode9 = `\r\n<ButtonToolbar>\r\n  <Dropdown>\r\n    <Dropdown.Toggle id=\"dropdown-custom-1\">Pow! Zoom!</Dropdown.Toggle>\r\n    <Dropdown.Menu className=\"super-colors\">\r\n      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Active Item\r\n      </Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n\r\n  <Dropdown as={ButtonGroup}>\r\n    <Button variant=\"info\">mix it up style-wise</Button>\r\n    <Dropdown.Toggle split variant=\"success\" id=\"dropdown-custom-2\" />\r\n    <Dropdown.Menu className=\"super-colors\">\r\n      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Active Item\r\n      </Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode10 = `\r\nclass CustomToggle extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n\r\n    this.props.onClick(e);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a href=\"\" onClick={this.handleClick}>\r\n        {this.props.children}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nclass CustomMenu extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = { value: '' };\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value.toLowerCase().trim() });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      style,\r\n      className,\r\n      'aria-labelledby': labeledBy,\r\n    } = this.props;\r\n\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div style={style} className={className} aria-labelledby={labeledBy}>\r\n        <FormControl\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Type to filter...\"\r\n          onChange={this.handleChange}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            child =>\r\n              !value || child.props.children.toLowerCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nrender(\r\n  <Dropdown>\r\n    <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n      Custom toggle\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu as={CustomMenu}>\r\n      <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Orange\r\n      </Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>,\r\n);\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}