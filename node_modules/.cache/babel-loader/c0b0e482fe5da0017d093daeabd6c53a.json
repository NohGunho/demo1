{"ast":null,"code":"import _defineProperty from \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/src/app/pages/home/google-material/inputs/SelectsExamplesPage.js\";\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Input, OutlinedInput, FilledInput, InputLabel, MenuItem, FormHelperText, FormControl, Select, NativeSelect, InputBase, Checkbox, ListItemText, Chip, Button, Dialog, DialogActions, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport Notice from \"../../../../partials/content/Notice\";\nimport CodeExample from \"../../../../partials/content/CodeExample\"; // Example 1\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    }\n  };\n}); // Example 3\n\nvar BootstrapInput = withStyles(function (theme) {\n  return {\n    root: {\n      \"label + &\": {\n        marginTop: theme.spacing(3)\n      }\n    },\n    input: {\n      borderRadius: 4,\n      position: \"relative\",\n      backgroundColor: theme.palette.background.paper,\n      border: \"1px solid #ced4da\",\n      fontSize: 16,\n      padding: \"10px 26px 10px 12px\",\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", '\"Segoe UI\"', \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n      \"&:focus\": {\n        borderRadius: 4,\n        borderColor: \"#80bdff\",\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n      }\n    }\n  };\n})(InputBase);\nvar useStyles3 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    margin: {\n      margin: theme.spacing(1)\n    }\n  };\n}); // Example 4\n\nvar useStyles4 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      maxWidth: 300\n    },\n    chips: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    chip: {\n      margin: 2\n    },\n    noLabel: {\n      marginTop: theme.spacing(3)\n    }\n  };\n});\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nvar names = [\"Oliver Hansen\", \"Van Henry\", \"April Tucker\", \"Ralph Hubbard\", \"Omar Alexander\", \"Carlos Abbott\", \"Miriam Wagner\", \"Bradley Wilkerson\", \"Virginia Andrews\", \"Kelly Snyder\"];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n} // Example 5\n\n\nvar useStyles5 = makeStyles(function (theme) {\n  return {\n    button: {\n      display: \"block\",\n      marginTop: theme.spacing(2)\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    }\n  };\n}); // Example 6\n\nvar useStyles6 = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    }\n  };\n});\nexport default function SelectsExamplesPage() {\n  // Example 1\n  var classes = useStyles();\n\n  var _React$useState = React.useState({\n    age: \"\",\n    name: \"hai\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1]; // Example 2\n\n\n  var _React$useState3 = React.useState({\n    age: \"\",\n    name: \"hai\"\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  var inputLabel = React.useRef(null);\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      labelWidth = _React$useState6[0],\n      setLabelWidth = _React$useState6[1];\n\n  React.useEffect(function () {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  function handleChange(event) {\n    setValues(function (oldValues) {\n      return _objectSpread({}, oldValues, _defineProperty({}, event.target.name, event.target.value));\n    });\n  }\n\n  var handleChange2 = function handleChange2(name) {\n    return function (event) {\n      setState(_objectSpread({}, state, _defineProperty({}, name, event.target.value)));\n    };\n  }; // Example 3\n\n\n  var classes3 = useStyles3();\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      age = _React$useState8[0],\n      setAge = _React$useState8[1];\n\n  var handleChange3 = function handleChange3(event) {\n    setAge(event.target.value);\n  }; // Exmaple 4\n\n\n  var classes4 = useStyles4();\n  var theme = useTheme();\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      personName = _React$useState10[0],\n      setPersonName = _React$useState10[1];\n\n  function handleChange4(event) {\n    setPersonName(event.target.value);\n  }\n\n  function handleChangeMultiple(event) {\n    var options = event.target.options;\n    var value = [];\n\n    for (var i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setPersonName(value);\n  } // Example 5\n\n\n  var classes5 = useStyles();\n\n  var _React$useState11 = React.useState(\"\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      age2 = _React$useState12[0],\n      setAge2 = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      open = _React$useState14[0],\n      setOpen = _React$useState14[1];\n\n  function handleChange5(event) {\n    setAge(event.target.value);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleOpen() {\n    setOpen(true);\n  } // Example 6\n\n\n  var classes6 = useStyles6();\n\n  var _React$useState15 = React.useState({\n    open: false,\n    age: \"\"\n  }),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      state6 = _React$useState16[0],\n      setState6 = _React$useState16[1];\n\n  var handleChange6 = function handleChange6(name) {\n    return function (event) {\n      setState6(_objectSpread({}, state6, _defineProperty({}, name, Number(event.target.value))));\n    };\n  };\n\n  function handleClickOpen6() {\n    setState6(_objectSpread({}, state6, {\n      open: true\n    }));\n  }\n\n  function handleClose6() {\n    setState6(_objectSpread({}, state6, {\n      open: false\n    }));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Notice, {\n    icon: \"flaticon-warning kt-font-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"Select components are used for collecting user provided information from a list of options.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, \"For more info please check the components's official\", \" \", React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"kt-link\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/selects/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"demos & documentation\"))), React.createElement(CodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Simple Select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, \"Menus are positioned over their emitting elements such that the currently selected menu item appears on top of the emitting element.\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.root,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"age-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    value: values.age,\n    onChange: handleChange,\n    inputProps: {\n      name: \"age\",\n      id: \"age-simple\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(MenuItem, {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, \"Thirty\"))), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"age-helper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    value: values.age,\n    onChange: handleChange,\n    input: React.createElement(Input, {\n      name: \"age\",\n      id: \"age-helper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, \"None\")), React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(MenuItem, {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, \"Thirty\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, \"Some important helper text\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, React.createElement(Select, {\n    value: values.age,\n    onChange: handleChange,\n    displayEmpty: true,\n    name: \"age\",\n    className: classes.selectEmpty,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, \"None\")), React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(MenuItem, {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, \"Thirty\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, \"Without label\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    shrink: true,\n    htmlFor: \"age-label-placeholder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    value: values.age,\n    onChange: handleChange,\n    input: React.createElement(Input, {\n      name: \"age\",\n      id: \"age-label-placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }),\n    displayEmpty: true,\n    name: \"age\",\n    className: classes.selectEmpty,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }, \"None\")), React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(MenuItem, {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, \"Thirty\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, \"Label + placeholder\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"name-disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Select, {\n    value: values.name,\n    onChange: handleChange,\n    input: React.createElement(Input, {\n      name: \"name\",\n      id: \"name-disabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373\n    },\n    __self: this\n  }, \"None\")), React.createElement(MenuItem, {\n    value: \"hai\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, \"Hai\"), React.createElement(MenuItem, {\n    value: \"olivier\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }, \"Olivier\"), React.createElement(MenuItem, {\n    value: \"kevin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }, \"Kevin\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, \"Disabled\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    error: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"name-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Select, {\n    value: values.name,\n    onChange: handleChange,\n    name: \"name\",\n    renderValue: function renderValue(value) {\n      return \"! - \".concat(value);\n    },\n    input: React.createElement(Input, {\n      id: \"name-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, \"None\")), React.createElement(MenuItem, {\n    value: \"hai\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, \"Hai\"), React.createElement(MenuItem, {\n    value: \"olivier\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, \"Olivier\"), React.createElement(MenuItem, {\n    value: \"kevin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, \"Kevin\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }, \"Error\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"name-readonly\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Select, {\n    value: values.name,\n    onChange: handleChange,\n    input: React.createElement(Input, {\n      name: \"name\",\n      id: \"name-readonly\",\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  }, \"None\")), React.createElement(MenuItem, {\n    value: \"hai\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }, \"Hai\"), React.createElement(MenuItem, {\n    value: \"olivier\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }, \"Olivier\"), React.createElement(MenuItem, {\n    value: \"kevin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }, \"Kevin\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  }, \"Read only\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"age-auto-width\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    value: values.age,\n    onChange: handleChange,\n    input: React.createElement(Input, {\n      name: \"age\",\n      id: \"age-auto-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }),\n    autoWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  }, \"None\")), React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(MenuItem, {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, \"Thirty\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, \"Auto width\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, React.createElement(Select, {\n    value: values.age,\n    onChange: handleChange,\n    name: \"age\",\n    displayEmpty: true,\n    className: classes.selectEmpty,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }, \"Placeholder\"), React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(MenuItem, {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445\n    },\n    __self: this\n  }, \"Thirty\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447\n    },\n    __self: this\n  }, \"Placeholder\")), React.createElement(FormControl, {\n    required: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"age-required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    value: values.age,\n    onChange: handleChange,\n    name: \"age\",\n    inputProps: {\n      id: \"age-required\"\n    },\n    className: classes.selectEmpty,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461\n    },\n    __self: this\n  }, \"None\")), React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(MenuItem, {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465\n    },\n    __self: this\n  }, \"Thirty\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467\n    },\n    __self: this\n  }, \"Required\")), React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    ref: inputLabel,\n    htmlFor: \"outlined-age-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    value: values.age,\n    onChange: handleChange,\n    input: React.createElement(OutlinedInput, {\n      labelWidth: labelWidth,\n      name: \"age\",\n      id: \"outlined-age-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485\n    },\n    __self: this\n  }, \"None\")), React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(MenuItem, {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489\n    },\n    __self: this\n  }, \"Thirty\"))), React.createElement(FormControl, {\n    variant: \"filled\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"filled-age-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    value: values.age,\n    onChange: handleChange,\n    input: React.createElement(FilledInput, {\n      name: \"age\",\n      id: \"filled-age-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500\n    },\n    __self: this\n  }, \"None\")), React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(MenuItem, {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504\n    },\n    __self: this\n  }, \"Thirty\"))))))), React.createElement(CodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Native Select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514\n    },\n    __self: this\n  }, \"As the user experience can be improved on mobile using the native select of the platform, we allow such pattern.\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    native: true,\n    value: state.age,\n    onChange: handleChange2(\"age\"),\n    inputProps: {\n      name: \"age\",\n      id: \"age-native-simple\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(\"option\", {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(\"option\", {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535\n    },\n    __self: this\n  }, \"Thirty\"))), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"age-native-helper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539\n    },\n    __self: this\n  }, \"Age\"), React.createElement(NativeSelect, {\n    value: state.age,\n    onChange: handleChange2(\"age\"),\n    input: React.createElement(Input, {\n      name: \"age\",\n      id: \"age-native-helper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(\"option\", {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(\"option\", {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548\n    },\n    __self: this\n  }, \"Thirty\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550\n    },\n    __self: this\n  }, \"Some important helper text\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552\n    },\n    __self: this\n  }, React.createElement(NativeSelect, {\n    value: state.age,\n    onChange: handleChange2(\"age\"),\n    name: \"age\",\n    className: classes.selectEmpty,\n    inputProps: {\n      \"aria-label\": \"age\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560\n    },\n    __self: this\n  }, \"None\"), React.createElement(\"option\", {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(\"option\", {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(\"option\", {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563\n    },\n    __self: this\n  }, \"Thirty\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565\n    },\n    __self: this\n  }, \"With visually hidden label\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    shrink: true,\n    htmlFor: \"age-native-label-placeholder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568\n    },\n    __self: this\n  }, \"Age\"), React.createElement(NativeSelect, {\n    value: state.age,\n    onChange: handleChange2(\"age\"),\n    input: React.createElement(Input, {\n      name: \"age\",\n      id: \"age-native-label-placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576\n    },\n    __self: this\n  }, \"None\"), React.createElement(\"option\", {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(\"option\", {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(\"option\", {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579\n    },\n    __self: this\n  }, \"Thirty\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581\n    },\n    __self: this\n  }, \"Label + placeholder\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"name-native-disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584\n    },\n    __self: this\n  }, \"Name\"), React.createElement(NativeSelect, {\n    value: state.name,\n    onChange: handleChange2(\"name\"),\n    input: React.createElement(Input, {\n      name: \"name\",\n      id: \"name-native-disabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590\n    },\n    __self: this\n  }), React.createElement(\"optgroup\", {\n    label: \"Author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"hai\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592\n    },\n    __self: this\n  }, \"Hai\")), React.createElement(\"optgroup\", {\n    label: \"Contributors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"olivier\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595\n    },\n    __self: this\n  }, \"Olivier\"), React.createElement(\"option\", {\n    value: \"kevin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596\n    },\n    __self: this\n  }, \"Kevin\"))), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599\n    },\n    __self: this\n  }, \"Disabled\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    error: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"name-native-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602\n    },\n    __self: this\n  }, \"Name\"), React.createElement(NativeSelect, {\n    value: state.name,\n    onChange: handleChange2(\"name\"),\n    name: \"name\",\n    input: React.createElement(Input, {\n      id: \"name-native-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609\n    },\n    __self: this\n  }), React.createElement(\"optgroup\", {\n    label: \"Author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"hai\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611\n    },\n    __self: this\n  }, \"Hai\")), React.createElement(\"optgroup\", {\n    label: \"Contributors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"olivier\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614\n    },\n    __self: this\n  }, \"Olivier\"), React.createElement(\"option\", {\n    value: \"kevin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615\n    },\n    __self: this\n  }, \"Kevin\"))), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618\n    },\n    __self: this\n  }, \"Error\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"uncontrolled-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621\n    },\n    __self: this\n  }, \"Name\"), React.createElement(NativeSelect, {\n    defaultValue: 30,\n    input: React.createElement(Input, {\n      name: \"name\",\n      id: \"uncontrolled-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(\"option\", {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(\"option\", {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629\n    },\n    __self: this\n  }, \"Thirty\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631\n    },\n    __self: this\n  }, \"Uncontrolled\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633\n    },\n    __self: this\n  }, React.createElement(NativeSelect, {\n    className: classes.selectEmpty,\n    value: state.age,\n    name: \"age\",\n    onChange: handleChange2(\"age\"),\n    inputProps: {\n      \"aria-label\": \"age\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641\n    },\n    __self: this\n  }, \"Placeholder\"), React.createElement(\"option\", {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(\"option\", {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(\"option\", {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646\n    },\n    __self: this\n  }, \"Thirty\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648\n    },\n    __self: this\n  }, \"Placeholder\")), React.createElement(FormControl, {\n    required: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"age-native-required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    native: true,\n    value: state.age,\n    onChange: handleChange2(\"age\"),\n    name: \"age\",\n    inputProps: {\n      id: \"age-native-required\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(\"option\", {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(\"option\", {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664\n    },\n    __self: this\n  }, \"Thirty\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666\n    },\n    __self: this\n  }, \"Required\")), React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    ref: inputLabel,\n    htmlFor: \"outlined-age-native-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    native: true,\n    value: state.age,\n    onChange: handleChange2(\"age\"),\n    input: React.createElement(OutlinedInput, {\n      name: \"age\",\n      labelWidth: labelWidth,\n      id: \"outlined-age-native-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(\"option\", {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(\"option\", {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690\n    },\n    __self: this\n  }, \"Thirty\"))), React.createElement(FormControl, {\n    variant: \"filled\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"filled-age-native-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    native: true,\n    value: state.age,\n    onChange: handleChange2(\"age\"),\n    input: React.createElement(FilledInput, {\n      name: \"age\",\n      id: \"filled-age-native-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(\"option\", {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(\"option\", {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706\n    },\n    __self: this\n  }, \"Thirty\"))))))), React.createElement(CodeExample, {\n    jsCode: jsCode3,\n    beforeCodeTitle: \"Customized selects\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716\n    },\n    __self: this\n  }, \"The first step is to style the \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717\n    },\n    __self: this\n  }, \"InputBase\"), \" component. Once it's styled, you can either use it directly as a text field or provide it to the select \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719\n    },\n    __self: this\n  }, \"input\"), \" property to have a\", \" \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720\n    },\n    __self: this\n  }, \"select\"), \" field.\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes3.root,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"d-flex justify-content-center width-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes3.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"age-customized-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728\n    },\n    __self: this\n  }, \"Age\"), React.createElement(BootstrapInput, {\n    id: \"age-customized-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes3.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"age-customized-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    value: age,\n    onChange: handleChange3,\n    input: React.createElement(BootstrapInput, {\n      name: \"age\",\n      id: \"age-customized-select\",\n      className: \"select_input-h\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745\n    },\n    __self: this\n  }, \"None\")), React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(MenuItem, {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749\n    },\n    __self: this\n  }, \"Thirty\"))), React.createElement(FormControl, {\n    className: classes3.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"age-customized-native-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753\n    },\n    __self: this\n  }, \"Age\"), React.createElement(NativeSelect, {\n    value: age,\n    onChange: handleChange3,\n    input: React.createElement(BootstrapInput, {\n      name: \"age\",\n      id: \"age-customized-native-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(\"option\", {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(\"option\", {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769\n    },\n    __self: this\n  }, \"Thirty\"))))))))), React.createElement(CodeExample, {\n    jsCode: jsCode4,\n    beforeCodeTitle: \"Multiple Select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781\n    },\n    __self: this\n  }, \"The \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782\n    },\n    __self: this\n  }, \"Select\"), \" component can handle multiple selections. It's enabled with the \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783\n    },\n    __self: this\n  }, \"multiple\"), \" property.\"), React.createElement(\"p\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785\n    },\n    __self: this\n  }, \"Like with the single selection, you can pull out the new value by accessing \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787\n    },\n    __self: this\n  }, \"event.target.value\"), \" in the\", \" \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788\n    },\n    __self: this\n  }, \"onChange\"), \" callback. It's always an array.\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes4.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"d-flex justify-content-center width-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 793\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes4.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"select-multiple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Select, {\n    multiple: true,\n    value: personName,\n    onChange: handleChange4,\n    input: React.createElement(Input, {\n      id: \"select-multiple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801\n      },\n      __self: this\n    }),\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797\n    },\n    __self: this\n  }, names.map(function (name) {\n    return React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      style: getStyles(name, personName, theme),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805\n      },\n      __self: this\n    }, name);\n  }))), React.createElement(FormControl, {\n    className: classes4.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"select-multiple-checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816\n    },\n    __self: this\n  }, \"Tag\"), React.createElement(Select, {\n    multiple: true,\n    value: personName,\n    onChange: handleChange4,\n    input: React.createElement(Input, {\n      id: \"select-multiple-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823\n      },\n      __self: this\n    }),\n    renderValue: function renderValue(selected) {\n      return selected.join(\", \");\n    },\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819\n    },\n    __self: this\n  }, names.map(function (name) {\n    return React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: personName.indexOf(name) > -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830\n      },\n      __self: this\n    }));\n  }))), React.createElement(FormControl, {\n    className: classes4.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"select-multiple-chip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836\n    },\n    __self: this\n  }, \"Chip\"), React.createElement(Select, {\n    multiple: true,\n    value: personName,\n    onChange: handleChange4,\n    input: React.createElement(Input, {\n      id: \"select-multiple-chip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841\n      },\n      __self: this\n    }),\n    renderValue: function renderValue(selected) {\n      return React.createElement(\"div\", {\n        className: classes4.chips,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843\n        },\n        __self: this\n      }, selected.map(function (value) {\n        return React.createElement(Chip, {\n          key: value,\n          label: value,\n          className: classes4.chip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 845\n          },\n          __self: this\n        });\n      }));\n    },\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837\n    },\n    __self: this\n  }, names.map(function (name) {\n    return React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      style: getStyles(name, personName, theme),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 856\n      },\n      __self: this\n    }, name);\n  }))), React.createElement(FormControl, {\n    className: clsx(classes4.formControl, classes4.noLabel),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866\n    },\n    __self: this\n  }, React.createElement(Select, {\n    multiple: true,\n    displayEmpty: true,\n    value: personName,\n    onChange: handleChange4,\n    input: React.createElement(Input, {\n      id: \"select-multiple-placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874\n      },\n      __self: this\n    }),\n    renderValue: function renderValue(selected) {\n      if (selected.length === 0) {\n        return React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 877\n          },\n          __self: this\n        }, \"Placeholder\");\n      }\n\n      return selected.join(\", \");\n    },\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 869\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    disabled: true,\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 884\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 885\n    },\n    __self: this\n  }, \"Placeholder\")), names.map(function (name) {\n    return React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      style: getStyles(name, personName, theme),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888\n      },\n      __self: this\n    }, name);\n  }))), React.createElement(FormControl, {\n    className: classes4.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 898\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    shrink: true,\n    htmlFor: \"select-multiple-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899\n    },\n    __self: this\n  }, \"Native\"), React.createElement(Select, {\n    multiple: true,\n    native: true,\n    value: personName,\n    onChange: handleChangeMultiple,\n    inputProps: {\n      id: \"select-multiple-native\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902\n    },\n    __self: this\n  }, names.map(function (name) {\n    return React.createElement(\"option\", {\n      key: name,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912\n      },\n      __self: this\n    }, name);\n  }))))))))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 925\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926\n    },\n    __self: this\n  }, React.createElement(CodeExample, {\n    jsCode: jsCode5,\n    beforeCodeTitle: \"Controlled Open Select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 932\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 933\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes5.button,\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 934\n    },\n    __self: this\n  }, \"Open the select\"), React.createElement(\"div\", {\n    className: \"d-flex justify-content-center width-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 937\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes5.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-controlled-open-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    open: open,\n    onClose: handleClose,\n    onOpen: handleOpen,\n    value: age,\n    onChange: handleChange5,\n    inputProps: {\n      name: \"age\",\n      id: \"demo-controlled-open-select\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955\n    },\n    __self: this\n  }, \"None\")), React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(MenuItem, {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 959\n    },\n    __self: this\n  }, \"Thirty\")))))))))), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 969\n    },\n    __self: this\n  }, React.createElement(CodeExample, {\n    jsCode: jsCode6,\n    beforeCodeTitle: \"With a Dialog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 970\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972\n    },\n    __self: this\n  }, \"While it's discouraged by the Material Design specification, you can use a select inside a dialog.\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"d-flex justify-content-center width-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClickOpen6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 980\n    },\n    __self: this\n  }, \"Open select dialog\"), React.createElement(Dialog, {\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    open: state6.open,\n    onClose: handleClose6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989\n    },\n    __self: this\n  }, \"Fill the form\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes6.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 991\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes6.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 992\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    native: true,\n    value: state6.age,\n    onChange: handleChange6(\"age\"),\n    input: React.createElement(Input, {\n      id: \"age-native-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 996\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1002\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1003\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(\"option\", {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(\"option\", {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1005\n    },\n    __self: this\n  }, \"Thirty\"))), React.createElement(FormControl, {\n    className: classes6.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"age-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1009\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    value: state6.age,\n    onChange: handleChange6(\"age\"),\n    input: React.createElement(Input, {\n      id: \"age-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1013\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1010\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016\n    },\n    __self: this\n  }, \"None\")), React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1018\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1019\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(MenuItem, {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1020\n    },\n    __self: this\n  }, \"Thirty\"))))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1025\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose6,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1026\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: handleClose6,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1029\n    },\n    __self: this\n  }, \"Ok\")))))))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\\nimport FilledInput from '@material-ui/core/FilledInput';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport Select from '@material-ui/core/Select';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  formControl: {\\n    margin: theme.spacing(1),\\n    minWidth: 120,\\n  },\\n  selectEmpty: {\\n    marginTop: theme.spacing(2),\\n  },\\n}));\\n\\nexport default function SimpleSelect() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    age: '',\\n    name: 'hai',\\n  });\\n\\n  const inputLabel = React.useRef(null);\\n  const [labelWidth, setLabelWidth] = React.useState(0);\\n  React.useEffect(() => {\\n    setLabelWidth(inputLabel.current.offsetWidth);\\n  }, []);\\n\\n  function handleChange(event) {\\n    setValues(oldValues => ({\\n      ...oldValues,\\n      [event.target.name]: event.target.value,\\n    }));\\n  }\\n\\n  return (\\n    <form className={classes.root} autoComplete=\\\"off\\\">\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"age-simple\\\">Age</InputLabel>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          inputProps={{\\n            name: 'age',\\n            id: 'age-simple',\\n          }}\\n        >\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"age-helper\\\">Age</InputLabel>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          input={<Input name=\\\"age\\\" id=\\\"age-helper\\\" />}\\n        >\\n          <MenuItem value=\\\"\\\">\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n        <FormHelperText>Some important helper text</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          displayEmpty\\n          name=\\\"age\\\"\\n          className={classes.selectEmpty}\\n        >\\n          <MenuItem value=\\\"\\\">\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n        <FormHelperText>Without label</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel shrink htmlFor=\\\"age-label-placeholder\\\">\\n          Age\\n        </InputLabel>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          input={<Input name=\\\"age\\\" id=\\\"age-label-placeholder\\\" />}\\n          displayEmpty\\n          name=\\\"age\\\"\\n          className={classes.selectEmpty}\\n        >\\n          <MenuItem value=\\\"\\\">\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n        <FormHelperText>Label + placeholder</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} disabled>\\n        <InputLabel htmlFor=\\\"name-disabled\\\">Name</InputLabel>\\n        <Select\\n          value={values.name}\\n          onChange={handleChange}\\n          input={<Input name=\\\"name\\\" id=\\\"name-disabled\\\" />}\\n        >\\n          <MenuItem value=\\\"\\\">\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value=\\\"hai\\\">Hai</MenuItem>\\n          <MenuItem value=\\\"olivier\\\">Olivier</MenuItem>\\n          <MenuItem value=\\\"kevin\\\">Kevin</MenuItem>\\n        </Select>\\n        <FormHelperText>Disabled</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} error>\\n        <InputLabel htmlFor=\\\"name-error\\\">Name</InputLabel>\\n        <Select\\n          value={values.name}\\n          onChange={handleChange}\\n          name=\\\"name\\\"\\n          renderValue={value => `\\u26A0\\uFE0F  - ${value}`}\\n          input={<Input id=\\\"name-error\\\" />}\\n        >\\n          <MenuItem value=\\\"\\\">\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value=\\\"hai\\\">Hai</MenuItem>\\n          <MenuItem value=\\\"olivier\\\">Olivier</MenuItem>\\n          <MenuItem value=\\\"kevin\\\">Kevin</MenuItem>\\n        </Select>\\n        <FormHelperText>Error</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"name-readonly\\\">Name</InputLabel>\\n        <Select\\n          value={values.name}\\n          onChange={handleChange}\\n          input={<Input name=\\\"name\\\" id=\\\"name-readonly\\\" readOnly />}\\n        >\\n          <MenuItem value=\\\"\\\">\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value=\\\"hai\\\">Hai</MenuItem>\\n          <MenuItem value=\\\"olivier\\\">Olivier</MenuItem>\\n          <MenuItem value=\\\"kevin\\\">Kevin</MenuItem>\\n        </Select>\\n        <FormHelperText>Read only</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"age-auto-width\\\">Age</InputLabel>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          input={<Input name=\\\"age\\\" id=\\\"age-auto-width\\\" />}\\n          autoWidth\\n        >\\n          <MenuItem value=\\\"\\\">\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n        <FormHelperText>Auto width</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          name=\\\"age\\\"\\n          displayEmpty\\n          className={classes.selectEmpty}\\n        >\\n          <MenuItem value=\\\"\\\" disabled>\\n            Placeholder\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n        <FormHelperText>Placeholder</FormHelperText>\\n      </FormControl>\\n      <FormControl required className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"age-required\\\">Age</InputLabel>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          name=\\\"age\\\"\\n          inputProps={{\\n            id: 'age-required',\\n          }}\\n          className={classes.selectEmpty}\\n        >\\n          <MenuItem value=\\\"\\\">\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n        <FormHelperText>Required</FormHelperText>\\n      </FormControl>\\n      <FormControl variant=\\\"outlined\\\" className={classes.formControl}>\\n        <InputLabel ref={inputLabel} htmlFor=\\\"outlined-age-simple\\\">\\n          Age\\n        </InputLabel>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          input={<OutlinedInput labelWidth={labelWidth} name=\\\"age\\\" id=\\\"outlined-age-simple\\\" />}\\n        >\\n          <MenuItem value=\\\"\\\">\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n      </FormControl>\\n      <FormControl variant=\\\"filled\\\" className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"filled-age-simple\\\">Age</InputLabel>\\n        <Select\\n          value={values.age}\\n          onChange={handleChange}\\n          input={<FilledInput name=\\\"age\\\" id=\\\"filled-age-simple\\\" />}\\n        >\\n          <MenuItem value=\\\"\\\">\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n      </FormControl>\\n    </form>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\\nimport FilledInput from '@material-ui/core/FilledInput';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport Select from '@material-ui/core/Select';\\nimport NativeSelect from '@material-ui/core/NativeSelect';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  formControl: {\\n    margin: theme.spacing(1),\\n    minWidth: 120,\\n  },\\n  selectEmpty: {\\n    marginTop: theme.spacing(2),\\n  },\\n}));\\n\\nexport default function NativeSelects() {\\n  const classes = useStyles();\\n  const [state, setState] = React.useState({\\n    age: '',\\n    name: 'hai',\\n  });\\n\\n  const inputLabel = React.useRef(null);\\n  const [labelWidth, setLabelWidth] = React.useState(0);\\n  React.useEffect(() => {\\n    setLabelWidth(inputLabel.current.offsetWidth);\\n  }, []);\\n\\n  const handleChange = name => event => {\\n    setState({\\n      ...state,\\n      [name]: event.target.value,\\n    });\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"age-native-simple\\\">Age</InputLabel>\\n        <Select\\n          native\\n          value={state.age}\\n          onChange={handleChange('age')}\\n          inputProps={{\\n            name: 'age',\\n            id: 'age-native-simple',\\n          }}\\n        >\\n          <option value=\\\"\\\" />\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </Select>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"age-native-helper\\\">Age</InputLabel>\\n        <NativeSelect\\n          value={state.age}\\n          onChange={handleChange('age')}\\n          input={<Input name=\\\"age\\\" id=\\\"age-native-helper\\\" />}\\n        >\\n          <option value=\\\"\\\" />\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </NativeSelect>\\n        <FormHelperText>Some important helper text</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <NativeSelect\\n          value={state.age}\\n          onChange={handleChange('age')}\\n          name=\\\"age\\\"\\n          className={classes.selectEmpty}\\n          inputProps={{ 'aria-label': 'age' }}\\n        >\\n          <option value=\\\"\\\">None</option>\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </NativeSelect>\\n        <FormHelperText>With visually hidden label</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel shrink htmlFor=\\\"age-native-label-placeholder\\\">\\n          Age\\n        </InputLabel>\\n        <NativeSelect\\n          value={state.age}\\n          onChange={handleChange('age')}\\n          input={<Input name=\\\"age\\\" id=\\\"age-native-label-placeholder\\\" />}\\n        >\\n          <option value=\\\"\\\">None</option>\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </NativeSelect>\\n        <FormHelperText>Label + placeholder</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} disabled>\\n        <InputLabel htmlFor=\\\"name-native-disabled\\\">Name</InputLabel>\\n        <NativeSelect\\n          value={state.name}\\n          onChange={handleChange('name')}\\n          input={<Input name=\\\"name\\\" id=\\\"name-native-disabled\\\" />}\\n        >\\n          <option value=\\\"\\\" />\\n          <optgroup label=\\\"Author\\\">\\n            <option value=\\\"hai\\\">Hai</option>\\n          </optgroup>\\n          <optgroup label=\\\"Contributors\\\">\\n            <option value=\\\"olivier\\\">Olivier</option>\\n            <option value=\\\"kevin\\\">Kevin</option>\\n          </optgroup>\\n        </NativeSelect>\\n        <FormHelperText>Disabled</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} error>\\n        <InputLabel htmlFor=\\\"name-native-error\\\">Name</InputLabel>\\n        <NativeSelect\\n          value={state.name}\\n          onChange={handleChange('name')}\\n          name=\\\"name\\\"\\n          input={<Input id=\\\"name-native-error\\\" />}\\n        >\\n          <option value=\\\"\\\" />\\n          <optgroup label=\\\"Author\\\">\\n            <option value=\\\"hai\\\">Hai</option>\\n          </optgroup>\\n          <optgroup label=\\\"Contributors\\\">\\n            <option value=\\\"olivier\\\">Olivier</option>\\n            <option value=\\\"kevin\\\">Kevin</option>\\n          </optgroup>\\n        </NativeSelect>\\n        <FormHelperText>Error</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"uncontrolled-native\\\">Name</InputLabel>\\n        <NativeSelect defaultValue={30} input={<Input name=\\\"name\\\" id=\\\"uncontrolled-native\\\" />}>\\n          <option value=\\\"\\\" />\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </NativeSelect>\\n        <FormHelperText>Uncontrolled</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <NativeSelect\\n          className={classes.selectEmpty}\\n          value={state.age}\\n          name=\\\"age\\\"\\n          onChange={handleChange('age')}\\n          inputProps={{ 'aria-label': 'age' }}\\n        >\\n          <option value=\\\"\\\" disabled>\\n            Placeholder\\n          </option>\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </NativeSelect>\\n        <FormHelperText>Placeholder</FormHelperText>\\n      </FormControl>\\n      <FormControl required className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"age-native-required\\\">Age</InputLabel>\\n        <Select\\n          native\\n          value={state.age}\\n          onChange={handleChange('age')}\\n          name=\\\"age\\\"\\n          inputProps={{\\n            id: 'age-native-required',\\n          }}\\n        >\\n          <option value=\\\"\\\" />\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </Select>\\n        <FormHelperText>Required</FormHelperText>\\n      </FormControl>\\n      <FormControl variant=\\\"outlined\\\" className={classes.formControl}>\\n        <InputLabel ref={inputLabel} htmlFor=\\\"outlined-age-native-simple\\\">\\n          Age\\n        </InputLabel>\\n        <Select\\n          native\\n          value={state.age}\\n          onChange={handleChange('age')}\\n          input={\\n            <OutlinedInput name=\\\"age\\\" labelWidth={labelWidth} id=\\\"outlined-age-native-simple\\\" />\\n          }\\n        >\\n          <option value=\\\"\\\" />\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </Select>\\n      </FormControl>\\n      <FormControl variant=\\\"filled\\\" className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"filled-age-native-simple\\\">Age</InputLabel>\\n        <Select\\n          native\\n          value={state.age}\\n          onChange={handleChange('age')}\\n          input={<FilledInput name=\\\"age\\\" id=\\\"filled-age-native-simple\\\" />}\\n        >\\n          <option value=\\\"\\\" />\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </Select>\\n      </FormControl>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode3 = \"\\nimport React from 'react';\\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport Select from '@material-ui/core/Select';\\nimport NativeSelect from '@material-ui/core/NativeSelect';\\nimport InputBase from '@material-ui/core/InputBase';\\n\\nconst BootstrapInput = withStyles(theme => ({\\n  root: {\\n    'label + &': {\\n      marginTop: theme.spacing(3),\\n    },\\n  },\\n  input: {\\n    borderRadius: 4,\\n    position: 'relative',\\n    backgroundColor: theme.palette.background.paper,\\n    border: '1px solid #ced4da',\\n    fontSize: 16,\\n    padding: '10px 26px 10px 12px',\\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\\n    // Use the system font instead of the default Roboto font.\\n    fontFamily: [\\n      '-apple-system',\\n      'BlinkMacSystemFont',\\n      '\\\"Segoe UI\\\"',\\n      'Roboto',\\n      '\\\"Helvetica Neue\\\"',\\n      'Arial',\\n      'sans-serif',\\n      '\\\"Apple Color Emoji\\\"',\\n      '\\\"Segoe UI Emoji\\\"',\\n      '\\\"Segoe UI Symbol\\\"',\\n    ].join(','),\\n    '&:focus': {\\n      borderRadius: 4,\\n      borderColor: '#80bdff',\\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\\n    },\\n  },\\n}))(InputBase);\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function CustomizedSelects() {\\n  const classes = useStyles();\\n  const [age, setAge] = React.useState('');\\n  const handleChange = event => {\\n    setAge(event.target.value);\\n  };\\n  return (\\n    <form className={classes.root} autoComplete=\\\"off\\\">\\n      <FormControl className={classes.margin}>\\n        <InputLabel htmlFor=\\\"age-customized-input\\\">Age</InputLabel>\\n        <BootstrapInput id=\\\"age-customized-input\\\" />\\n      </FormControl>\\n      <FormControl className={classes.margin}>\\n        <InputLabel htmlFor=\\\"age-customized-select\\\">Age</InputLabel>\\n        <Select\\n          value={age}\\n          onChange={handleChange}\\n          input={<BootstrapInput name=\\\"age\\\" id=\\\"age-customized-select\\\" />}\\n        >\\n          <MenuItem value=\\\"\\\">\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n      </FormControl>\\n      <FormControl className={classes.margin}>\\n        <InputLabel htmlFor=\\\"age-customized-native-simple\\\">Age</InputLabel>\\n        <NativeSelect\\n          value={age}\\n          onChange={handleChange}\\n          input={<BootstrapInput name=\\\"age\\\" id=\\\"age-customized-native-simple\\\" />}\\n        >\\n          <option value=\\\"\\\" />\\n          <option value={10}>Ten</option>\\n          <option value={20}>Twenty</option>\\n          <option value={30}>Thirty</option>\\n        </NativeSelect>\\n      </FormControl>\\n    </form>\\n  );\\n}\\n\";\nvar jsCode4 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport Select from '@material-ui/core/Select';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport Chip from '@material-ui/core/Chip';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  formControl: {\\n    margin: theme.spacing(1),\\n    minWidth: 120,\\n    maxWidth: 300,\\n  },\\n  chips: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  chip: {\\n    margin: 2,\\n  },\\n  noLabel: {\\n    marginTop: theme.spacing(3),\\n  },\\n}));\\n\\nconst ITEM_HEIGHT = 48;\\nconst ITEM_PADDING_TOP = 8;\\nconst MenuProps = {\\n  PaperProps: {\\n    style: {\\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\\n      width: 250,\\n    },\\n  },\\n};\\n\\nconst names = [\\n  'Oliver Hansen',\\n  'Van Henry',\\n  'April Tucker',\\n  'Ralph Hubbard',\\n  'Omar Alexander',\\n  'Carlos Abbott',\\n  'Miriam Wagner',\\n  'Bradley Wilkerson',\\n  'Virginia Andrews',\\n  'Kelly Snyder',\\n];\\n\\nfunction getStyles(name, personName, theme) {\\n  return {\\n    fontWeight:\\n      personName.indexOf(name) === -1\\n        ? theme.typography.fontWeightRegular\\n        : theme.typography.fontWeightMedium,\\n  };\\n}\\n\\nexport default function MultipleSelect() {\\n  const classes = useStyles();\\n  const theme = useTheme();\\n  const [personName, setPersonName] = React.useState([]);\\n\\n  function handleChange(event) {\\n    setPersonName(event.target.value);\\n  }\\n\\n  function handleChangeMultiple(event) {\\n    const { options } = event.target;\\n    const value = [];\\n    for (let i = 0, l = options.length; i < l; i += 1) {\\n      if (options[i].selected) {\\n        value.push(options[i].value);\\n      }\\n    }\\n    setPersonName(value);\\n  }\\n\\n  return (\\n    <div className={classes.root}>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"select-multiple\\\">Name</InputLabel>\\n        <Select\\n          multiple\\n          value={personName}\\n          onChange={handleChange}\\n          input={<Input id=\\\"select-multiple\\\" />}\\n          MenuProps={MenuProps}\\n        >\\n          {names.map(name => (\\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\\n              {name}\\n            </MenuItem>\\n          ))}\\n        </Select>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"select-multiple-checkbox\\\">Tag</InputLabel>\\n        <Select\\n          multiple\\n          value={personName}\\n          onChange={handleChange}\\n          input={<Input id=\\\"select-multiple-checkbox\\\" />}\\n          renderValue={selected => selected.join(', ')}\\n          MenuProps={MenuProps}\\n        >\\n          {names.map(name => (\\n            <MenuItem key={name} value={name}>\\n              <Checkbox checked={personName.indexOf(name) > -1} />\\n              <ListItemText primary={name} />\\n            </MenuItem>\\n          ))}\\n        </Select>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"select-multiple-chip\\\">Chip</InputLabel>\\n        <Select\\n          multiple\\n          value={personName}\\n          onChange={handleChange}\\n          input={<Input id=\\\"select-multiple-chip\\\" />}\\n          renderValue={selected => (\\n            <div className={classes.chips}>\\n              {selected.map(value => (\\n                <Chip key={value} label={value} className={classes.chip} />\\n              ))}\\n            </div>\\n          )}\\n          MenuProps={MenuProps}\\n        >\\n          {names.map(name => (\\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\\n              {name}\\n            </MenuItem>\\n          ))}\\n        </Select>\\n      </FormControl>\\n      <FormControl className={clsx(classes.formControl, classes.noLabel)}>\\n        <Select\\n          multiple\\n          displayEmpty\\n          value={personName}\\n          onChange={handleChange}\\n          input={<Input id=\\\"select-multiple-placeholder\\\" />}\\n          renderValue={selected => {\\n            if (selected.length === 0) {\\n              return <em>Placeholder</em>;\\n            }\\n\\n            return selected.join(', ');\\n          }}\\n          MenuProps={MenuProps}\\n        >\\n          <MenuItem disabled value=\\\"\\\">\\n            <em>Placeholder</em>\\n          </MenuItem>\\n          {names.map(name => (\\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\\n              {name}\\n            </MenuItem>\\n          ))}\\n        </Select>\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel shrink htmlFor=\\\"select-multiple-native\\\">\\n          Native\\n        </InputLabel>\\n        <Select\\n          multiple\\n          native\\n          value={personName}\\n          onChange={handleChangeMultiple}\\n          inputProps={{\\n            id: 'select-multiple-native',\\n          }}\\n        >\\n          {names.map(name => (\\n            <option key={name} value={name}>\\n              {name}\\n            </option>\\n          ))}\\n        </Select>\\n      </FormControl>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode5 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport Select from '@material-ui/core/Select';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles(theme => ({\\n  button: {\\n    display: 'block',\\n    marginTop: theme.spacing(2),\\n  },\\n  formControl: {\\n    margin: theme.spacing(1),\\n    minWidth: 120,\\n  },\\n}));\\n\\nexport default function ControlledOpenSelect() {\\n  const classes = useStyles();\\n  const [age, setAge] = React.useState('');\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleChange(event) {\\n    setAge(event.target.value);\\n  }\\n\\n  function handleClose() {\\n    setOpen(false);\\n  }\\n\\n  function handleOpen() {\\n    setOpen(true);\\n  }\\n\\n  return (\\n    <form autoComplete=\\\"off\\\">\\n      <Button className={classes.button} onClick={handleOpen}>\\n        Open the select\\n      </Button>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"demo-controlled-open-select\\\">Age</InputLabel>\\n        <Select\\n          open={open}\\n          onClose={handleClose}\\n          onOpen={handleOpen}\\n          value={age}\\n          onChange={handleChange}\\n          inputProps={{\\n            name: 'age',\\n            id: 'demo-controlled-open-select',\\n          }}\\n        >\\n          <MenuItem value=\\\"\\\">\\n            <em>None</em>\\n          </MenuItem>\\n          <MenuItem value={10}>Ten</MenuItem>\\n          <MenuItem value={20}>Twenty</MenuItem>\\n          <MenuItem value={30}>Thirty</MenuItem>\\n        </Select>\\n      </FormControl>\\n    </form>\\n  );\\n}\\n\";\nvar jsCode6 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport Input from '@material-ui/core/Input';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport Select from '@material-ui/core/Select';\\n\\nconst useStyles = makeStyles(theme => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  formControl: {\\n    margin: theme.spacing(1),\\n    minWidth: 120,\\n  },\\n}));\\n\\nexport default function DialogSelect() {\\n  const classes = useStyles();\\n  const [state, setState] = React.useState({\\n    open: false,\\n    age: '',\\n  });\\n\\n  const handleChange = name => event => {\\n    setState({ ...state, [name]: Number(event.target.value) });\\n  };\\n\\n  function handleClickOpen() {\\n    setState({ ...state, open: true });\\n  }\\n\\n  function handleClose() {\\n    setState({ ...state, open: false });\\n  }\\n\\n  return (\\n    <div>\\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\\n      <Dialog disableBackdropClick disableEscapeKeyDown open={state.open} onClose={handleClose}>\\n        <DialogTitle>Fill the form</DialogTitle>\\n        <DialogContent>\\n          <form className={classes.container}>\\n            <FormControl className={classes.formControl}>\\n              <InputLabel htmlFor=\\\"age-native-simple\\\">Age</InputLabel>\\n              <Select\\n                native\\n                value={state.age}\\n                onChange={handleChange('age')}\\n                input={<Input id=\\\"age-native-simple\\\" />}\\n              >\\n                <option value=\\\"\\\" />\\n                <option value={10}>Ten</option>\\n                <option value={20}>Twenty</option>\\n                <option value={30}>Thirty</option>\\n              </Select>\\n            </FormControl>\\n            <FormControl className={classes.formControl}>\\n              <InputLabel htmlFor=\\\"age-simple\\\">Age</InputLabel>\\n              <Select\\n                value={state.age}\\n                onChange={handleChange('age')}\\n                input={<Input id=\\\"age-simple\\\" />}\\n              >\\n                <MenuItem value=\\\"\\\">\\n                  <em>None</em>\\n                </MenuItem>\\n                <MenuItem value={10}>Ten</MenuItem>\\n                <MenuItem value={20}>Twenty</MenuItem>\\n                <MenuItem value={30}>Thirty</MenuItem>\\n              </Select>\\n            </FormControl>\\n          </form>\\n        </DialogContent>\\n        <DialogActions>\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\n            Cancel\\n          </Button>\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\n            Ok\\n          </Button>\\n        </DialogActions>\\n      </Dialog>\\n    </div>\\n  );\\n}\\n\";","map":{"version":3,"sources":["/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/src/app/pages/home/google-material/inputs/SelectsExamplesPage.js"],"names":["React","clsx","makeStyles","withStyles","useTheme","Input","OutlinedInput","FilledInput","InputLabel","MenuItem","FormHelperText","FormControl","Select","NativeSelect","InputBase","Checkbox","ListItemText","Chip","Button","Dialog","DialogActions","DialogContent","DialogTitle","Notice","CodeExample","useStyles","theme","root","display","flexWrap","formControl","margin","spacing","minWidth","selectEmpty","marginTop","BootstrapInput","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","useStyles3","useStyles4","maxWidth","chips","chip","noLabel","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","getStyles","name","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","useStyles5","button","useStyles6","container","SelectsExamplesPage","classes","useState","age","values","setValues","state","setState","inputLabel","useRef","labelWidth","setLabelWidth","useEffect","current","offsetWidth","handleChange","event","oldValues","target","value","handleChange2","classes3","setAge","handleChange3","classes4","setPersonName","handleChange4","handleChangeMultiple","options","i","l","length","selected","push","classes5","age2","setAge2","open","setOpen","handleChange5","handleClose","handleOpen","classes6","state6","setState6","handleChange6","Number","handleClickOpen6","handleClose6","jsCode1","id","jsCode2","jsCode3","jsCode4","map","jsCode5","jsCode6"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Input,\r\n  OutlinedInput,\r\n  FilledInput,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n  NativeSelect,\r\n  InputBase,\r\n  Checkbox,\r\n  ListItemText,\r\n  Chip,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@material-ui/core\";\r\nimport Notice from \"../../../../partials/content/Notice\";\r\nimport CodeExample from \"../../../../partials/content/CodeExample\";\r\n\r\n// Example 1\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\r\n    }\r\n  }\r\n}))(InputBase);\r\n\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  chip: {\r\n    margin: 2\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nconst names = [\r\n  \"Oliver Hansen\",\r\n  \"Van Henry\",\r\n  \"April Tucker\",\r\n  \"Ralph Hubbard\",\r\n  \"Omar Alexander\",\r\n  \"Carlos Abbott\",\r\n  \"Miriam Wagner\",\r\n  \"Bradley Wilkerson\",\r\n  \"Virginia Andrews\",\r\n  \"Kelly Snyder\"\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium\r\n  };\r\n}\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles(theme => ({\r\n  button: {\r\n    display: \"block\",\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  }\r\n}));\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  }\r\n}));\r\n\r\nexport default function SelectsExamplesPage() {\r\n  // Example 1\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    age: \"\",\r\n    name: \"hai\"\r\n  });\r\n\r\n  // Example 2\r\n  const [state, setState] = React.useState({\r\n    age: \"\",\r\n    name: \"hai\"\r\n  });\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    setValues(oldValues => ({\r\n      ...oldValues,\r\n      [event.target.name]: event.target.value\r\n    }));\r\n  }\r\n\r\n  const handleChange2 = name => event => {\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [age, setAge] = React.useState(\"\");\r\n  const handleChange3 = event => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  // Exmaple 4\r\n  const classes4 = useStyles4();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  function handleChange4(event) {\r\n    setPersonName(event.target.value);\r\n  }\r\n\r\n  function handleChangeMultiple(event) {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  }\r\n\r\n  // Example 5\r\n  const classes5 = useStyles();\r\n  const [age2, setAge2] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleChange5(event) {\r\n    setAge(event.target.value);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n  const [state6, setState6] = React.useState({\r\n    open: false,\r\n    age: \"\"\r\n  });\r\n\r\n  const handleChange6 = name => event => {\r\n    setState6({ ...state6, [name]: Number(event.target.value) });\r\n  };\r\n\r\n  function handleClickOpen6() {\r\n    setState6({ ...state6, open: true });\r\n  }\r\n\r\n  function handleClose6() {\r\n    setState6({ ...state6, open: false });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning kt-font-primary\">\r\n        <p>\r\n          Select components are used for collecting user provided information\r\n          from a list of options.\r\n        </p>\r\n        <p>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"kt-link\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/selects/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </p>\r\n      </Notice>\r\n\r\n      <CodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple Select\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            Menus are positioned over their emitting elements such that the\r\n            currently selected menu item appears on top of the emitting element.\r\n          </span>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n          <div className=\"kt-section__content\">\r\n            <form className={classes.root} autoComplete=\"off\">\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  inputProps={{\r\n                    name: \"age\",\r\n                    id: \"age-simple\"\r\n                  }}\r\n                >\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-helper\">Age</InputLabel>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  input={<Input name=\"age\" id=\"age-helper\" />}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Some important helper text</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  displayEmpty\r\n                  name=\"age\"\r\n                  className={classes.selectEmpty}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Without label</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel shrink htmlFor=\"age-label-placeholder\">\r\n                  Age\r\n                </InputLabel>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  input={<Input name=\"age\" id=\"age-label-placeholder\" />}\r\n                  displayEmpty\r\n                  name=\"age\"\r\n                  className={classes.selectEmpty}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Label + placeholder</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl} disabled>\r\n                <InputLabel htmlFor=\"name-disabled\">Name</InputLabel>\r\n                <Select\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  input={<Input name=\"name\" id=\"name-disabled\" />}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"hai\">Hai</MenuItem>\r\n                  <MenuItem value=\"olivier\">Olivier</MenuItem>\r\n                  <MenuItem value=\"kevin\">Kevin</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Disabled</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl} error>\r\n                <InputLabel htmlFor=\"name-error\">Name</InputLabel>\r\n                <Select\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  name=\"name\"\r\n                  renderValue={value => `! - ${value}`}\r\n                  input={<Input id=\"name-error\" />}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"hai\">Hai</MenuItem>\r\n                  <MenuItem value=\"olivier\">Olivier</MenuItem>\r\n                  <MenuItem value=\"kevin\">Kevin</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Error</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"name-readonly\">Name</InputLabel>\r\n                <Select\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  input={<Input name=\"name\" id=\"name-readonly\" readOnly />}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"hai\">Hai</MenuItem>\r\n                  <MenuItem value=\"olivier\">Olivier</MenuItem>\r\n                  <MenuItem value=\"kevin\">Kevin</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Read only</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-auto-width\">Age</InputLabel>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  input={<Input name=\"age\" id=\"age-auto-width\" />}\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Auto width</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  name=\"age\"\r\n                  displayEmpty\r\n                  className={classes.selectEmpty}\r\n                >\r\n                  <MenuItem value=\"\" disabled>\r\n                    Placeholder\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Placeholder</FormHelperText>\r\n              </FormControl>\r\n              <FormControl required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  name=\"age\"\r\n                  inputProps={{\r\n                    id: \"age-required\"\r\n                  }}\r\n                  className={classes.selectEmpty}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Required</FormHelperText>\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\r\n                  Age\r\n                </InputLabel>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={labelWidth}\r\n                      name=\"age\"\r\n                      id=\"outlined-age-simple\"\r\n                    />\r\n                  }\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel htmlFor=\"filled-age-simple\">Age</InputLabel>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  input={<FilledInput name=\"age\" id=\"filled-age-simple\" />}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n\r\n      <CodeExample jsCode={jsCode2} beforeCodeTitle=\"Native Select\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            As the user experience can be improved on mobile using the native\r\n            select of the platform, we allow such pattern.\r\n          </span>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n          <div className=\"kt-section__content\">\r\n            <div className={classes.root}>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\r\n                <Select\r\n                  native\r\n                  value={state.age}\r\n                  onChange={handleChange2(\"age\")}\r\n                  inputProps={{\r\n                    name: \"age\",\r\n                    id: \"age-native-simple\"\r\n                  }}\r\n                >\r\n                  <option value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-native-helper\">Age</InputLabel>\r\n                <NativeSelect\r\n                  value={state.age}\r\n                  onChange={handleChange2(\"age\")}\r\n                  input={<Input name=\"age\" id=\"age-native-helper\" />}\r\n                >\r\n                  <option value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <FormHelperText>Some important helper text</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <NativeSelect\r\n                  value={state.age}\r\n                  onChange={handleChange2(\"age\")}\r\n                  name=\"age\"\r\n                  className={classes.selectEmpty}\r\n                  inputProps={{ \"aria-label\": \"age\" }}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <FormHelperText>With visually hidden label</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n                  Age\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  value={state.age}\r\n                  onChange={handleChange2(\"age\")}\r\n                  input={<Input name=\"age\" id=\"age-native-label-placeholder\" />}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <FormHelperText>Label + placeholder</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl} disabled>\r\n                <InputLabel htmlFor=\"name-native-disabled\">Name</InputLabel>\r\n                <NativeSelect\r\n                  value={state.name}\r\n                  onChange={handleChange2(\"name\")}\r\n                  input={<Input name=\"name\" id=\"name-native-disabled\" />}\r\n                >\r\n                  <option value=\"\" />\r\n                  <optgroup label=\"Author\">\r\n                    <option value=\"hai\">Hai</option>\r\n                  </optgroup>\r\n                  <optgroup label=\"Contributors\">\r\n                    <option value=\"olivier\">Olivier</option>\r\n                    <option value=\"kevin\">Kevin</option>\r\n                  </optgroup>\r\n                </NativeSelect>\r\n                <FormHelperText>Disabled</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl} error>\r\n                <InputLabel htmlFor=\"name-native-error\">Name</InputLabel>\r\n                <NativeSelect\r\n                  value={state.name}\r\n                  onChange={handleChange2(\"name\")}\r\n                  name=\"name\"\r\n                  input={<Input id=\"name-native-error\" />}\r\n                >\r\n                  <option value=\"\" />\r\n                  <optgroup label=\"Author\">\r\n                    <option value=\"hai\">Hai</option>\r\n                  </optgroup>\r\n                  <optgroup label=\"Contributors\">\r\n                    <option value=\"olivier\">Olivier</option>\r\n                    <option value=\"kevin\">Kevin</option>\r\n                  </optgroup>\r\n                </NativeSelect>\r\n                <FormHelperText>Error</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"uncontrolled-native\">Name</InputLabel>\r\n                <NativeSelect\r\n                  defaultValue={30}\r\n                  input={<Input name=\"name\" id=\"uncontrolled-native\" />}\r\n                >\r\n                  <option value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <FormHelperText>Uncontrolled</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <NativeSelect\r\n                  className={classes.selectEmpty}\r\n                  value={state.age}\r\n                  name=\"age\"\r\n                  onChange={handleChange2(\"age\")}\r\n                  inputProps={{ \"aria-label\": \"age\" }}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Placeholder\r\n                  </option>\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <FormHelperText>Placeholder</FormHelperText>\r\n              </FormControl>\r\n              <FormControl required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-native-required\">Age</InputLabel>\r\n                <Select\r\n                  native\r\n                  value={state.age}\r\n                  onChange={handleChange2(\"age\")}\r\n                  name=\"age\"\r\n                  inputProps={{\r\n                    id: \"age-native-required\"\r\n                  }}\r\n                >\r\n                  <option value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </Select>\r\n                <FormHelperText>Required</FormHelperText>\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel\r\n                  ref={inputLabel}\r\n                  htmlFor=\"outlined-age-native-simple\"\r\n                >\r\n                  Age\r\n                </InputLabel>\r\n                <Select\r\n                  native\r\n                  value={state.age}\r\n                  onChange={handleChange2(\"age\")}\r\n                  input={\r\n                    <OutlinedInput\r\n                      name=\"age\"\r\n                      labelWidth={labelWidth}\r\n                      id=\"outlined-age-native-simple\"\r\n                    />\r\n                  }\r\n                >\r\n                  <option value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel htmlFor=\"filled-age-native-simple\">Age</InputLabel>\r\n                <Select\r\n                  native\r\n                  value={state.age}\r\n                  onChange={handleChange2(\"age\")}\r\n                  input={\r\n                    <FilledInput name=\"age\" id=\"filled-age-native-simple\" />\r\n                  }\r\n                >\r\n                  <option value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n\r\n      <CodeExample jsCode={jsCode3} beforeCodeTitle=\"Customized selects\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            The first step is to style the <code>InputBase</code> component.\r\n            Once it's styled, you can either use it directly as a text field or\r\n            provide it to the select <code>input</code> property to have a{\" \"}\r\n            <code>select</code> field.\r\n          </span>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n          <div className=\"kt-section__content\">\r\n            <form className={classes3.root} autoComplete=\"off\">\r\n              <div className=\"d-flex justify-content-center width-full\">\r\n                <div>\r\n                  <FormControl className={classes3.margin}>\r\n                    <InputLabel htmlFor=\"age-customized-input\">Age</InputLabel>\r\n                    <BootstrapInput id=\"age-customized-input\" />\r\n                  </FormControl>\r\n                  <FormControl className={classes3.margin}>\r\n                    <InputLabel htmlFor=\"age-customized-select\">Age</InputLabel>\r\n                    <Select\r\n                      value={age}\r\n                      onChange={handleChange3}\r\n                      input={\r\n                        <BootstrapInput\r\n                          name=\"age\"\r\n                          id=\"age-customized-select\"\r\n                          className=\"select_input-h\"\r\n                        />\r\n                      }\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl className={classes3.margin}>\r\n                    <InputLabel htmlFor=\"age-customized-native-simple\">\r\n                      Age\r\n                    </InputLabel>\r\n                    <NativeSelect\r\n                      value={age}\r\n                      onChange={handleChange3}\r\n                      input={\r\n                        <BootstrapInput\r\n                          name=\"age\"\r\n                          id=\"age-customized-native-simple\"\r\n                        />\r\n                      }\r\n                    >\r\n                      <option value=\"\" />\r\n                      <option value={10}>Ten</option>\r\n                      <option value={20}>Twenty</option>\r\n                      <option value={30}>Thirty</option>\r\n                    </NativeSelect>\r\n                  </FormControl>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n\r\n      <CodeExample jsCode={jsCode4} beforeCodeTitle=\"Multiple Select\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            The <code>Select</code> component can handle multiple selections.\r\n            It's enabled with the <code>multiple</code> property.\r\n          </span>\r\n          <p className=\"kt-section__sub\">\r\n            Like with the single selection, you can pull out the new value by\r\n            accessing <code>event.target.value</code> in the{\" \"}\r\n            <code>onChange</code> callback. It's always an array.\r\n          </p>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n          <div className=\"kt-section__content\">\r\n            <div className={classes4.root}>\r\n              <div className=\"d-flex justify-content-center width-full\">\r\n                <div>\r\n                  <FormControl className={classes4.formControl}>\r\n                    <InputLabel htmlFor=\"select-multiple\">Name</InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      value={personName}\r\n                      onChange={handleChange4}\r\n                      input={<Input id=\"select-multiple\" />}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {names.map(name => (\r\n                        <MenuItem\r\n                          key={name}\r\n                          value={name}\r\n                          style={getStyles(name, personName, theme)}\r\n                        >\r\n                          {name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl className={classes4.formControl}>\r\n                    <InputLabel htmlFor=\"select-multiple-checkbox\">\r\n                      Tag\r\n                    </InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      value={personName}\r\n                      onChange={handleChange4}\r\n                      input={<Input id=\"select-multiple-checkbox\" />}\r\n                      renderValue={selected => selected.join(\", \")}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {names.map(name => (\r\n                        <MenuItem key={name} value={name}>\r\n                          <Checkbox checked={personName.indexOf(name) > -1} />\r\n                          <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl className={classes4.formControl}>\r\n                    <InputLabel htmlFor=\"select-multiple-chip\">Chip</InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      value={personName}\r\n                      onChange={handleChange4}\r\n                      input={<Input id=\"select-multiple-chip\" />}\r\n                      renderValue={selected => (\r\n                        <div className={classes4.chips}>\r\n                          {selected.map(value => (\r\n                            <Chip\r\n                              key={value}\r\n                              label={value}\r\n                              className={classes4.chip}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {names.map(name => (\r\n                        <MenuItem\r\n                          key={name}\r\n                          value={name}\r\n                          style={getStyles(name, personName, theme)}\r\n                        >\r\n                          {name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl\r\n                    className={clsx(classes4.formControl, classes4.noLabel)}\r\n                  >\r\n                    <Select\r\n                      multiple\r\n                      displayEmpty\r\n                      value={personName}\r\n                      onChange={handleChange4}\r\n                      input={<Input id=\"select-multiple-placeholder\" />}\r\n                      renderValue={selected => {\r\n                        if (selected.length === 0) {\r\n                          return <em>Placeholder</em>;\r\n                        }\r\n\r\n                        return selected.join(\", \");\r\n                      }}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      <MenuItem disabled value=\"\">\r\n                        <em>Placeholder</em>\r\n                      </MenuItem>\r\n                      {names.map(name => (\r\n                        <MenuItem\r\n                          key={name}\r\n                          value={name}\r\n                          style={getStyles(name, personName, theme)}\r\n                        >\r\n                          {name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl className={classes4.formControl}>\r\n                    <InputLabel shrink htmlFor=\"select-multiple-native\">\r\n                      Native\r\n                    </InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      native\r\n                      value={personName}\r\n                      onChange={handleChangeMultiple}\r\n                      inputProps={{\r\n                        id: \"select-multiple-native\"\r\n                      }}\r\n                    >\r\n                      {names.map(name => (\r\n                        <option key={name} value={name}>\r\n                          {name}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <CodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Controlled Open Select\"\r\n          >\r\n            <div className=\"kt-section\">\r\n              <div className=\"kt-section__content\">\r\n                <form autoComplete=\"off\">\r\n                  <Button className={classes5.button} onClick={handleOpen}>\r\n                    Open the select\r\n                  </Button>\r\n                  <div className=\"d-flex justify-content-center width-full\">\r\n                    <div>\r\n                      <FormControl className={classes5.formControl}>\r\n                        <InputLabel htmlFor=\"demo-controlled-open-select\">\r\n                          Age\r\n                        </InputLabel>\r\n                        <Select\r\n                          open={open}\r\n                          onClose={handleClose}\r\n                          onOpen={handleOpen}\r\n                          value={age}\r\n                          onChange={handleChange5}\r\n                          inputProps={{\r\n                            name: \"age\",\r\n                            id: \"demo-controlled-open-select\"\r\n                          }}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          <MenuItem value={10}>Ten</MenuItem>\r\n                          <MenuItem value={20}>Twenty</MenuItem>\r\n                          <MenuItem value={30}>Thirty</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </CodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <CodeExample jsCode={jsCode6} beforeCodeTitle=\"With a Dialog\">\r\n            <div className=\"kt-section\">\r\n              <span className=\"kt-section__sub\">\r\n                While it's discouraged by the Material Design specification, you\r\n                can use a select inside a dialog.\r\n              </span>\r\n              <div className=\"kt-separator kt-separator--dashed\"></div>\r\n              <div className=\"kt-section__content\">\r\n                <div className=\"d-flex justify-content-center width-full\">\r\n                  <div>\r\n                    <Button onClick={handleClickOpen6}>\r\n                      Open select dialog\r\n                    </Button>\r\n                    <Dialog\r\n                      disableBackdropClick\r\n                      disableEscapeKeyDown\r\n                      open={state6.open}\r\n                      onClose={handleClose6}\r\n                    >\r\n                      <DialogTitle>Fill the form</DialogTitle>\r\n                      <DialogContent>\r\n                        <form className={classes6.container}>\r\n                          <FormControl className={classes6.formControl}>\r\n                            <InputLabel htmlFor=\"age-native-simple\">\r\n                              Age\r\n                            </InputLabel>\r\n                            <Select\r\n                              native\r\n                              value={state6.age}\r\n                              onChange={handleChange6(\"age\")}\r\n                              input={<Input id=\"age-native-simple\" />}\r\n                            >\r\n                              <option value=\"\" />\r\n                              <option value={10}>Ten</option>\r\n                              <option value={20}>Twenty</option>\r\n                              <option value={30}>Thirty</option>\r\n                            </Select>\r\n                          </FormControl>\r\n                          <FormControl className={classes6.formControl}>\r\n                            <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\r\n                            <Select\r\n                              value={state6.age}\r\n                              onChange={handleChange6(\"age\")}\r\n                              input={<Input id=\"age-simple\" />}\r\n                            >\r\n                              <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                              </MenuItem>\r\n                              <MenuItem value={10}>Ten</MenuItem>\r\n                              <MenuItem value={20}>Twenty</MenuItem>\r\n                              <MenuItem value={30}>Thirty</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </form>\r\n                      </DialogContent>\r\n                      <DialogActions>\r\n                        <Button onClick={handleClose6} color=\"primary\">\r\n                          Cancel\r\n                        </Button>\r\n                        <Button onClick={handleClose6} color=\"primary\">\r\n                          Ok\r\n                        </Button>\r\n                      </DialogActions>\r\n                    </Dialog>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelect() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    age: '',\r\n    name: 'hai',\r\n  });\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    setValues(oldValues => ({\r\n      ...oldValues,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <form className={classes.root} autoComplete=\"off\">\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-simple',\r\n          }}\r\n        >\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-helper\">Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          input={<Input name=\"age\" id=\"age-helper\" />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          name=\"age\"\r\n          className={classes.selectEmpty}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Without label</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor=\"age-label-placeholder\">\r\n          Age\r\n        </InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          input={<Input name=\"age\" id=\"age-label-placeholder\" />}\r\n          displayEmpty\r\n          name=\"age\"\r\n          className={classes.selectEmpty}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Label + placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled>\r\n        <InputLabel htmlFor=\"name-disabled\">Name</InputLabel>\r\n        <Select\r\n          value={values.name}\r\n          onChange={handleChange}\r\n          input={<Input name=\"name\" id=\"name-disabled\" />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value=\"hai\">Hai</MenuItem>\r\n          <MenuItem value=\"olivier\">Olivier</MenuItem>\r\n          <MenuItem value=\"kevin\">Kevin</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} error>\r\n        <InputLabel htmlFor=\"name-error\">Name</InputLabel>\r\n        <Select\r\n          value={values.name}\r\n          onChange={handleChange}\r\n          name=\"name\"\r\n          renderValue={value => \\`⚠️  - \\${value}\\`}\r\n          input={<Input id=\"name-error\" />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value=\"hai\">Hai</MenuItem>\r\n          <MenuItem value=\"olivier\">Olivier</MenuItem>\r\n          <MenuItem value=\"kevin\">Kevin</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"name-readonly\">Name</InputLabel>\r\n        <Select\r\n          value={values.name}\r\n          onChange={handleChange}\r\n          input={<Input name=\"name\" id=\"name-readonly\" readOnly />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value=\"hai\">Hai</MenuItem>\r\n          <MenuItem value=\"olivier\">Olivier</MenuItem>\r\n          <MenuItem value=\"kevin\">Kevin</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Read only</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-auto-width\">Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          input={<Input name=\"age\" id=\"age-auto-width\" />}\r\n          autoWidth\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Auto width</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          name=\"age\"\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n        >\r\n          <MenuItem value=\"\" disabled>\r\n            Placeholder\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl required className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          name=\"age\"\r\n          inputProps={{\r\n            id: 'age-required',\r\n          }}\r\n          className={classes.selectEmpty}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Required</FormHelperText>\r\n      </FormControl>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\r\n          Age\r\n        </InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput labelWidth={labelWidth} name=\"age\" id=\"outlined-age-simple\" />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel htmlFor=\"filled-age-simple\">Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          input={<FilledInput name=\"age\" id=\"filled-age-simple\" />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function NativeSelects() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    age: '',\r\n    name: 'hai',\r\n  });\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleChange = name => event => {\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-native-simple',\r\n          }}\r\n        >\r\n          <option value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-native-helper\">Age</InputLabel>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          input={<Input name=\"age\" id=\"age-native-helper\" />}\r\n        >\r\n          <option value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          name=\"age\"\r\n          className={classes.selectEmpty}\r\n          inputProps={{ 'aria-label': 'age' }}\r\n        >\r\n          <option value=\"\">None</option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>With visually hidden label</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n          Age\r\n        </InputLabel>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          input={<Input name=\"age\" id=\"age-native-label-placeholder\" />}\r\n        >\r\n          <option value=\"\">None</option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Label + placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled>\r\n        <InputLabel htmlFor=\"name-native-disabled\">Name</InputLabel>\r\n        <NativeSelect\r\n          value={state.name}\r\n          onChange={handleChange('name')}\r\n          input={<Input name=\"name\" id=\"name-native-disabled\" />}\r\n        >\r\n          <option value=\"\" />\r\n          <optgroup label=\"Author\">\r\n            <option value=\"hai\">Hai</option>\r\n          </optgroup>\r\n          <optgroup label=\"Contributors\">\r\n            <option value=\"olivier\">Olivier</option>\r\n            <option value=\"kevin\">Kevin</option>\r\n          </optgroup>\r\n        </NativeSelect>\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} error>\r\n        <InputLabel htmlFor=\"name-native-error\">Name</InputLabel>\r\n        <NativeSelect\r\n          value={state.name}\r\n          onChange={handleChange('name')}\r\n          name=\"name\"\r\n          input={<Input id=\"name-native-error\" />}\r\n        >\r\n          <option value=\"\" />\r\n          <optgroup label=\"Author\">\r\n            <option value=\"hai\">Hai</option>\r\n          </optgroup>\r\n          <optgroup label=\"Contributors\">\r\n            <option value=\"olivier\">Olivier</option>\r\n            <option value=\"kevin\">Kevin</option>\r\n          </optgroup>\r\n        </NativeSelect>\r\n        <FormHelperText>Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"uncontrolled-native\">Name</InputLabel>\r\n        <NativeSelect defaultValue={30} input={<Input name=\"name\" id=\"uncontrolled-native\" />}>\r\n          <option value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Uncontrolled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <NativeSelect\r\n          className={classes.selectEmpty}\r\n          value={state.age}\r\n          name=\"age\"\r\n          onChange={handleChange('age')}\r\n          inputProps={{ 'aria-label': 'age' }}\r\n        >\r\n          <option value=\"\" disabled>\r\n            Placeholder\r\n          </option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl required className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-native-required\">Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          name=\"age\"\r\n          inputProps={{\r\n            id: 'age-native-required',\r\n          }}\r\n        >\r\n          <option value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n        <FormHelperText>Required</FormHelperText>\r\n      </FormControl>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel ref={inputLabel} htmlFor=\"outlined-age-native-simple\">\r\n          Age\r\n        </InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          input={\r\n            <OutlinedInput name=\"age\" labelWidth={labelWidth} id=\"outlined-age-native-simple\" />\r\n          }\r\n        >\r\n          <option value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel htmlFor=\"filled-age-native-simple\">Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          input={<FilledInput name=\"age\" id=\"filled-age-native-simple\" />}\r\n        >\r\n          <option value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSelects() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  const handleChange = event => {\r\n    setAge(event.target.value);\r\n  };\r\n  return (\r\n    <form className={classes.root} autoComplete=\"off\">\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"age-customized-input\">Age</InputLabel>\r\n        <BootstrapInput id=\"age-customized-input\" />\r\n      </FormControl>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"age-customized-select\">Age</InputLabel>\r\n        <Select\r\n          value={age}\r\n          onChange={handleChange}\r\n          input={<BootstrapInput name=\"age\" id=\"age-customized-select\" />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"age-customized-native-simple\">Age</InputLabel>\r\n        <NativeSelect\r\n          value={age}\r\n          onChange={handleChange}\r\n          input={<BootstrapInput name=\"age\" id=\"age-customized-native-simple\" />}\r\n        >\r\n          <option value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  function handleChange(event) {\r\n    setPersonName(event.target.value);\r\n  }\r\n\r\n  function handleChangeMultiple(event) {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"select-multiple\">Name</InputLabel>\r\n        <Select\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple\" />}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"select-multiple-checkbox\">Tag</InputLabel>\r\n        <Select\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-checkbox\" />}\r\n          renderValue={selected => selected.join(', ')}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name}>\r\n              <Checkbox checked={personName.indexOf(name) > -1} />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"select-multiple-chip\">Chip</InputLabel>\r\n        <Select\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={selected => (\r\n            <div className={classes.chips}>\r\n              {selected.map(value => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={clsx(classes.formControl, classes.noLabel)}>\r\n        <Select\r\n          multiple\r\n          displayEmpty\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-placeholder\" />}\r\n          renderValue={selected => {\r\n            if (selected.length === 0) {\r\n              return <em>Placeholder</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>Placeholder</em>\r\n          </MenuItem>\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor=\"select-multiple-native\">\r\n          Native\r\n        </InputLabel>\r\n        <Select\r\n          multiple\r\n          native\r\n          value={personName}\r\n          onChange={handleChangeMultiple}\r\n          inputProps={{\r\n            id: 'select-multiple-native',\r\n          }}\r\n        >\r\n          {names.map(name => (\r\n            <option key={name} value={name}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function ControlledOpenSelect() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleChange(event) {\r\n    setAge(event.target.value);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <form autoComplete=\"off\">\r\n      <Button className={classes.button} onClick={handleOpen}>\r\n        Open the select\r\n      </Button>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"demo-controlled-open-select\">Age</InputLabel>\r\n        <Select\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'demo-controlled-open-select',\r\n          }}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function DialogSelect() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    age: '',\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: Number(event.target.value) });\r\n  };\r\n\r\n  function handleClickOpen() {\r\n    setState({ ...state, open: true });\r\n  }\r\n\r\n  function handleClose() {\r\n    setState({ ...state, open: false });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\r\n      <Dialog disableBackdropClick disableEscapeKeyDown open={state.open} onClose={handleClose}>\r\n        <DialogTitle>Fill the form</DialogTitle>\r\n        <DialogContent>\r\n          <form className={classes.container}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange('age')}\r\n                input={<Input id=\"age-native-simple\" />}\r\n              >\r\n                <option value=\"\" />\r\n                <option value={10}>Ten</option>\r\n                <option value={20}>Twenty</option>\r\n                <option value={30}>Thirty</option>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\r\n              <Select\r\n                value={state.age}\r\n                onChange={handleChange('age')}\r\n                input={<Input id=\"age-simple\" />}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value={10}>Ten</MenuItem>\r\n                <MenuItem value={20}>Twenty</MenuItem>\r\n                <MenuItem value={30}>Thirty</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}