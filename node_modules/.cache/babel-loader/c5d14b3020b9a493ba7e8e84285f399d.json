{"ast":null,"code":"import _classCallCheck from \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/src/app/pages/home/react-bootstrap/ToastsExamplesPage.js\";\nimport React from \"react\";\nimport Notice from \"../../../partials/content/Notice\";\nimport CodeExample from \"../../../partials/content/CodeExample\";\nimport { Button, Toast, Col, Row } from \"react-bootstrap\";\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props));\n    _this.state = {\n      showA: true,\n      showB: true\n    };\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          showA = _this$state.showA,\n          showB = _this$state.showB;\n\n      var toggleShowA = function toggleShowA() {\n        return _this2.setState({\n          showA: !showA\n        });\n      };\n\n      var toggleShowB = function toggleShowB() {\n        return _this2.setState({\n          showB: !showB\n        });\n      };\n\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Toast, {\n        show: showA,\n        onClose: toggleShowA,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Toast.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Bootstrap\"), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"11 mins ago\")), React.createElement(Toast.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Woohoo, you're reading this text in a Toast!\"))), React.createElement(Col, {\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: toggleShowA,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Toggle Toast \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"with\"), \" Animation\")), React.createElement(Col, {\n        xs: 6,\n        className: \"my-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Toast, {\n        onClose: toggleShowB,\n        show: showB,\n        animation: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Toast.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Bootstrap\"), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"11 mins ago\")), React.createElement(Toast.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Woohoo, you're reading this text in a Toast!\"))), React.createElement(Col, {\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: toggleShowB,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Toggle Toast \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"without\"), \" Animation\")));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nvar Example1 =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Example1, _React$Component2);\n\n  function Example1(props) {\n    var _this3;\n\n    _classCallCheck(this, Example1);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Example1).call(this, props));\n    _this3.state = {\n      show: false\n    };\n    return _this3;\n  }\n\n  _createClass(Example1, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var show = this.state.show;\n\n      var handleShow = function handleShow() {\n        return _this4.setState({\n          show: true\n        });\n      };\n\n      var handleClose = function handleClose() {\n        return _this4.setState({\n          show: false\n        });\n      };\n\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Toast, {\n        onClose: handleClose,\n        show: show,\n        delay: 3000,\n        autohide: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Toast.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Bootstrap\"), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"11 mins ago\")), React.createElement(Toast.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Woohoo, you're reading this text in a Toast!\"))), React.createElement(Col, {\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: handleShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Show Toast\")));\n    }\n  }]);\n\n  return Example1;\n}(React.Component);\n\nvar ToastsExamplesPage =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(ToastsExamplesPage, _React$Component3);\n\n  function ToastsExamplesPage() {\n    _classCallCheck(this, ToastsExamplesPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ToastsExamplesPage).apply(this, arguments));\n  }\n\n  _createClass(ToastsExamplesPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Notice, {\n        icon: \"flaticon-warning kt-font-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Push notifications to your visitors with a toast, a lightweight and easily customizable alert message.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"For more info please check the components's official\", \" \", React.createElement(\"a\", {\n        target: \"_blank\",\n        className: \"kt-link\",\n        rel: \"noopener noreferrer\",\n        href: \"https://react-bootstrap.github.io/components/toasts/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"demos & documentation\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode1,\n        beforeCodeTitle: \"Basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"To encourage extensible and predictable toasts, we recommend a header and body. Toast headers use display: flex, allowing easy alignment of content thanks to our margin and flexbox utilities.\"), React.createElement(\"p\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Toasts are as flexible as you need and have very little required markup. At a minimum, we require a single element to contain your \\u201Ctoasted\\u201D content and strongly encourage a dismiss button.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(Toast, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Toast.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Bootstrap\"), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"11 mins ago\")), React.createElement(Toast.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Hello, world! This is a toast message.\"))))), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode2,\n        beforeCodeTitle: \"Dismissible\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(Example, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode3,\n        beforeCodeTitle: \"Stacking\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"When you have multiple toasts, we default to vertically stacking them in a readable manner.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(React.Fragment, null, React.createElement(Toast, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Toast.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Bootstrap\"), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"just now\")), React.createElement(Toast.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"See? Just like this.\")), React.createElement(Toast, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Toast.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Bootstrap\"), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"2 seconds ago\")), React.createElement(Toast.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Heads up, toasts will stack automatically\")))))), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode4,\n        beforeCodeTitle: \"Placement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Place toasts with custom CSS as you need them. The top right is often used for notifications, as is the top middle.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        \"aria-live\": \"polite\",\n        \"aria-atomic\": \"true\",\n        style: {\n          position: \"relative\",\n          minHeight: \"200px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: 0,\n          right: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Toast, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Toast.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Bootstrap\"), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"just now\")), React.createElement(Toast.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"See? Just like this.\")), React.createElement(Toast, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Toast.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Bootstrap\"), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"2 seconds ago\")), React.createElement(Toast.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Heads up, toasts will stack automatically\")))))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(CodeExample, {\n        jsCode: jsCode5,\n        beforeCodeTitle: \"Autohide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"kt-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"kt-section__sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"A Toast can also automatically hide after X milliseconds. For that, use the \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"autohide\"), \" prop in combination with\", \" \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"delay\"), \" the prop to sepecify the delay. But be aware, that it will only trigger the \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"onClose\"), \" \", \"function, you have to set manually the show property.\"), React.createElement(\"div\", {\n        className: \"kt-separator kt-separator--dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(Example1, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return ToastsExamplesPage;\n}(React.Component);\n\nexport { ToastsExamplesPage as default };\nvar jsCode1 = \"\\n<Toast>\\n  <Toast.Header>\\n    <img src=\\\"holder.js/20x20?text=%20\\\" className=\\\"rounded mr-2\\\" alt=\\\"\\\" />\\n    <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n    <small>11 mins ago</small>\\n  </Toast.Header>\\n  <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\\n</Toast>\\n\";\nvar jsCode2 = \"\\nclass Example extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      showA: true,\\n      showB: true,\\n    };\\n  }\\n\\n  render() {\\n    const { showA, showB } = this.state;\\n    const toggleShowA = () => this.setState({ showA: !showA });\\n    const toggleShowB = () => this.setState({ showB: !showB });\\n    return (\\n      <Row>\\n        <Col xs={6}>\\n          <Toast show={showA} onClose={toggleShowA}>\\n            <Toast.Header>\\n              <img\\n                src=\\\"holder.js/20x20?text=%20\\\"\\n                className=\\\"rounded mr-2\\\"\\n                alt=\\\"\\\"\\n              />\\n              <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n              <small>11 mins ago</small>\\n            </Toast.Header>\\n            <Toast.Body>\\n              Woohoo, you're reading this text in a Toast!\\n            </Toast.Body>\\n          </Toast>\\n        </Col>\\n        <Col xs={6}>\\n          <Button onClick={toggleShowA}>\\n            Toggle Toast <strong>with</strong> Animation\\n          </Button>\\n        </Col>\\n        <Col xs={6} className=\\\"my-1\\\">\\n          <Toast onClose={toggleShowB} show={showB} animation={false}>\\n            <Toast.Header>\\n              <img\\n                src=\\\"holder.js/20x20?text=%20\\\"\\n                className=\\\"rounded mr-2\\\"\\n                alt=\\\"\\\"\\n              />\\n              <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n              <small>11 mins ago</small>\\n            </Toast.Header>\\n            <Toast.Body>\\n              Woohoo, you're reading this text in a Toast!\\n            </Toast.Body>\\n          </Toast>\\n        </Col>\\n        <Col xs={6}>\\n          <Button onClick={toggleShowB}>\\n            Toggle Toast <strong>without</strong> Animation\\n          </Button>\\n        </Col>\\n      </Row>\\n    );\\n  }\\n}\\n\\nrender(<Example />);\\n\";\nvar jsCode3 = \"\\n<>\\n  <Toast>\\n    <Toast.Header>\\n      <img src=\\\"holder.js/20x20?text=%20\\\" className=\\\"rounded mr-2\\\" alt=\\\"\\\" />\\n      <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n      <small>just now</small>\\n    </Toast.Header>\\n    <Toast.Body>See? Just like this.</Toast.Body>\\n  </Toast>\\n  <Toast>\\n    <Toast.Header>\\n      <img src=\\\"holder.js/20x20?text=%20\\\" className=\\\"rounded mr-2\\\" alt=\\\"\\\" />\\n      <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n      <small>2 seconds ago</small>\\n    </Toast.Header>\\n    <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\\n  </Toast>\\n</>\\n\";\nvar jsCode4 = \"\\n<div\\n  aria-live=\\\"polite\\\"\\n  aria-atomic=\\\"true\\\"\\n  style={{\\n    position: 'relative',\\n    minHeight: '200px',\\n  }}\\n>\\n  <div\\n    style={{\\n      position: 'absolute',\\n      top: 0,\\n      right: 0,\\n    }}\\n  >\\n    <Toast>\\n      <Toast.Header>\\n        <img src=\\\"holder.js/20x20?text=%20\\\" className=\\\"rounded mr-2\\\" alt=\\\"\\\" />\\n        <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n        <small>just now</small>\\n      </Toast.Header>\\n      <Toast.Body>See? Just like this.</Toast.Body>\\n    </Toast>\\n    <Toast>\\n      <Toast.Header>\\n        <img src=\\\"holder.js/20x20?text=%20\\\" className=\\\"rounded mr-2\\\" alt=\\\"\\\" />\\n        <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n        <small>2 seconds ago</small>\\n      </Toast.Header>\\n      <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\\n    </Toast>\\n  </div>\\n</div>\\n\";\nvar jsCode5 = \"\\nclass Example extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      show: false,\\n    };\\n  }\\n\\n  render() {\\n    const { show } = this.state;\\n    const handleShow = () => this.setState({ show: true });\\n    const handleClose = () => this.setState({ show: false });\\n    return (\\n      <Row>\\n        <Col xs={6}>\\n          <Toast onClose={handleClose} show={show} delay={3000} autohide>\\n            <Toast.Header>\\n              <img\\n                src=\\\"holder.js/20x20?text=%20\\\"\\n                className=\\\"rounded mr-2\\\"\\n                alt=\\\"\\\"\\n              />\\n              <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n              <small>11 mins ago</small>\\n            </Toast.Header>\\n            <Toast.Body>\\n              Woohoo, you're reading this text in a Toast!\\n            </Toast.Body>\\n          </Toast>\\n        </Col>\\n        <Col xs={6}>\\n          <Button onClick={handleShow}>Show Toast</Button>\\n        </Col>\\n      </Row>\\n    );\\n  }\\n}\\n\\nrender(<Example />);\\n\";","map":{"version":3,"sources":["/Users/chosun/Project/metronic_v6.1.6/theme/react/demo1/src/app/pages/home/react-bootstrap/ToastsExamplesPage.js"],"names":["React","Notice","CodeExample","Button","Toast","Col","Row","Example","props","state","showA","showB","toggleShowA","setState","toggleShowB","Component","Example1","show","handleShow","handleClose","ToastsExamplesPage","jsCode1","jsCode2","jsCode3","jsCode4","position","minHeight","top","right","jsCode5"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Notice from \"../../../partials/content/Notice\";\r\nimport CodeExample from \"../../../partials/content/CodeExample\";\r\nimport { Button, Toast, Col, Row } from \"react-bootstrap\";\r\n\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showA: true,\r\n      showB: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { showA, showB } = this.state;\r\n    const toggleShowA = () => this.setState({ showA: !showA });\r\n    const toggleShowB = () => this.setState({ showB: !showB });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast show={showA} onClose={toggleShowA}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowA}>\r\n            Toggle Toast <strong>with</strong> Animation\r\n          </Button>\r\n        </Col>\r\n        <Col xs={6} className=\"my-1\">\r\n          <Toast onClose={toggleShowB} show={showB} animation={false}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowB}>\r\n            Toggle Toast <strong>without</strong> Animation\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nclass Example1 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.state;\r\n    const handleShow = () => this.setState({ show: true });\r\n    const handleClose = () => this.setState({ show: false });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast onClose={handleClose} show={show} delay={3000} autohide>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={handleShow}>Show Toast</Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class ToastsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning kt-font-primary\">\r\n          <p>\r\n            Push notifications to your visitors with a toast, a lightweight and\r\n            easily customizable alert message.\r\n          </p>\r\n          <p>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"kt-link\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/toasts/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </p>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  To encourage extensible and predictable toasts, we recommend a\r\n                  header and body. Toast headers use display: flex, allowing\r\n                  easy alignment of content thanks to our margin and flexbox\r\n                  utilities.\r\n                </span>\r\n                <p className=\"kt-section__sub\">\r\n                  Toasts are as flexible as you need and have very little\r\n                  required markup. At a minimum, we require a single element to\r\n                  contain your “toasted” content and strongly encourage a\r\n                  dismiss button.\r\n                </p>\r\n                <div className=\"kt-separator kt-separator--dashed\"></div>\r\n                <Toast>\r\n                  <Toast.Header>\r\n                    <img\r\n                      src=\"holder.js/20x20?text=%20\"\r\n                      className=\"rounded mr-2\"\r\n                      alt=\"\"\r\n                    />\r\n                    <strong className=\"mr-auto\">Bootstrap</strong>\r\n                    <small>11 mins ago</small>\r\n                  </Toast.Header>\r\n                  <Toast.Body>\r\n                    Hello, world! This is a toast message.\r\n                  </Toast.Body>\r\n                </Toast>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode2} beforeCodeTitle=\"Dismissible\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\"></span>\r\n                <Example />\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode3} beforeCodeTitle=\"Stacking\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  When you have multiple toasts, we default to vertically\r\n                  stacking them in a readable manner.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\"></div>\r\n                <>\r\n                  <Toast>\r\n                    <Toast.Header>\r\n                      <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                      />\r\n                      <strong className=\"mr-auto\">Bootstrap</strong>\r\n                      <small>just now</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>See? Just like this.</Toast.Body>\r\n                  </Toast>\r\n                  <Toast>\r\n                    <Toast.Header>\r\n                      <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                      />\r\n                      <strong className=\"mr-auto\">Bootstrap</strong>\r\n                      <small>2 seconds ago</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>\r\n                      Heads up, toasts will stack automatically\r\n                    </Toast.Body>\r\n                  </Toast>\r\n                </>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode4} beforeCodeTitle=\"Placement\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  Place toasts with custom CSS as you need them. The top right\r\n                  is often used for notifications, as is the top middle.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\"></div>\r\n                <div\r\n                  aria-live=\"polite\"\r\n                  aria-atomic=\"true\"\r\n                  style={{\r\n                    position: \"relative\",\r\n                    minHeight: \"200px\"\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      right: 0\r\n                    }}\r\n                  >\r\n                    <Toast>\r\n                      <Toast.Header>\r\n                        <img\r\n                          src=\"holder.js/20x20?text=%20\"\r\n                          className=\"rounded mr-2\"\r\n                          alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">Bootstrap</strong>\r\n                        <small>just now</small>\r\n                      </Toast.Header>\r\n                      <Toast.Body>See? Just like this.</Toast.Body>\r\n                    </Toast>\r\n                    <Toast>\r\n                      <Toast.Header>\r\n                        <img\r\n                          src=\"holder.js/20x20?text=%20\"\r\n                          className=\"rounded mr-2\"\r\n                          alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">Bootstrap</strong>\r\n                        <small>2 seconds ago</small>\r\n                      </Toast.Header>\r\n                      <Toast.Body>\r\n                        Heads up, toasts will stack automatically\r\n                      </Toast.Body>\r\n                    </Toast>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <CodeExample jsCode={jsCode5} beforeCodeTitle=\"Autohide\">\r\n              <div className=\"kt-section\">\r\n                <span className=\"kt-section__sub\">\r\n                  A Toast can also automatically hide after X milliseconds. For\r\n                  that, use the <code>autohide</code> prop in combination with{\" \"}\r\n                  <code>delay</code> the prop to sepecify the delay. But be\r\n                  aware, that it will only trigger the <code>onClose</code>{\" \"}\r\n                  function, you have to set manually the show property.\r\n                </span>\r\n                <div className=\"kt-separator kt-separator--dashed\"></div>\r\n                <Example1 />\r\n              </div>\r\n            </CodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Toast>\r\n  <Toast.Header>\r\n    <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n    <strong className=\"mr-auto\">Bootstrap</strong>\r\n    <small>11 mins ago</small>\r\n  </Toast.Header>\r\n  <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\r\n</Toast>\r\n`;\r\nconst jsCode2 = `\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showA: true,\r\n      showB: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { showA, showB } = this.state;\r\n    const toggleShowA = () => this.setState({ showA: !showA });\r\n    const toggleShowB = () => this.setState({ showB: !showB });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast show={showA} onClose={toggleShowA}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowA}>\r\n            Toggle Toast <strong>with</strong> Animation\r\n          </Button>\r\n        </Col>\r\n        <Col xs={6} className=\"my-1\">\r\n          <Toast onClose={toggleShowB} show={showB} animation={false}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowB}>\r\n            Toggle Toast <strong>without</strong> Animation\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode3 = `\r\n<>\r\n  <Toast>\r\n    <Toast.Header>\r\n      <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n      <strong className=\"mr-auto\">Bootstrap</strong>\r\n      <small>just now</small>\r\n    </Toast.Header>\r\n    <Toast.Body>See? Just like this.</Toast.Body>\r\n  </Toast>\r\n  <Toast>\r\n    <Toast.Header>\r\n      <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n      <strong className=\"mr-auto\">Bootstrap</strong>\r\n      <small>2 seconds ago</small>\r\n    </Toast.Header>\r\n    <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\r\n  </Toast>\r\n</>\r\n`;\r\nconst jsCode4 = `\r\n<div\r\n  aria-live=\"polite\"\r\n  aria-atomic=\"true\"\r\n  style={{\r\n    position: 'relative',\r\n    minHeight: '200px',\r\n  }}\r\n>\r\n  <div\r\n    style={{\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n    }}\r\n  >\r\n    <Toast>\r\n      <Toast.Header>\r\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n        <strong className=\"mr-auto\">Bootstrap</strong>\r\n        <small>just now</small>\r\n      </Toast.Header>\r\n      <Toast.Body>See? Just like this.</Toast.Body>\r\n    </Toast>\r\n    <Toast>\r\n      <Toast.Header>\r\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n        <strong className=\"mr-auto\">Bootstrap</strong>\r\n        <small>2 seconds ago</small>\r\n      </Toast.Header>\r\n      <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\r\n    </Toast>\r\n  </div>\r\n</div>\r\n`;\r\nconst jsCode5 = `\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.state;\r\n    const handleShow = () => this.setState({ show: true });\r\n    const handleClose = () => this.setState({ show: false });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast onClose={handleClose} show={show} delay={3000} autohide>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={handleShow}>Show Toast</Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}