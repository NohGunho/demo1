{"ast":null,"code":"var _jsxFileName = \"/Users/chosun/Project/demo1/front-end/src/_metronic/layout/Layout.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport objectPath from \"object-path\";\nimport Header from \"./header/Header\";\nimport SubHeader from \"./sub-header/SubHeader\";\nimport HeaderMobile from \"./header/HeaderMobile\";\nimport AsideLeft from \"./aside/AsideLeft\";\nimport Footer from \"./footer/Footer\";\nimport ScrollTop from \"../../app/partials/layout/ScrollTop\";\nimport StickyToolbar from \"../../app/partials/layout/StickyToolbar\";\nimport HTMLClassService from \"./HTMLClassService\";\nimport LayoutConfig from \"./LayoutConfig\";\nimport MenuConfig from \"./MenuConfig\";\nimport LayoutInitializer from \"./LayoutInitializer\";\nimport QuickPanel from \"../../app/partials/layout/QuickPanel\";\nimport KtContent from \"./KtContent\";\nimport \"./assets/Base.scss\";\nvar htmlClassService = new HTMLClassService();\n\nfunction Layout(_ref) {\n  var children = _ref.children,\n      asideDisplay = _ref.asideDisplay,\n      subheaderDisplay = _ref.subheaderDisplay,\n      selfLayout = _ref.selfLayout,\n      layoutConfig = _ref.layoutConfig,\n      contentContainerClasses = _ref.contentContainerClasses;\n  htmlClassService.setConfig(layoutConfig); // scroll to top after location changes\n  // window.scrollTo(0, 0);\n\n  var contentCssClasses = htmlClassService.classes.content.join(\" \");\n  return selfLayout !== \"blank\" ? React.createElement(LayoutInitializer, {\n    menuConfig: MenuConfig,\n    layoutConfig: LayoutConfig,\n    htmlClassService: htmlClassService,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(HeaderMobile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-grid kt-grid--hor kt-grid--root\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--ver kt-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, asideDisplay && React.createElement(React.Fragment, null, React.createElement(AsideLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-wrapper\",\n    id: \"kt_wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"kt_content\",\n    className: \"kt-content \".concat(contentCssClasses, \" kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, subheaderDisplay && React.createElement(SubHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(KtContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, children)), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })))), React.createElement(QuickPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(ScrollTop, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(StickyToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })) : // BLANK LAYOUT\n  React.createElement(\"div\", {\n    className: \"kt-grid kt-grid--ver kt-grid--root\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(KtContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, children));\n}\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var layoutConfig = _ref2.builder.layoutConfig;\n  return {\n    layoutConfig: layoutConfig,\n    selfLayout: objectPath.get(layoutConfig, \"self.layout\"),\n    asideDisplay: objectPath.get(layoutConfig, \"aside.self.display\"),\n    subheaderDisplay: objectPath.get(layoutConfig, \"subheader.display\"),\n    desktopHeaderDisplay: objectPath.get(layoutConfig, \"header.self.fixed.desktop\"),\n    contentContainerClasses: \"\" // contentContainerClasses: builder.selectors.getClasses(store, {\n    //   path: \"content_container\",\n    //   toString: true\n    // })\n\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);","map":{"version":3,"sources":["/Users/chosun/Project/demo1/front-end/src/_metronic/layout/Layout.js"],"names":["React","connect","objectPath","Header","SubHeader","HeaderMobile","AsideLeft","Footer","ScrollTop","StickyToolbar","HTMLClassService","LayoutConfig","MenuConfig","LayoutInitializer","QuickPanel","KtContent","htmlClassService","Layout","children","asideDisplay","subheaderDisplay","selfLayout","layoutConfig","contentContainerClasses","setConfig","contentCssClasses","classes","content","join","mapStateToProps","builder","get","desktopHeaderDisplay"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport objectPath from \"object-path\";\r\nimport Header from \"./header/Header\";\r\nimport SubHeader from \"./sub-header/SubHeader\";\r\nimport HeaderMobile from \"./header/HeaderMobile\";\r\nimport AsideLeft from \"./aside/AsideLeft\";\r\nimport Footer from \"./footer/Footer\";\r\nimport ScrollTop from \"../../app/partials/layout/ScrollTop\";\r\nimport StickyToolbar from \"../../app/partials/layout/StickyToolbar\";\r\nimport HTMLClassService from \"./HTMLClassService\";\r\nimport LayoutConfig from \"./LayoutConfig\";\r\nimport MenuConfig from \"./MenuConfig\";\r\nimport LayoutInitializer from \"./LayoutInitializer\";\r\nimport QuickPanel from \"../../app/partials/layout/QuickPanel\";\r\nimport KtContent from \"./KtContent\";\r\nimport \"./assets/Base.scss\";\r\n\r\nconst htmlClassService = new HTMLClassService();\r\n\r\nfunction Layout({\r\n  children,\r\n  asideDisplay,\r\n  subheaderDisplay,\r\n  selfLayout,\r\n  layoutConfig,\r\n  contentContainerClasses\r\n}) {\r\n  htmlClassService.setConfig(layoutConfig);\r\n  // scroll to top after location changes\r\n  // window.scrollTo(0, 0);\r\n\r\n  const contentCssClasses = htmlClassService.classes.content.join(\" \");\r\n\r\n  return selfLayout !== \"blank\" ? (\r\n    <LayoutInitializer\r\n      menuConfig={MenuConfig}\r\n      layoutConfig={LayoutConfig}\r\n      htmlClassService={htmlClassService}\r\n    >\r\n      {/* <!-- begin:: Header Mobile --> */}\r\n      <HeaderMobile />\r\n      {/* <!-- end:: Header Mobile --> */}\r\n\r\n      <div className=\"kt-grid kt-grid--hor kt-grid--root\">\r\n        {/* <!-- begin::Body --> */}\r\n        <div className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--ver kt-page\">\r\n          {/* <!-- begin:: Aside Left --> */}\r\n          {asideDisplay && (\r\n            <>\r\n              <AsideLeft />\r\n            </>\r\n          )}\r\n          {/* <!-- end:: Aside Left --> */}\r\n          <div\r\n            className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-wrapper\"\r\n            id=\"kt_wrapper\"\r\n          >\r\n            {/* <!-- begin:: Header READY --> */}\r\n\r\n            <Header />\r\n            {/* <!-- end:: Header --> */}\r\n\r\n            {/* <!-- begin:: Content --> */}\r\n            <div\r\n              id=\"kt_content\"\r\n              className={`kt-content ${contentCssClasses} kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor`}\r\n            >\r\n              {/* <!-- begin:: Content Head --> */}\r\n              {subheaderDisplay && (\r\n                <SubHeader />\r\n              )}\r\n              {/* <!-- end:: Content Head --> */}\r\n\r\n              {/* <!-- begin:: Content Body --> */}\r\n              {/* TODO: add class to animate  kt-grid--animateContent-finished */}\r\n              <KtContent>\r\n                {children}\r\n              </KtContent>\r\n              {/*<!-- end:: Content Body -->*/}\r\n            </div>\r\n            {/* <!-- end:: Content --> */}\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n        {/* <!-- end:: Body --> */}\r\n      </div>\r\n      <QuickPanel />\r\n      <ScrollTop />\r\n      <StickyToolbar />\r\n    </LayoutInitializer>\r\n  ) : (\r\n    // BLANK LAYOUT\r\n    <div className=\"kt-grid kt-grid--ver kt-grid--root\">\r\n      <KtContent>\r\n        {children}\r\n      </KtContent>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ builder: { layoutConfig } }) => ({\r\n  layoutConfig,\r\n  selfLayout: objectPath.get(layoutConfig, \"self.layout\"),\r\n  asideDisplay: objectPath.get(layoutConfig, \"aside.self.display\"),\r\n  subheaderDisplay: objectPath.get(layoutConfig, \"subheader.display\"),\r\n  desktopHeaderDisplay: objectPath.get(\r\n    layoutConfig,\r\n    \"header.self.fixed.desktop\"\r\n  ),\r\n  contentContainerClasses: \"\"\r\n  // contentContainerClasses: builder.selectors.getClasses(store, {\r\n  //   path: \"content_container\",\r\n  //   toString: true\r\n  // })\r\n});\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n"]},"metadata":{},"sourceType":"module"}