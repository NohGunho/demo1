{"ast":null,"code":"var _jsxFileName = \"/Users/chosun/Project/client/src/App.js\";\n\n/**\r\n * Entry application component used to compose providers and render Routes.\r\n * */\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { LastLocationProvider } from \"react-router-last-location\";\nimport { Routes } from \"./app/router/Routes\";\nimport { I18nProvider, LayoutSplashScreen, ThemeProvider } from \"./_metronic\";\nexport default function App(_ref) {\n  var store = _ref.store,\n      persistor = _ref.persistor,\n      basename = _ref.basename;\n  return (\n    /* Provide Redux store */\n    React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(PersistGate, {\n      persistor: persistor,\n      loading: React.createElement(LayoutSplashScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(React.Suspense, {\n      fallback: React.createElement(LayoutSplashScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      basename: basename,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(LastLocationProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(ThemeProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(I18nProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Routes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))))))))\n  );\n}","map":{"version":3,"sources":["/Users/chosun/Project/client/src/App.js"],"names":["React","Provider","BrowserRouter","PersistGate","LastLocationProvider","Routes","I18nProvider","LayoutSplashScreen","ThemeProvider","App","store","persistor","basename"],"mappings":";;AAAA;;;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,oBAAT,QAAqC,4BAArC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,YAAT,EAAuBC,kBAAvB,EAA2CC,aAA3C,QAAgE,aAAhE;AAEA,eAAe,SAASC,GAAT,OAA6C;AAAA,MAA9BC,KAA8B,QAA9BA,KAA8B;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC1D;AACE;AACA,wBAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEC,SAAxB;AAAmC,MAAA,OAAO,EAAE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,QAAQ,EAAE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAEC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CAFF,CAFF,CAFF,CAFF,CAFF;AAFF;AAyBD","sourcesContent":["/**\r\n * Entry application component used to compose providers and render Routes.\r\n * */\r\n\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { LastLocationProvider } from \"react-router-last-location\";\r\nimport { Routes } from \"./app/router/Routes\";\r\nimport { I18nProvider, LayoutSplashScreen, ThemeProvider } from \"./_metronic\";\r\n\r\nexport default function App({ store, persistor, basename }) {\r\n  return (\r\n    /* Provide Redux store */\r\n    <Provider store={store}>\r\n      {/* Asynchronously persist redux stores and show `SplashScreen` while it's loading. */}\r\n      <PersistGate persistor={persistor} loading={<LayoutSplashScreen />}>\r\n        {/* Add high level `Suspense` in case if was not handled inside the React tree. */}\r\n        <React.Suspense fallback={<LayoutSplashScreen />}>\r\n          {/* Override `basename` (e.g: `homepage` in `package.json`) */}\r\n          <BrowserRouter basename={basename}>\r\n            {/*This library only returns the location that has been active before the recent location change in the current window lifetime.*/}\r\n            <LastLocationProvider>\r\n              {/* Provide Metronic theme overrides. */}\r\n              <ThemeProvider>\r\n                {/* Provide `react-intl` context synchronized with Redux state.  */}\r\n                <I18nProvider>\r\n                  {/* Render routes with provided `Layout`. */}\r\n                  <Routes />\r\n                </I18nProvider>\r\n              </ThemeProvider>\r\n            </LastLocationProvider>\r\n          </BrowserRouter>\r\n        </React.Suspense>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}