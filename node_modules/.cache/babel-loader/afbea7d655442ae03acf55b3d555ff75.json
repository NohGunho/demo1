{"ast":null,"code":"var _jsxFileName = \"/Users/chosun/Project/demo1/src/app/pages/home/Dashboard.js\";\nimport React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { metronic } from \"../../../_metronic\";\nimport HighCharts from \"../../widgets/HighChartForm\";\nexport default function Dashboard() {\n  var _useSelector = useSelector(function (state) {\n    return {\n      brandColor: metronic.builder.selectors.getConfig(state, \"colors.state.brand\"),\n      dangerColor: metronic.builder.selectors.getConfig(state, \"colors.state.danger\"),\n      successColor: metronic.builder.selectors.getConfig(state, \"colors.state.success\"),\n      primaryColor: metronic.builder.selectors.getConfig(state, \"colors.state.primary\")\n    };\n  }),\n      brandColor = _useSelector.brandColor,\n      dangerColor = _useSelector.dangerColor,\n      successColor = _useSelector.successColor,\n      primaryColor = _useSelector.primaryColor;\n\n  var chartOptions = useMemo(function () {\n    return {\n      chart1: {\n        data: [10, 14, 18, 11, 9, 12, 14, 17, 18, 14],\n        color: brandColor,\n        border: 3\n      },\n      chart2: {\n        data: [11, 12, 18, 13, 11, 12, 15, 13, 19, 15],\n        color: dangerColor,\n        border: 3\n      },\n      chart3: {\n        data: [12, 12, 18, 11, 15, 12, 13, 16, 11, 18],\n        color: successColor,\n        border: 3\n      },\n      chart4: {\n        data: [11, 9, 13, 18, 13, 15, 14, 13, 18, 15],\n        color: primaryColor,\n        border: 3\n      }\n    };\n  }, [brandColor, dangerColor, primaryColor, successColor]);\n  return React.createElement(React.Fragment, null, React.createElement(HighCharts, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/chosun/Project/demo1/src/app/pages/home/Dashboard.js"],"names":["React","useMemo","useSelector","metronic","HighCharts","Dashboard","state","brandColor","builder","selectors","getConfig","dangerColor","successColor","primaryColor","chartOptions","chart1","data","color","border","chart2","chart3","chart4"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA,qBAC8BH,WAAW,CACzE,UAAAI,KAAK;AAAA,WAAK;AACRC,MAAAA,UAAU,EAAEJ,QAAQ,CAACK,OAAT,CAAiBC,SAAjB,CAA2BC,SAA3B,CACVJ,KADU,EAEV,oBAFU,CADJ;AAKRK,MAAAA,WAAW,EAAER,QAAQ,CAACK,OAAT,CAAiBC,SAAjB,CAA2BC,SAA3B,CACXJ,KADW,EAEX,qBAFW,CALL;AASRM,MAAAA,YAAY,EAAET,QAAQ,CAACK,OAAT,CAAiBC,SAAjB,CAA2BC,SAA3B,CACZJ,KADY,EAEZ,sBAFY,CATN;AAaRO,MAAAA,YAAY,EAAEV,QAAQ,CAACK,OAAT,CAAiBC,SAAjB,CAA2BC,SAA3B,CACZJ,KADY,EAEZ,sBAFY;AAbN,KAAL;AAAA,GADoE,CADzC;AAAA,MAC1BC,UAD0B,gBAC1BA,UAD0B;AAAA,MACdI,WADc,gBACdA,WADc;AAAA,MACDC,YADC,gBACDA,YADC;AAAA,MACaC,YADb,gBACaA,YADb;;AAsBlC,MAAMC,YAAY,GAAGb,OAAO,CAC1B;AAAA,WAAO;AACLc,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,CAAjB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,CADA;AAENC,QAAAA,KAAK,EAAEV,UAFD;AAGNW,QAAAA,MAAM,EAAE;AAHF,OADH;AAOLC,MAAAA,MAAM,EAAE;AACNH,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,CADA;AAENC,QAAAA,KAAK,EAAEN,WAFD;AAGNO,QAAAA,MAAM,EAAE;AAHF,OAPH;AAaLE,MAAAA,MAAM,EAAE;AACNJ,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,CADA;AAENC,QAAAA,KAAK,EAAEL,YAFD;AAGNM,QAAAA,MAAM,EAAE;AAHF,OAbH;AAmBLG,MAAAA,MAAM,EAAE;AACNL,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,CADA;AAENC,QAAAA,KAAK,EAAEJ,YAFD;AAGNK,QAAAA,MAAM,EAAE;AAHF;AAnBH,KAAP;AAAA,GAD0B,EA0B1B,CAACX,UAAD,EAAaI,WAAb,EAA0BE,YAA1B,EAAwCD,YAAxC,CA1B0B,CAA5B;AA6BA,SACE,0CACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { metronic } from \"../../../_metronic\";\r\n\r\nimport HighCharts from \"../../widgets/HighChartForm\";\r\n\r\nexport default function Dashboard() {\r\n  const { brandColor, dangerColor, successColor, primaryColor } = useSelector(\r\n    state => ({\r\n      brandColor: metronic.builder.selectors.getConfig(\r\n        state,\r\n        \"colors.state.brand\"\r\n      ),\r\n      dangerColor: metronic.builder.selectors.getConfig(\r\n        state,\r\n        \"colors.state.danger\"\r\n      ),\r\n      successColor: metronic.builder.selectors.getConfig(\r\n        state,\r\n        \"colors.state.success\"\r\n      ),\r\n      primaryColor: metronic.builder.selectors.getConfig(\r\n        state,\r\n        \"colors.state.primary\"\r\n      )\r\n    })\r\n  );\r\n\r\n  const chartOptions = useMemo(\r\n    () => ({\r\n      chart1: {\r\n        data: [10, 14, 18, 11, 9, 12, 14, 17, 18, 14],\r\n        color: brandColor,\r\n        border: 3\r\n      },\r\n\r\n      chart2: {\r\n        data: [11, 12, 18, 13, 11, 12, 15, 13, 19, 15],\r\n        color: dangerColor,\r\n        border: 3\r\n      },\r\n\r\n      chart3: {\r\n        data: [12, 12, 18, 11, 15, 12, 13, 16, 11, 18],\r\n        color: successColor,\r\n        border: 3\r\n      },\r\n\r\n      chart4: {\r\n        data: [11, 9, 13, 18, 13, 15, 14, 13, 18, 15],\r\n        color: primaryColor,\r\n        border: 3\r\n      }\r\n    }),\r\n    [brandColor, dangerColor, primaryColor, successColor]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <HighCharts />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}