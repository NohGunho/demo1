{"ast":null,"code":"import _defineProperty from \"/Users/chosun/Project/demo1/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/chosun/Project/demo1/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/chosun/Project/demo1/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/chosun/Project/demo1/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _handleActions;\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(authSaga);\n\nimport { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\nvar CHANGE_FIELD = 'auth/CHANGE_FIELD';\nvar INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\n\nvar _createRequestActionT = createRequestActionTypes('auth/REGISTER'),\n    _createRequestActionT2 = _slicedToArray(_createRequestActionT, 3),\n    REGISTER = _createRequestActionT2[0],\n    REGISTER_SUCCESS = _createRequestActionT2[1],\n    REGISTER_FAILURE = _createRequestActionT2[2];\n\nvar _createRequestActionT3 = createRequestActionTypes('auth/LOGIN'),\n    _createRequestActionT4 = _slicedToArray(_createRequestActionT3, 3),\n    LOGIN = _createRequestActionT4[0],\n    LOGIN_SUCCESS = _createRequestActionT4[1],\n    LOGIN_FAILURE = _createRequestActionT4[2];\n\nexport var changeField = createAction(CHANGE_FIELD, function (_ref) {\n  var form = _ref.form,\n      key = _ref.key,\n      value = _ref.value;\n  return {\n    form: form,\n    // 로그인 , 사용신청\n    key: key,\n    // 이름 , 비밀번호, google otp\n    value: value // 실제 바꾸려는 값\n\n  };\n});\nexport var initializeForm = createAction(INITIALIZE_FORM, function (form) {\n  return form;\n}); //사용신청\n\nexport var register = createAction(REGISTER, function (_ref2) {\n  var username = _ref2.username,\n      password = _ref2.password;\n  return {\n    username: username,\n    password: password\n  };\n}); //로그인\n\nexport var login = createAction(LOGIN, function (_ref3) {\n  var username = _ref3.username,\n      password = _ref3.password;\n  return {\n    username: username,\n    password: password\n  };\n}); //사가 생성\n\nvar registerSaga = createRequestSaga(REGISTER, authAPI.register);\nvar loginSaga = createRequestSaga(LOGIN, authAPI.login);\nexport function authSaga() {\n  return _regeneratorRuntime.wrap(function authSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLatest(REGISTER, registerSaga);\n\n        case 2:\n          _context.next = 4;\n          return takeLatest(LOGIN, loginSaga);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nvar initialState = {\n  register: {\n    username: '',\n    password: ''\n  },\n  login: {\n    username: '',\n    password: '',\n    googleOtp: ''\n  },\n  auth: null,\n  authError: null\n};\nvar auth = handleActions((_handleActions = {}, _defineProperty(_handleActions, CHANGE_FIELD, function (state, _ref4) {\n  var _ref4$payload = _ref4.payload,\n      form = _ref4$payload.form,\n      key = _ref4$payload.key,\n      value = _ref4$payload.value;\n  return produce(state, function (draft) {\n    draft[form][key] = value; // 예 :  state.register.username을 바꾼다.\n  });\n}), _defineProperty(_handleActions, INITIALIZE_FORM, function (state, _ref5) {\n  var _objectSpread2;\n\n  var form = _ref5.payload;\n  return _objectSpread({}, state, (_objectSpread2 = {}, _defineProperty(_objectSpread2, form, initialState[form]), _defineProperty(_objectSpread2, \"authError\", null), _objectSpread2));\n}), _defineProperty(_handleActions, REGISTER_SUCCESS, function (state, _ref6) {\n  var auth = _ref6.payload;\n  return _objectSpread({}, state, {\n    authError: null,\n    auth: auth\n  });\n}), _defineProperty(_handleActions, REGISTER_FAILURE, function (state, _ref7) {\n  var error = _ref7.payload;\n  return _objectSpread({}, state, {\n    authError: error\n  });\n}), _defineProperty(_handleActions, LOGIN_SUCCESS, function (state, _ref8) {\n  var auth = _ref8.payload;\n  return _objectSpread({}, state, {\n    authError: null,\n    auth: auth\n  });\n}), _defineProperty(_handleActions, LOGIN_FAILURE, function (state, _ref9) {\n  var error = _ref9.payload;\n  return _objectSpread({}, state, {\n    authError: error\n  });\n}), _handleActions), initialState);\nexport default auth;","map":{"version":3,"sources":["/Users/chosun/Project/demo1/front-end/src/app/modules/auth.js"],"names":["authSaga","createAction","handleActions","produce","takeLatest","createRequestSaga","createRequestActionTypes","authAPI","CHANGE_FIELD","INITIALIZE_FORM","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","key","value","initializeForm","register","username","password","login","registerSaga","loginSaga","initialState","googleOtp","auth","authError","state","payload","draft","error"],"mappings":"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","sourcesContent":["import {createAction , handleActions} from 'redux-actions';\nimport produce from 'immer';\nimport {takeLatest} from 'redux-saga/effects';\nimport createRequestSaga,{createRequestActionTypes} from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\n\n\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\n\nconst [REGISTER , REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\n    'auth/REGISTER'\n);\nconst [LOGIN , LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\n    'auth/LOGIN'\n);\n\nexport const changeField = createAction(\n    CHANGE_FIELD,\n    ({form,key,value}) => ({\n        form, // 로그인 , 사용신청\n        key, // 이름 , 비밀번호, google otp\n        value, // 실제 바꾸려는 값\n    }),\n);\n\nexport const initializeForm = createAction(INITIALIZE_FORM, form => form);\n\n//사용신청\nexport const register = createAction(REGISTER, ({username,password})=> ({\n    username,\n    password,\n}));\n//로그인\nexport const login = createAction(LOGIN, ({username,password})=> ({\n    username,\n    password,\n}));\n\n//사가 생성\nconst registerSaga = createRequestSaga(REGISTER,authAPI.register);\nconst loginSaga = createRequestSaga(LOGIN,authAPI.login);\nexport function* authSaga(){\n    yield takeLatest(REGISTER,registerSaga);\n    yield takeLatest(LOGIN,loginSaga);\n}\n\nconst initialState = {\n    register : {\n        username : '',\n        password : '',\n    },\n    login : {\n        username : '',\n        password : '',\n        googleOtp : '',\n    },\n    auth:null,\n    authError:null,\n};\n\nconst auth = handleActions(\n    {\n        [CHANGE_FIELD] : (state , {payload : { form,key,value}}) =>\n        produce(state, draft => {\n            draft[form][key] = value; // 예 :  state.register.username을 바꾼다.\n        }),\n        [INITIALIZE_FORM] : (state, { payload : form }) => ({\n            ...state,\n            [form]: initialState[form],\n            authError:null,\n        }),\n        //회원가입 성공\n        [REGISTER_SUCCESS] : (state, {payload:auth}) => ({\n            ...state,\n            authError:null,\n            auth,\n        }),\n        //회원가입 실패\n        [REGISTER_FAILURE] : (state, {payload :error}) =>({\n            ...state,\n            authError:error,\n        }),\n        //로그인 성공\n        [LOGIN_SUCCESS] : (state, {payload:auth}) => ({\n            ...state,\n            authError:null,\n            auth,\n        }),\n        //로그인 실패\n        [LOGIN_FAILURE] : (state, {payload :error}) =>({\n            ...state,\n            authError:error,\n        }),\n    },\n    initialState,\n);\n\nexport default auth;"]},"metadata":{},"sourceType":"module"}