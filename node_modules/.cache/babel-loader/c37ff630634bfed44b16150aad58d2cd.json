{"ast":null,"code":"var _jsxFileName = \"/Users/chosun/Project/demo1/front-end/src/app/pages/home/google-material/data-displays/AvatarsExamplesPage.js\";\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport Notice from \"../../../../partials/content/Notice\";\nimport CodeExample from \"../../../../partials/content/CodeExample\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Avatar } from \"@material-ui/core\";\nimport { deepOrange, deepPurple, green, pink } from \"@material-ui/core/colors\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\"; // Example 1\n\nvar useStyles1 = makeStyles({\n  avatar: {\n    margin: 10\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 60,\n    height: 60\n  }\n}); // Example 2\n\nvar useStyles2 = makeStyles({\n  avatar: {\n    margin: 10\n  },\n  orangeAvatar: {\n    margin: 10,\n    color: \"#fff\",\n    backgroundColor: deepOrange[500]\n  },\n  purpleAvatar: {\n    margin: 10,\n    color: \"#fff\",\n    backgroundColor: deepPurple[500]\n  }\n}); // Example 3\n\nvar useStyles3 = makeStyles({\n  avatar: {\n    margin: 10\n  },\n  pinkAvatar: {\n    margin: 10,\n    color: \"#fff\",\n    backgroundColor: pink[500]\n  },\n  greenAvatar: {\n    margin: 10,\n    color: \"#fff\",\n    backgroundColor: green[500]\n  }\n});\nexport default function AvatarsExamplesPage() {\n  // Example 1\n  var classes1 = useStyles1(); // Example 2\n\n  var classes2 = useStyles2(); // Example 3\n\n  var classes3 = useStyles3();\n  return React.createElement(React.Fragment, null, React.createElement(Notice, {\n    icon: \"flaticon-warning kt-font-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Avatars are found throughout material design with uses in everything from tables to dialog menus.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"For more info please check the components's official\", \" \", React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"kt-link\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/avatars/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"demos & documentation\"))), React.createElement(CodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Image avatars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Image avatars can be created by passing standard \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"img\"), \" \", \"props \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"src\"), \" or \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"srcSet\"), \" into the component.\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: \"Remy Sharp\",\n    src: \"https://material-ui.com/static/images/avatar/1.jpg\",\n    className: classes1.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Avatar, {\n    alt: \"Remy Sharp\",\n    src: \"https://material-ui.com/static/images/avatar/1.jpg\",\n    className: classes1.bigAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))))), React.createElement(CodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Letter avatars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Avatars containing simple characters can be created by passing your string as \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"children\"), \".\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes2.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"H\"), React.createElement(Avatar, {\n    className: classes2.orangeAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"N\"), React.createElement(Avatar, {\n    className: classes2.purpleAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"OP\"))))), React.createElement(CodeExample, {\n    jsCode: jsCode3,\n    beforeCodeTitle: \"Icon avatars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"kt-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Icon avatars are created by passing an icon as \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"children\"), \".\"), React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes3.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(FolderIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })), React.createElement(Avatar, {\n    className: classes3.pinkAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(PageviewIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(Avatar, {\n    className: classes3.greenAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(AssignmentIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Avatar from '@material-ui/core/Avatar';\\nimport Grid from '@material-ui/core/Grid';\\n\\nconst useStyles = makeStyles({\\n  avatar: {\\n    margin: 10,\\n  },\\n  bigAvatar: {\\n    margin: 10,\\n    width: 60,\\n    height: 60,\\n  },\\n});\\n\\nexport default function ImageAvatars() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Grid container justify=\\\"center\\\" alignItems=\\\"center\\\">\\n      <Avatar alt=\\\"Remy Sharp\\\" src=\\\"/static/images/avatar/1.jpg\\\" className={classes.avatar} />\\n      <Avatar alt=\\\"Remy Sharp\\\" src=\\\"/static/images/avatar/1.jpg\\\" className={classes.bigAvatar} />\\n    </Grid>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Avatar from '@material-ui/core/Avatar';\\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\\nimport Grid from '@material-ui/core/Grid';\\n\\nconst useStyles = makeStyles({\\n  avatar: {\\n    margin: 10,\\n  },\\n  orangeAvatar: {\\n    margin: 10,\\n    color: '#fff',\\n    backgroundColor: deepOrange[500],\\n  },\\n  purpleAvatar: {\\n    margin: 10,\\n    color: '#fff',\\n    backgroundColor: deepPurple[500],\\n  },\\n});\\n\\nexport default function LetterAvatars() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Grid container justify=\\\"center\\\" alignItems=\\\"center\\\">\\n      <Avatar className={classes.avatar}>H</Avatar>\\n      <Avatar className={classes.orangeAvatar}>N</Avatar>\\n      <Avatar className={classes.purpleAvatar}>OP</Avatar>\\n    </Grid>\\n  );\\n}\\n\";\nvar jsCode3 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport { green, pink } from '@material-ui/core/colors';\\nimport Avatar from '@material-ui/core/Avatar';\\nimport FolderIcon from '@material-ui/icons/Folder';\\nimport PageviewIcon from '@material-ui/icons/Pageview';\\nimport AssignmentIcon from '@material-ui/icons/Assignment';\\nimport Grid from '@material-ui/core/Grid';\\n\\nconst useStyles = makeStyles({\\n  avatar: {\\n    margin: 10,\\n  },\\n  pinkAvatar: {\\n    margin: 10,\\n    color: '#fff',\\n    backgroundColor: pink[500],\\n  },\\n  greenAvatar: {\\n    margin: 10,\\n    color: '#fff',\\n    backgroundColor: green[500],\\n  },\\n});\\n\\nexport default function IconAvatars() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Grid container justify=\\\"center\\\" alignItems=\\\"center\\\">\\n      <Avatar className={classes.avatar}>\\n        <FolderIcon />\\n      </Avatar>\\n      <Avatar className={classes.pinkAvatar}>\\n        <PageviewIcon />\\n      </Avatar>\\n      <Avatar className={classes.greenAvatar}>\\n        <AssignmentIcon />\\n      </Avatar>\\n    </Grid>\\n  );\\n}\\n\";","map":{"version":3,"sources":["/Users/chosun/Project/demo1/front-end/src/app/pages/home/google-material/data-displays/AvatarsExamplesPage.js"],"names":["React","Notice","CodeExample","makeStyles","Grid","Avatar","deepOrange","deepPurple","green","pink","FolderIcon","PageviewIcon","AssignmentIcon","useStyles1","avatar","margin","bigAvatar","width","height","useStyles2","orangeAvatar","color","backgroundColor","purpleAvatar","useStyles3","pinkAvatar","greenAvatar","AvatarsExamplesPage","classes1","classes2","classes3","jsCode1","jsCode2","jsCode3"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport Notice from \"../../../../partials/content/Notice\";\r\nimport CodeExample from \"../../../../partials/content/CodeExample\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Avatar } from \"@material-ui/core\";\r\nimport { deepOrange, deepPurple, green, pink } from \"@material-ui/core/colors\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles({\r\n  avatar: {\r\n    margin: 10\r\n  },\r\n  bigAvatar: {\r\n    margin: 10,\r\n    width: 60,\r\n    height: 60\r\n  }\r\n});\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles({\r\n  avatar: {\r\n    margin: 10\r\n  },\r\n  orangeAvatar: {\r\n    margin: 10,\r\n    color: \"#fff\",\r\n    backgroundColor: deepOrange[500]\r\n  },\r\n  purpleAvatar: {\r\n    margin: 10,\r\n    color: \"#fff\",\r\n    backgroundColor: deepPurple[500]\r\n  }\r\n});\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles({\r\n  avatar: {\r\n    margin: 10\r\n  },\r\n  pinkAvatar: {\r\n    margin: 10,\r\n    color: \"#fff\",\r\n    backgroundColor: pink[500]\r\n  },\r\n  greenAvatar: {\r\n    margin: 10,\r\n    color: \"#fff\",\r\n    backgroundColor: green[500]\r\n  }\r\n});\r\n\r\nexport default function AvatarsExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning kt-font-primary\">\r\n        <p>\r\n          Avatars are found throughout material design with uses in everything\r\n          from tables to dialog menus.\r\n        </p>\r\n        <p>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"kt-link\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/avatars/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </p>\r\n      </Notice>\r\n\r\n      <CodeExample jsCode={jsCode1} beforeCodeTitle=\"Image avatars\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            Image avatars can be created by passing standard <code>img</code>{\" \"}\r\n            props <code>src</code> or <code>srcSet</code> into the component.\r\n          </span>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n          <div className=\"kt-section__content\">\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Avatar\r\n                alt=\"Remy Sharp\"\r\n                src=\"https://material-ui.com/static/images/avatar/1.jpg\"\r\n                className={classes1.avatar}\r\n              />\r\n              <Avatar\r\n                alt=\"Remy Sharp\"\r\n                src=\"https://material-ui.com/static/images/avatar/1.jpg\"\r\n                className={classes1.bigAvatar}\r\n              />\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n\r\n      <CodeExample jsCode={jsCode2} beforeCodeTitle=\"Letter avatars\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            Avatars containing simple characters can be created by passing your\r\n            string as <code>children</code>.\r\n          </span>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n          <div className=\"kt-section__content\">\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Avatar className={classes2.avatar}>H</Avatar>\r\n              <Avatar className={classes2.orangeAvatar}>N</Avatar>\r\n              <Avatar className={classes2.purpleAvatar}>OP</Avatar>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n\r\n      <CodeExample jsCode={jsCode3} beforeCodeTitle=\"Icon avatars\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            Icon avatars are created by passing an icon as <code>children</code>\r\n            .\r\n          </span>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n          <div className=\"kt-section__content\">\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Avatar className={classes3.avatar}>\r\n                <FolderIcon />\r\n              </Avatar>\r\n              <Avatar className={classes3.pinkAvatar}>\r\n                <PageviewIcon />\r\n              </Avatar>\r\n              <Avatar className={classes3.greenAvatar}>\r\n                <AssignmentIcon />\r\n              </Avatar>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    margin: 10,\r\n  },\r\n  bigAvatar: {\r\n    margin: 10,\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n});\r\n\r\nexport default function ImageAvatars() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\">\r\n      <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" className={classes.avatar} />\r\n      <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" className={classes.bigAvatar} />\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    margin: 10,\r\n  },\r\n  orangeAvatar: {\r\n    margin: 10,\r\n    color: '#fff',\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purpleAvatar: {\r\n    margin: 10,\r\n    color: '#fff',\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n});\r\n\r\nexport default function LetterAvatars() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\">\r\n      <Avatar className={classes.avatar}>H</Avatar>\r\n      <Avatar className={classes.orangeAvatar}>N</Avatar>\r\n      <Avatar className={classes.purpleAvatar}>OP</Avatar>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { green, pink } from '@material-ui/core/colors';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport PageviewIcon from '@material-ui/icons/Pageview';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    margin: 10,\r\n  },\r\n  pinkAvatar: {\r\n    margin: 10,\r\n    color: '#fff',\r\n    backgroundColor: pink[500],\r\n  },\r\n  greenAvatar: {\r\n    margin: 10,\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n});\r\n\r\nexport default function IconAvatars() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\">\r\n      <Avatar className={classes.avatar}>\r\n        <FolderIcon />\r\n      </Avatar>\r\n      <Avatar className={classes.pinkAvatar}>\r\n        <PageviewIcon />\r\n      </Avatar>\r\n      <Avatar className={classes.greenAvatar}>\r\n        <AssignmentIcon />\r\n      </Avatar>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}