let Koa,Router,bodyParser,mongoose,jwtMiddleware,api,createFakeData;_176‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_176‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_176‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_176‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_176‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);_176‍.w("./api",[["default",["api"],function(v){api=v}]]);_176‍.w("./createFakeData",[["default",["createFakeData"],function(v){createFakeData=v}]]);require('dotenv').config();








//테스트 데이터 만들기 위한 호출



const {PORT,MONGO_URI} = process.env;

mongoose
.connect(MONGO_URI, { useNewUrlParser:true, useFindAndModify:false})
    .then(()=> {
        console.log('Connected to MongoDB');
    })
    .catch(e => {
        _176‍.g.console.log(e);
    });

const app = new Koa();
const router = new Router();

router.use('/api',api.routes());

app.use(bodyParser());
app.use(jwtMiddleware);

app.use(router.routes()).use(router.allowedMethods());

const port = PORT||4000;
app.listen(port, () => {
    _176‍.g.console.log('Listen to port %d',port);
})
